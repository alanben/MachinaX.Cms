//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace clickclickboom.machinaX.blogX.cmsX.DisplayXMenusWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DisplayXMenusSoap", Namespace="http://www.clickclickBOOM.com/MachinaX/DisplayX")]
    public partial class DisplayXMenus : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListDDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMenuItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuMenuItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMenuItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditMenuItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMenuItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMenuMenuItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestExceptionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DisplayXMenus() {
            this.Url = global::clickclickboom.machinaX.blogX.cmsX.Properties.Settings.Default.CmsX_2_6_0_DisplayXMenusWS_DisplayXMenus;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListDDCompletedEventHandler ListDDCompleted;
        
        /// <remarks/>
        public event ListAllCompletedEventHandler ListAllCompleted;
        
        /// <remarks/>
        public event ListCompletedEventHandler ListCompleted;
        
        /// <remarks/>
        public event ListProfilesCompletedEventHandler ListProfilesCompleted;
        
        /// <remarks/>
        public event GetCompletedEventHandler GetCompleted;
        
        /// <remarks/>
        public event GetMenuCompletedEventHandler GetMenuCompleted;
        
        /// <remarks/>
        public event AddCompletedEventHandler AddCompleted;
        
        /// <remarks/>
        public event EditCompletedEventHandler EditCompleted;
        
        /// <remarks/>
        public event OrderCompletedEventHandler OrderCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event ListMenuItemsCompletedEventHandler ListMenuItemsCompleted;
        
        /// <remarks/>
        public event GetMenuItemsCompletedEventHandler GetMenuItemsCompleted;
        
        /// <remarks/>
        public event GetMenuMenuItemCompletedEventHandler GetMenuMenuItemCompleted;
        
        /// <remarks/>
        public event GetMenuItemCompletedEventHandler GetMenuItemCompleted;
        
        /// <remarks/>
        public event AddMenuItemCompletedEventHandler AddMenuItemCompleted;
        
        /// <remarks/>
        public event EditMenuItemCompletedEventHandler EditMenuItemCompleted;
        
        /// <remarks/>
        public event DeleteMenuItemCompletedEventHandler DeleteMenuItemCompleted;
        
        /// <remarks/>
        public event DeleteMenuMenuItemCompletedEventHandler DeleteMenuMenuItemCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event TestNameCompletedEventHandler TestNameCompleted;
        
        /// <remarks/>
        public event TestCustomCompletedEventHandler TestCustomCompleted;
        
        /// <remarks/>
        public event TestErrorCompletedEventHandler TestErrorCompleted;
        
        /// <remarks/>
        public event TestExceptionCompletedEventHandler TestExceptionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListDD", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListDD(string blogxID) {
            object[] results = this.Invoke("ListDD", new object[] {
                        blogxID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListDDAsync(string blogxID) {
            this.ListDDAsync(blogxID, null);
        }
        
        /// <remarks/>
        public void ListDDAsync(string blogxID, object userState) {
            if ((this.ListDDOperationCompleted == null)) {
                this.ListDDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListDDOperationCompleted);
            }
            this.InvokeAsync("ListDD", new object[] {
                        blogxID}, this.ListDDOperationCompleted, userState);
        }
        
        private void OnListDDOperationCompleted(object arg) {
            if ((this.ListDDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListDDCompleted(this, new ListDDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListAll", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListAll(string blogxID, string Profile, string SortBy, bool SortAscending) {
            object[] results = this.Invoke("ListAll", new object[] {
                        blogxID,
                        Profile,
                        SortBy,
                        SortAscending});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListAllAsync(string blogxID, string Profile, string SortBy, bool SortAscending) {
            this.ListAllAsync(blogxID, Profile, SortBy, SortAscending, null);
        }
        
        /// <remarks/>
        public void ListAllAsync(string blogxID, string Profile, string SortBy, bool SortAscending, object userState) {
            if ((this.ListAllOperationCompleted == null)) {
                this.ListAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllOperationCompleted);
            }
            this.InvokeAsync("ListAll", new object[] {
                        blogxID,
                        Profile,
                        SortBy,
                        SortAscending}, this.ListAllOperationCompleted, userState);
        }
        
        private void OnListAllOperationCompleted(object arg) {
            if ((this.ListAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAllCompleted(this, new ListAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/List", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode List(string blogxID, string Profile, string SortBy, bool SortAscending, bool SortNumber, int StartPage, int Rows) {
            object[] results = this.Invoke("List", new object[] {
                        blogxID,
                        Profile,
                        SortBy,
                        SortAscending,
                        SortNumber,
                        StartPage,
                        Rows});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListAsync(string blogxID, string Profile, string SortBy, bool SortAscending, bool SortNumber, int StartPage, int Rows) {
            this.ListAsync(blogxID, Profile, SortBy, SortAscending, SortNumber, StartPage, Rows, null);
        }
        
        /// <remarks/>
        public void ListAsync(string blogxID, string Profile, string SortBy, bool SortAscending, bool SortNumber, int StartPage, int Rows, object userState) {
            if ((this.ListOperationCompleted == null)) {
                this.ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOperationCompleted);
            }
            this.InvokeAsync("List", new object[] {
                        blogxID,
                        Profile,
                        SortBy,
                        SortAscending,
                        SortNumber,
                        StartPage,
                        Rows}, this.ListOperationCompleted, userState);
        }
        
        private void OnListOperationCompleted(object arg) {
            if ((this.ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCompleted(this, new ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListProfiles", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListProfiles(string blogxID) {
            object[] results = this.Invoke("ListProfiles", new object[] {
                        blogxID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListProfilesAsync(string blogxID) {
            this.ListProfilesAsync(blogxID, null);
        }
        
        /// <remarks/>
        public void ListProfilesAsync(string blogxID, object userState) {
            if ((this.ListProfilesOperationCompleted == null)) {
                this.ListProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListProfilesOperationCompleted);
            }
            this.InvokeAsync("ListProfiles", new object[] {
                        blogxID}, this.ListProfilesOperationCompleted, userState);
        }
        
        private void OnListProfilesOperationCompleted(object arg) {
            if ((this.ListProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListProfilesCompleted(this, new ListProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Get", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Get(string blogxID, int MenuID) {
            object[] results = this.Invoke("Get", new object[] {
                        blogxID,
                        MenuID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAsync(string blogxID, int MenuID) {
            this.GetAsync(blogxID, MenuID, null);
        }
        
        /// <remarks/>
        public void GetAsync(string blogxID, int MenuID, object userState) {
            if ((this.GetOperationCompleted == null)) {
                this.GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationCompleted);
            }
            this.InvokeAsync("Get", new object[] {
                        blogxID,
                        MenuID}, this.GetOperationCompleted, userState);
        }
        
        private void OnGetOperationCompleted(object arg) {
            if ((this.GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleted(this, new GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetMenu", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMenu(string blogxID, int MenuID) {
            object[] results = this.Invoke("GetMenu", new object[] {
                        blogxID,
                        MenuID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuAsync(string blogxID, int MenuID) {
            this.GetMenuAsync(blogxID, MenuID, null);
        }
        
        /// <remarks/>
        public void GetMenuAsync(string blogxID, int MenuID, object userState) {
            if ((this.GetMenuOperationCompleted == null)) {
                this.GetMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuOperationCompleted);
            }
            this.InvokeAsync("GetMenu", new object[] {
                        blogxID,
                        MenuID}, this.GetMenuOperationCompleted, userState);
        }
        
        private void OnGetMenuOperationCompleted(object arg) {
            if ((this.GetMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuCompleted(this, new GetMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Add", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Add(string blogxID, string name, string label, string profile, string display, string parentID, string logo, string link) {
            object[] results = this.Invoke("Add", new object[] {
                        blogxID,
                        name,
                        label,
                        profile,
                        display,
                        parentID,
                        logo,
                        link});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddAsync(string blogxID, string name, string label, string profile, string display, string parentID, string logo, string link) {
            this.AddAsync(blogxID, name, label, profile, display, parentID, logo, link, null);
        }
        
        /// <remarks/>
        public void AddAsync(string blogxID, string name, string label, string profile, string display, string parentID, string logo, string link, object userState) {
            if ((this.AddOperationCompleted == null)) {
                this.AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationCompleted);
            }
            this.InvokeAsync("Add", new object[] {
                        blogxID,
                        name,
                        label,
                        profile,
                        display,
                        parentID,
                        logo,
                        link}, this.AddOperationCompleted, userState);
        }
        
        private void OnAddOperationCompleted(object arg) {
            if ((this.AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCompleted(this, new AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Edit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Edit(string blogxID, int id, string name, string label, string profile, string display, string parentID, string logo, string link) {
            object[] results = this.Invoke("Edit", new object[] {
                        blogxID,
                        id,
                        name,
                        label,
                        profile,
                        display,
                        parentID,
                        logo,
                        link});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditAsync(string blogxID, int id, string name, string label, string profile, string display, string parentID, string logo, string link) {
            this.EditAsync(blogxID, id, name, label, profile, display, parentID, logo, link, null);
        }
        
        /// <remarks/>
        public void EditAsync(string blogxID, int id, string name, string label, string profile, string display, string parentID, string logo, string link, object userState) {
            if ((this.EditOperationCompleted == null)) {
                this.EditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditOperationCompleted);
            }
            this.InvokeAsync("Edit", new object[] {
                        blogxID,
                        id,
                        name,
                        label,
                        profile,
                        display,
                        parentID,
                        logo,
                        link}, this.EditOperationCompleted, userState);
        }
        
        private void OnEditOperationCompleted(object arg) {
            if ((this.EditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCompleted(this, new EditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Order", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Order(string blogxID, int id, int increment) {
            object[] results = this.Invoke("Order", new object[] {
                        blogxID,
                        id,
                        increment});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void OrderAsync(string blogxID, int id, int increment) {
            this.OrderAsync(blogxID, id, increment, null);
        }
        
        /// <remarks/>
        public void OrderAsync(string blogxID, int id, int increment, object userState) {
            if ((this.OrderOperationCompleted == null)) {
                this.OrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderOperationCompleted);
            }
            this.InvokeAsync("Order", new object[] {
                        blogxID,
                        id,
                        increment}, this.OrderOperationCompleted, userState);
        }
        
        private void OnOrderOperationCompleted(object arg) {
            if ((this.OrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderCompleted(this, new OrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Delete", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Delete(string blogxID, int id) {
            object[] results = this.Invoke("Delete", new object[] {
                        blogxID,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string blogxID, int id) {
            this.DeleteAsync(blogxID, id, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string blogxID, int id, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        blogxID,
                        id}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListMenuItems", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListMenuItems(string blogxID, int MenuID) {
            object[] results = this.Invoke("ListMenuItems", new object[] {
                        blogxID,
                        MenuID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListMenuItemsAsync(string blogxID, int MenuID) {
            this.ListMenuItemsAsync(blogxID, MenuID, null);
        }
        
        /// <remarks/>
        public void ListMenuItemsAsync(string blogxID, int MenuID, object userState) {
            if ((this.ListMenuItemsOperationCompleted == null)) {
                this.ListMenuItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMenuItemsOperationCompleted);
            }
            this.InvokeAsync("ListMenuItems", new object[] {
                        blogxID,
                        MenuID}, this.ListMenuItemsOperationCompleted, userState);
        }
        
        private void OnListMenuItemsOperationCompleted(object arg) {
            if ((this.ListMenuItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMenuItemsCompleted(this, new ListMenuItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetMenuItems", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMenuItems(string blogxID, int MenuID) {
            object[] results = this.Invoke("GetMenuItems", new object[] {
                        blogxID,
                        MenuID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuItemsAsync(string blogxID, int MenuID) {
            this.GetMenuItemsAsync(blogxID, MenuID, null);
        }
        
        /// <remarks/>
        public void GetMenuItemsAsync(string blogxID, int MenuID, object userState) {
            if ((this.GetMenuItemsOperationCompleted == null)) {
                this.GetMenuItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuItemsOperationCompleted);
            }
            this.InvokeAsync("GetMenuItems", new object[] {
                        blogxID,
                        MenuID}, this.GetMenuItemsOperationCompleted, userState);
        }
        
        private void OnGetMenuItemsOperationCompleted(object arg) {
            if ((this.GetMenuItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuItemsCompleted(this, new GetMenuItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetMenuMenuItem", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMenuMenuItem(string blogxID, int MenuID, int MenuItemID) {
            object[] results = this.Invoke("GetMenuMenuItem", new object[] {
                        blogxID,
                        MenuID,
                        MenuItemID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuMenuItemAsync(string blogxID, int MenuID, int MenuItemID) {
            this.GetMenuMenuItemAsync(blogxID, MenuID, MenuItemID, null);
        }
        
        /// <remarks/>
        public void GetMenuMenuItemAsync(string blogxID, int MenuID, int MenuItemID, object userState) {
            if ((this.GetMenuMenuItemOperationCompleted == null)) {
                this.GetMenuMenuItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuMenuItemOperationCompleted);
            }
            this.InvokeAsync("GetMenuMenuItem", new object[] {
                        blogxID,
                        MenuID,
                        MenuItemID}, this.GetMenuMenuItemOperationCompleted, userState);
        }
        
        private void OnGetMenuMenuItemOperationCompleted(object arg) {
            if ((this.GetMenuMenuItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuMenuItemCompleted(this, new GetMenuMenuItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetMenuItem", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMenuItem(string blogxID, int MenuItemID) {
            object[] results = this.Invoke("GetMenuItem", new object[] {
                        blogxID,
                        MenuItemID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuItemAsync(string blogxID, int MenuItemID) {
            this.GetMenuItemAsync(blogxID, MenuItemID, null);
        }
        
        /// <remarks/>
        public void GetMenuItemAsync(string blogxID, int MenuItemID, object userState) {
            if ((this.GetMenuItemOperationCompleted == null)) {
                this.GetMenuItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuItemOperationCompleted);
            }
            this.InvokeAsync("GetMenuItem", new object[] {
                        blogxID,
                        MenuItemID}, this.GetMenuItemOperationCompleted, userState);
        }
        
        private void OnGetMenuItemOperationCompleted(object arg) {
            if ((this.GetMenuItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuItemCompleted(this, new GetMenuItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/AddMenuItem", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddMenuItem(string blogxID, int MenuID, string Label, string Link, string Display, [System.Xml.Serialization.XmlElementAttribute("Order")] int Order1, string Logo, string Extra) {
            object[] results = this.Invoke("AddMenuItem", new object[] {
                        blogxID,
                        MenuID,
                        Label,
                        Link,
                        Display,
                        Order1,
                        Logo,
                        Extra});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddMenuItemAsync(string blogxID, int MenuID, string Label, string Link, string Display, int Order1, string Logo, string Extra) {
            this.AddMenuItemAsync(blogxID, MenuID, Label, Link, Display, Order1, Logo, Extra, null);
        }
        
        /// <remarks/>
        public void AddMenuItemAsync(string blogxID, int MenuID, string Label, string Link, string Display, int Order1, string Logo, string Extra, object userState) {
            if ((this.AddMenuItemOperationCompleted == null)) {
                this.AddMenuItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMenuItemOperationCompleted);
            }
            this.InvokeAsync("AddMenuItem", new object[] {
                        blogxID,
                        MenuID,
                        Label,
                        Link,
                        Display,
                        Order1,
                        Logo,
                        Extra}, this.AddMenuItemOperationCompleted, userState);
        }
        
        private void OnAddMenuItemOperationCompleted(object arg) {
            if ((this.AddMenuItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMenuItemCompleted(this, new AddMenuItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditMenuItem", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditMenuItem(string blogxID, int MenuID, int MenuItemID, string Label, string Link, string Display, [System.Xml.Serialization.XmlElementAttribute("Order")] int Order1, string Logo, string Extra) {
            object[] results = this.Invoke("EditMenuItem", new object[] {
                        blogxID,
                        MenuID,
                        MenuItemID,
                        Label,
                        Link,
                        Display,
                        Order1,
                        Logo,
                        Extra});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditMenuItemAsync(string blogxID, int MenuID, int MenuItemID, string Label, string Link, string Display, int Order1, string Logo, string Extra) {
            this.EditMenuItemAsync(blogxID, MenuID, MenuItemID, Label, Link, Display, Order1, Logo, Extra, null);
        }
        
        /// <remarks/>
        public void EditMenuItemAsync(string blogxID, int MenuID, int MenuItemID, string Label, string Link, string Display, int Order1, string Logo, string Extra, object userState) {
            if ((this.EditMenuItemOperationCompleted == null)) {
                this.EditMenuItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditMenuItemOperationCompleted);
            }
            this.InvokeAsync("EditMenuItem", new object[] {
                        blogxID,
                        MenuID,
                        MenuItemID,
                        Label,
                        Link,
                        Display,
                        Order1,
                        Logo,
                        Extra}, this.EditMenuItemOperationCompleted, userState);
        }
        
        private void OnEditMenuItemOperationCompleted(object arg) {
            if ((this.EditMenuItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditMenuItemCompleted(this, new EditMenuItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/DeleteMenuItem", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteMenuItem(string blogxID, int MenuItemID) {
            object[] results = this.Invoke("DeleteMenuItem", new object[] {
                        blogxID,
                        MenuItemID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMenuItemAsync(string blogxID, int MenuItemID) {
            this.DeleteMenuItemAsync(blogxID, MenuItemID, null);
        }
        
        /// <remarks/>
        public void DeleteMenuItemAsync(string blogxID, int MenuItemID, object userState) {
            if ((this.DeleteMenuItemOperationCompleted == null)) {
                this.DeleteMenuItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMenuItemOperationCompleted);
            }
            this.InvokeAsync("DeleteMenuItem", new object[] {
                        blogxID,
                        MenuItemID}, this.DeleteMenuItemOperationCompleted, userState);
        }
        
        private void OnDeleteMenuItemOperationCompleted(object arg) {
            if ((this.DeleteMenuItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMenuItemCompleted(this, new DeleteMenuItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/DeleteMenuMenuItem", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteMenuMenuItem(string blogxID, int MenuID, int MenuItemID) {
            object[] results = this.Invoke("DeleteMenuMenuItem", new object[] {
                        blogxID,
                        MenuID,
                        MenuItemID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMenuMenuItemAsync(string blogxID, int MenuID, int MenuItemID) {
            this.DeleteMenuMenuItemAsync(blogxID, MenuID, MenuItemID, null);
        }
        
        /// <remarks/>
        public void DeleteMenuMenuItemAsync(string blogxID, int MenuID, int MenuItemID, object userState) {
            if ((this.DeleteMenuMenuItemOperationCompleted == null)) {
                this.DeleteMenuMenuItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMenuMenuItemOperationCompleted);
            }
            this.InvokeAsync("DeleteMenuMenuItem", new object[] {
                        blogxID,
                        MenuID,
                        MenuItemID}, this.DeleteMenuMenuItemOperationCompleted, userState);
        }
        
        private void OnDeleteMenuMenuItemOperationCompleted(object arg) {
            if ((this.DeleteMenuMenuItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMenuMenuItemCompleted(this, new DeleteMenuMenuItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Test", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestName", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestName() {
            object[] results = this.Invoke("TestName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestNameAsync() {
            this.TestNameAsync(null);
        }
        
        /// <remarks/>
        public void TestNameAsync(object userState) {
            if ((this.TestNameOperationCompleted == null)) {
                this.TestNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestNameOperationCompleted);
            }
            this.InvokeAsync("TestName", new object[0], this.TestNameOperationCompleted, userState);
        }
        
        private void OnTestNameOperationCompleted(object arg) {
            if ((this.TestNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestNameCompleted(this, new TestNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestCustom", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestCustom(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            object[] results = this.Invoke("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            this.TestCustomAsync(Format, RootName, ResultName, CodeName, DescriptionName, null);
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName, object userState) {
            if ((this.TestCustomOperationCompleted == null)) {
                this.TestCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCustomOperationCompleted);
            }
            this.InvokeAsync("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName}, this.TestCustomOperationCompleted, userState);
        }
        
        private void OnTestCustomOperationCompleted(object arg) {
            if ((this.TestCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCustomCompleted(this, new TestCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestError", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestError() {
            object[] results = this.Invoke("TestError", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestErrorAsync() {
            this.TestErrorAsync(null);
        }
        
        /// <remarks/>
        public void TestErrorAsync(object userState) {
            if ((this.TestErrorOperationCompleted == null)) {
                this.TestErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestErrorOperationCompleted);
            }
            this.InvokeAsync("TestError", new object[0], this.TestErrorOperationCompleted, userState);
        }
        
        private void OnTestErrorOperationCompleted(object arg) {
            if ((this.TestErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestErrorCompleted(this, new TestErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestException", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestException() {
            object[] results = this.Invoke("TestException", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestExceptionAsync() {
            this.TestExceptionAsync(null);
        }
        
        /// <remarks/>
        public void TestExceptionAsync(object userState) {
            if ((this.TestExceptionOperationCompleted == null)) {
                this.TestExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestExceptionOperationCompleted);
            }
            this.InvokeAsync("TestException", new object[0], this.TestExceptionOperationCompleted, userState);
        }
        
        private void OnTestExceptionOperationCompleted(object arg) {
            if ((this.TestExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestExceptionCompleted(this, new TestExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListDDCompletedEventHandler(object sender, ListDDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListDDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListDDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListAllCompletedEventHandler(object sender, ListAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListCompletedEventHandler(object sender, ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListProfilesCompletedEventHandler(object sender, ListProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCompletedEventHandler(object sender, GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetMenuCompletedEventHandler(object sender, GetMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddCompletedEventHandler(object sender, AddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditCompletedEventHandler(object sender, EditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void OrderCompletedEventHandler(object sender, OrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListMenuItemsCompletedEventHandler(object sender, ListMenuItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMenuItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMenuItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetMenuItemsCompletedEventHandler(object sender, GetMenuItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetMenuMenuItemCompletedEventHandler(object sender, GetMenuMenuItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuMenuItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuMenuItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetMenuItemCompletedEventHandler(object sender, GetMenuItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddMenuItemCompletedEventHandler(object sender, AddMenuItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMenuItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMenuItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditMenuItemCompletedEventHandler(object sender, EditMenuItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditMenuItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditMenuItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteMenuItemCompletedEventHandler(object sender, DeleteMenuItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMenuItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMenuItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteMenuMenuItemCompletedEventHandler(object sender, DeleteMenuMenuItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMenuMenuItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMenuMenuItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestNameCompletedEventHandler(object sender, TestNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestCustomCompletedEventHandler(object sender, TestCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestErrorCompletedEventHandler(object sender, TestErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestExceptionCompletedEventHandler(object sender, TestExceptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591