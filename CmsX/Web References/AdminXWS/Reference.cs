//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace XXBoom.MachinaX.BlogX.CmsX.AdminXWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="adminXSoap", Namespace="http://www.clickclickBOOM.com/MachinaX/BlogX")]
    public partial class adminX : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterAuthorOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterSubscriberOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSubscriberOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadNewsletterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNewsletterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSpacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpaceBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSpaceBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSpaceImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListTopicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBlogHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTopicBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTopicImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpaceCurrentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListBlogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListBlogsOrgOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBlogIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTextBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTextBlogIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHtmlBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHtmlBlogXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHtmlBlogIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHtmlBlogDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddImageBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddImageBlogIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTextBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditHtmlBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditHtmlBlogXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditHtmlBlogDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBlogTitleDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBlogTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlogCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBlogCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBlogCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBlogCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlogImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBlogImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBlogImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBlogImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DefaultBlogImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListUsersByGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecretOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSpacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DefaultUserSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRecruitOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterRecruitOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestExceptionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public adminX() {
            this.Url = global::XXBoom.MachinaX.BlogX.CmsX.Properties.Settings.Default.CmsX_2_6_0_AdminXWS_adminX;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event ValidateTokenCompletedEventHandler ValidateTokenCompleted;
        
        /// <remarks/>
        public event ValidateCompletedEventHandler ValidateCompleted;
        
        /// <remarks/>
        public event GetRightsCompletedEventHandler GetRightsCompleted;
        
        /// <remarks/>
        public event RegisterAuthorCompletedEventHandler RegisterAuthorCompleted;
        
        /// <remarks/>
        public event RegisterSubscriberCompletedEventHandler RegisterSubscriberCompleted;
        
        /// <remarks/>
        public event UpdateSubscriberCompletedEventHandler UpdateSubscriberCompleted;
        
        /// <remarks/>
        public event UploadNewsletterCompletedEventHandler UploadNewsletterCompleted;
        
        /// <remarks/>
        public event SendNewsletterCompletedEventHandler SendNewsletterCompleted;
        
        /// <remarks/>
        public event SendNewsCompletedEventHandler SendNewsCompleted;
        
        /// <remarks/>
        public event GetSpaceCompletedEventHandler GetSpaceCompleted;
        
        /// <remarks/>
        public event ListSpacesCompletedEventHandler ListSpacesCompleted;
        
        /// <remarks/>
        public event AddSpaceCompletedEventHandler AddSpaceCompleted;
        
        /// <remarks/>
        public event EditSpaceCompletedEventHandler EditSpaceCompleted;
        
        /// <remarks/>
        public event UpdateSpaceCompletedEventHandler UpdateSpaceCompleted;
        
        /// <remarks/>
        public event RemoveSpaceCompletedEventHandler RemoveSpaceCompleted;
        
        /// <remarks/>
        public event GetSpaceBlogCompletedEventHandler GetSpaceBlogCompleted;
        
        /// <remarks/>
        public event AddSpaceBlogCompletedEventHandler AddSpaceBlogCompleted;
        
        /// <remarks/>
        public event AddSpaceImageCompletedEventHandler AddSpaceImageCompleted;
        
        /// <remarks/>
        public event ChangeArchiveCompletedEventHandler ChangeArchiveCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event RemoveUserCompletedEventHandler RemoveUserCompleted;
        
        /// <remarks/>
        public event AddLinkCompletedEventHandler AddLinkCompleted;
        
        /// <remarks/>
        public event EditLinkCompletedEventHandler EditLinkCompleted;
        
        /// <remarks/>
        public event DeleteLinkCompletedEventHandler DeleteLinkCompleted;
        
        /// <remarks/>
        public event ListTopicsCompletedEventHandler ListTopicsCompleted;
        
        /// <remarks/>
        public event AddTopicCompletedEventHandler AddTopicCompleted;
        
        /// <remarks/>
        public event EditTopicCompletedEventHandler EditTopicCompleted;
        
        /// <remarks/>
        public event DeleteTopicCompletedEventHandler DeleteTopicCompleted;
        
        /// <remarks/>
        public event DeleteBlogHistoryCompletedEventHandler DeleteBlogHistoryCompleted;
        
        /// <remarks/>
        public event GetTopicBlogCompletedEventHandler GetTopicBlogCompleted;
        
        /// <remarks/>
        public event AddTopicBlogCompletedEventHandler AddTopicBlogCompleted;
        
        /// <remarks/>
        public event AddTopicImageCompletedEventHandler AddTopicImageCompleted;
        
        /// <remarks/>
        public event UpdateTopicCompletedEventHandler UpdateTopicCompleted;
        
        /// <remarks/>
        public event GetSpaceCurrentCompletedEventHandler GetSpaceCurrentCompleted;
        
        /// <remarks/>
        public event GetBlogCompletedEventHandler GetBlogCompleted;
        
        /// <remarks/>
        public event ListBlogsCompletedEventHandler ListBlogsCompleted;
        
        /// <remarks/>
        public event ListBlogsOrgCompletedEventHandler ListBlogsOrgCompleted;
        
        /// <remarks/>
        public event AddBlogCompletedEventHandler AddBlogCompleted;
        
        /// <remarks/>
        public event AddBlogIDCompletedEventHandler AddBlogIDCompleted;
        
        /// <remarks/>
        public event AddTextBlogCompletedEventHandler AddTextBlogCompleted;
        
        /// <remarks/>
        public event AddTextBlogIDCompletedEventHandler AddTextBlogIDCompleted;
        
        /// <remarks/>
        public event AddHtmlBlogCompletedEventHandler AddHtmlBlogCompleted;
        
        /// <remarks/>
        public event AddHtmlBlogXmlCompletedEventHandler AddHtmlBlogXmlCompleted;
        
        /// <remarks/>
        public event AddHtmlBlogIDCompletedEventHandler AddHtmlBlogIDCompleted;
        
        /// <remarks/>
        public event AddHtmlBlogDateCompletedEventHandler AddHtmlBlogDateCompleted;
        
        /// <remarks/>
        public event AddImageBlogCompletedEventHandler AddImageBlogCompleted;
        
        /// <remarks/>
        public event AddImageBlogIDCompletedEventHandler AddImageBlogIDCompleted;
        
        /// <remarks/>
        public event DeleteBlogCompletedEventHandler DeleteBlogCompleted;
        
        /// <remarks/>
        public event EditBlogCompletedEventHandler EditBlogCompleted;
        
        /// <remarks/>
        public event EditTextBlogCompletedEventHandler EditTextBlogCompleted;
        
        /// <remarks/>
        public event EditHtmlBlogCompletedEventHandler EditHtmlBlogCompleted;
        
        /// <remarks/>
        public event EditHtmlBlogXmlCompletedEventHandler EditHtmlBlogXmlCompleted;
        
        /// <remarks/>
        public event EditHtmlBlogDateCompletedEventHandler EditHtmlBlogDateCompleted;
        
        /// <remarks/>
        public event EditBlogTitleDateCompletedEventHandler EditBlogTitleDateCompleted;
        
        /// <remarks/>
        public event EditBlogTitleCompletedEventHandler EditBlogTitleCompleted;
        
        /// <remarks/>
        public event RestoreBlogCompletedEventHandler RestoreBlogCompleted;
        
        /// <remarks/>
        public event GetBlogCommentCompletedEventHandler GetBlogCommentCompleted;
        
        /// <remarks/>
        public event AddBlogCommentCompletedEventHandler AddBlogCommentCompleted;
        
        /// <remarks/>
        public event EditBlogCommentCompletedEventHandler EditBlogCommentCompleted;
        
        /// <remarks/>
        public event DeleteBlogCommentCompletedEventHandler DeleteBlogCommentCompleted;
        
        /// <remarks/>
        public event GetBlogImageCompletedEventHandler GetBlogImageCompleted;
        
        /// <remarks/>
        public event AddBlogImageCompletedEventHandler AddBlogImageCompleted;
        
        /// <remarks/>
        public event EditBlogImageCompletedEventHandler EditBlogImageCompleted;
        
        /// <remarks/>
        public event DeleteBlogImageCompletedEventHandler DeleteBlogImageCompleted;
        
        /// <remarks/>
        public event DefaultBlogImageCompletedEventHandler DefaultBlogImageCompleted;
        
        /// <remarks/>
        public event ListUsersCompletedEventHandler ListUsersCompleted;
        
        /// <remarks/>
        public event ListUsersByGroupCompletedEventHandler ListUsersByGroupCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetPasswordCompletedEventHandler GetPasswordCompleted;
        
        /// <remarks/>
        public event GetSecretCompletedEventHandler GetSecretCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event EditUserCompletedEventHandler EditUserCompleted;
        
        /// <remarks/>
        public event ChangeLoginCompletedEventHandler ChangeLoginCompleted;
        
        /// <remarks/>
        public event AddUserBlogCompletedEventHandler AddUserBlogCompleted;
        
        /// <remarks/>
        public event GetUserBlogCompletedEventHandler GetUserBlogCompleted;
        
        /// <remarks/>
        public event GetUserSpacesCompletedEventHandler GetUserSpacesCompleted;
        
        /// <remarks/>
        public event AddUserSpaceCompletedEventHandler AddUserSpaceCompleted;
        
        /// <remarks/>
        public event DeleteUserSpaceCompletedEventHandler DeleteUserSpaceCompleted;
        
        /// <remarks/>
        public event DefaultUserSpaceCompletedEventHandler DefaultUserSpaceCompleted;
        
        /// <remarks/>
        public event AddRecruitCompletedEventHandler AddRecruitCompleted;
        
        /// <remarks/>
        public event RegisterRecruitCompletedEventHandler RegisterRecruitCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event TestNameCompletedEventHandler TestNameCompleted;
        
        /// <remarks/>
        public event TestCustomCompletedEventHandler TestCustomCompleted;
        
        /// <remarks/>
        public event TestErrorCompletedEventHandler TestErrorCompleted;
        
        /// <remarks/>
        public event TestExceptionCompletedEventHandler TestExceptionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/Login", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Login(string username, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/Logout", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Logout(string token) {
            object[] results = this.Invoke("Logout", new object[] {
                        token});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutAsync(string token) {
            this.LogoutAsync(token, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(string token, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        token}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/ValidateToken", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValidateToken(string token) {
            object[] results = this.Invoke("ValidateToken", new object[] {
                        token});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateTokenAsync(string token) {
            this.ValidateTokenAsync(token, null);
        }
        
        /// <remarks/>
        public void ValidateTokenAsync(string token, object userState) {
            if ((this.ValidateTokenOperationCompleted == null)) {
                this.ValidateTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateTokenOperationCompleted);
            }
            this.InvokeAsync("ValidateToken", new object[] {
                        token}, this.ValidateTokenOperationCompleted, userState);
        }
        
        private void OnValidateTokenOperationCompleted(object arg) {
            if ((this.ValidateTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateTokenCompleted(this, new ValidateTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/Validate", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Validate(string token, string right) {
            object[] results = this.Invoke("Validate", new object[] {
                        token,
                        right});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAsync(string token, string right) {
            this.ValidateAsync(token, right, null);
        }
        
        /// <remarks/>
        public void ValidateAsync(string token, string right, object userState) {
            if ((this.ValidateOperationCompleted == null)) {
                this.ValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateOperationCompleted);
            }
            this.InvokeAsync("Validate", new object[] {
                        token,
                        right}, this.ValidateOperationCompleted, userState);
        }
        
        private void OnValidateOperationCompleted(object arg) {
            if ((this.ValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCompleted(this, new ValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetRights", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRights(string token) {
            object[] results = this.Invoke("GetRights", new object[] {
                        token});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRightsAsync(string token) {
            this.GetRightsAsync(token, null);
        }
        
        /// <remarks/>
        public void GetRightsAsync(string token, object userState) {
            if ((this.GetRightsOperationCompleted == null)) {
                this.GetRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRightsOperationCompleted);
            }
            this.InvokeAsync("GetRights", new object[] {
                        token}, this.GetRightsOperationCompleted, userState);
        }
        
        private void OnGetRightsOperationCompleted(object arg) {
            if ((this.GetRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRightsCompleted(this, new GetRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/RegisterAuthor", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RegisterAuthor(string username, string firstname, string surname, string email, string telno, string secret, string password, string password2, string spacename) {
            object[] results = this.Invoke("RegisterAuthor", new object[] {
                        username,
                        firstname,
                        surname,
                        email,
                        telno,
                        secret,
                        password,
                        password2,
                        spacename});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAuthorAsync(string username, string firstname, string surname, string email, string telno, string secret, string password, string password2, string spacename) {
            this.RegisterAuthorAsync(username, firstname, surname, email, telno, secret, password, password2, spacename, null);
        }
        
        /// <remarks/>
        public void RegisterAuthorAsync(string username, string firstname, string surname, string email, string telno, string secret, string password, string password2, string spacename, object userState) {
            if ((this.RegisterAuthorOperationCompleted == null)) {
                this.RegisterAuthorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterAuthorOperationCompleted);
            }
            this.InvokeAsync("RegisterAuthor", new object[] {
                        username,
                        firstname,
                        surname,
                        email,
                        telno,
                        secret,
                        password,
                        password2,
                        spacename}, this.RegisterAuthorOperationCompleted, userState);
        }
        
        private void OnRegisterAuthorOperationCompleted(object arg) {
            if ((this.RegisterAuthorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterAuthorCompleted(this, new RegisterAuthorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/RegisterSubscriber", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RegisterSubscriber(string username, string firstname, string surname, string email, string telno, string spacename, string extrainfo1, string extrainfo2, string extrainfo3, string extrainfo4) {
            object[] results = this.Invoke("RegisterSubscriber", new object[] {
                        username,
                        firstname,
                        surname,
                        email,
                        telno,
                        spacename,
                        extrainfo1,
                        extrainfo2,
                        extrainfo3,
                        extrainfo4});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterSubscriberAsync(string username, string firstname, string surname, string email, string telno, string spacename, string extrainfo1, string extrainfo2, string extrainfo3, string extrainfo4) {
            this.RegisterSubscriberAsync(username, firstname, surname, email, telno, spacename, extrainfo1, extrainfo2, extrainfo3, extrainfo4, null);
        }
        
        /// <remarks/>
        public void RegisterSubscriberAsync(string username, string firstname, string surname, string email, string telno, string spacename, string extrainfo1, string extrainfo2, string extrainfo3, string extrainfo4, object userState) {
            if ((this.RegisterSubscriberOperationCompleted == null)) {
                this.RegisterSubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterSubscriberOperationCompleted);
            }
            this.InvokeAsync("RegisterSubscriber", new object[] {
                        username,
                        firstname,
                        surname,
                        email,
                        telno,
                        spacename,
                        extrainfo1,
                        extrainfo2,
                        extrainfo3,
                        extrainfo4}, this.RegisterSubscriberOperationCompleted, userState);
        }
        
        private void OnRegisterSubscriberOperationCompleted(object arg) {
            if ((this.RegisterSubscriberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterSubscriberCompleted(this, new RegisterSubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/UpdateSubscriber", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateSubscriber(string token, string name, string firstname, string surname, string email, string telno, string extrainfo1, string extrainfo2, string extrainfo3, string extrainfo4) {
            object[] results = this.Invoke("UpdateSubscriber", new object[] {
                        token,
                        name,
                        firstname,
                        surname,
                        email,
                        telno,
                        extrainfo1,
                        extrainfo2,
                        extrainfo3,
                        extrainfo4});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSubscriberAsync(string token, string name, string firstname, string surname, string email, string telno, string extrainfo1, string extrainfo2, string extrainfo3, string extrainfo4) {
            this.UpdateSubscriberAsync(token, name, firstname, surname, email, telno, extrainfo1, extrainfo2, extrainfo3, extrainfo4, null);
        }
        
        /// <remarks/>
        public void UpdateSubscriberAsync(string token, string name, string firstname, string surname, string email, string telno, string extrainfo1, string extrainfo2, string extrainfo3, string extrainfo4, object userState) {
            if ((this.UpdateSubscriberOperationCompleted == null)) {
                this.UpdateSubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSubscriberOperationCompleted);
            }
            this.InvokeAsync("UpdateSubscriber", new object[] {
                        token,
                        name,
                        firstname,
                        surname,
                        email,
                        telno,
                        extrainfo1,
                        extrainfo2,
                        extrainfo3,
                        extrainfo4}, this.UpdateSubscriberOperationCompleted, userState);
        }
        
        private void OnUpdateSubscriberOperationCompleted(object arg) {
            if ((this.UpdateSubscriberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSubscriberCompleted(this, new UpdateSubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/UploadNewsletter", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadNewsletter(string token, string subject, string message, string filename, string group) {
            object[] results = this.Invoke("UploadNewsletter", new object[] {
                        token,
                        subject,
                        message,
                        filename,
                        group});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadNewsletterAsync(string token, string subject, string message, string filename, string group) {
            this.UploadNewsletterAsync(token, subject, message, filename, group, null);
        }
        
        /// <remarks/>
        public void UploadNewsletterAsync(string token, string subject, string message, string filename, string group, object userState) {
            if ((this.UploadNewsletterOperationCompleted == null)) {
                this.UploadNewsletterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadNewsletterOperationCompleted);
            }
            this.InvokeAsync("UploadNewsletter", new object[] {
                        token,
                        subject,
                        message,
                        filename,
                        group}, this.UploadNewsletterOperationCompleted, userState);
        }
        
        private void OnUploadNewsletterOperationCompleted(object arg) {
            if ((this.UploadNewsletterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadNewsletterCompleted(this, new UploadNewsletterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/SendNewsletter", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SendNewsletter(string token, string subject, string message, string filename, string group) {
            object[] results = this.Invoke("SendNewsletter", new object[] {
                        token,
                        subject,
                        message,
                        filename,
                        group});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SendNewsletterAsync(string token, string subject, string message, string filename, string group) {
            this.SendNewsletterAsync(token, subject, message, filename, group, null);
        }
        
        /// <remarks/>
        public void SendNewsletterAsync(string token, string subject, string message, string filename, string group, object userState) {
            if ((this.SendNewsletterOperationCompleted == null)) {
                this.SendNewsletterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNewsletterOperationCompleted);
            }
            this.InvokeAsync("SendNewsletter", new object[] {
                        token,
                        subject,
                        message,
                        filename,
                        group}, this.SendNewsletterOperationCompleted, userState);
        }
        
        private void OnSendNewsletterOperationCompleted(object arg) {
            if ((this.SendNewsletterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNewsletterCompleted(this, new SendNewsletterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/SendNews", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SendNews(string token, string subject, string name, string topic, string id, string group, string xslfilename) {
            object[] results = this.Invoke("SendNews", new object[] {
                        token,
                        subject,
                        name,
                        topic,
                        id,
                        group,
                        xslfilename});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SendNewsAsync(string token, string subject, string name, string topic, string id, string group, string xslfilename) {
            this.SendNewsAsync(token, subject, name, topic, id, group, xslfilename, null);
        }
        
        /// <remarks/>
        public void SendNewsAsync(string token, string subject, string name, string topic, string id, string group, string xslfilename, object userState) {
            if ((this.SendNewsOperationCompleted == null)) {
                this.SendNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNewsOperationCompleted);
            }
            this.InvokeAsync("SendNews", new object[] {
                        token,
                        subject,
                        name,
                        topic,
                        id,
                        group,
                        xslfilename}, this.SendNewsOperationCompleted, userState);
        }
        
        private void OnSendNewsOperationCompleted(object arg) {
            if ((this.SendNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNewsCompleted(this, new SendNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetSpace", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetSpace(string token, string name) {
            object[] results = this.Invoke("GetSpace", new object[] {
                        token,
                        name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpaceAsync(string token, string name) {
            this.GetSpaceAsync(token, name, null);
        }
        
        /// <remarks/>
        public void GetSpaceAsync(string token, string name, object userState) {
            if ((this.GetSpaceOperationCompleted == null)) {
                this.GetSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpaceOperationCompleted);
            }
            this.InvokeAsync("GetSpace", new object[] {
                        token,
                        name}, this.GetSpaceOperationCompleted, userState);
        }
        
        private void OnGetSpaceOperationCompleted(object arg) {
            if ((this.GetSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpaceCompleted(this, new GetSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/ListSpaces", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListSpaces(string token) {
            object[] results = this.Invoke("ListSpaces", new object[] {
                        token});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListSpacesAsync(string token) {
            this.ListSpacesAsync(token, null);
        }
        
        /// <remarks/>
        public void ListSpacesAsync(string token, object userState) {
            if ((this.ListSpacesOperationCompleted == null)) {
                this.ListSpacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSpacesOperationCompleted);
            }
            this.InvokeAsync("ListSpaces", new object[] {
                        token}, this.ListSpacesOperationCompleted, userState);
        }
        
        private void OnListSpacesOperationCompleted(object arg) {
            if ((this.ListSpacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSpacesCompleted(this, new ListSpacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddSpace", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddSpace(string token, string name, string type, string title, string text, string admin, string wanttopics) {
            object[] results = this.Invoke("AddSpace", new object[] {
                        token,
                        name,
                        type,
                        title,
                        text,
                        admin,
                        wanttopics});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddSpaceAsync(string token, string name, string type, string title, string text, string admin, string wanttopics) {
            this.AddSpaceAsync(token, name, type, title, text, admin, wanttopics, null);
        }
        
        /// <remarks/>
        public void AddSpaceAsync(string token, string name, string type, string title, string text, string admin, string wanttopics, object userState) {
            if ((this.AddSpaceOperationCompleted == null)) {
                this.AddSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSpaceOperationCompleted);
            }
            this.InvokeAsync("AddSpace", new object[] {
                        token,
                        name,
                        type,
                        title,
                        text,
                        admin,
                        wanttopics}, this.AddSpaceOperationCompleted, userState);
        }
        
        private void OnAddSpaceOperationCompleted(object arg) {
            if ((this.AddSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSpaceCompleted(this, new AddSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditSpace", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditSpace(string token, string name, string type, string title, string text, string wanttopics) {
            object[] results = this.Invoke("EditSpace", new object[] {
                        token,
                        name,
                        type,
                        title,
                        text,
                        wanttopics});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditSpaceAsync(string token, string name, string type, string title, string text, string wanttopics) {
            this.EditSpaceAsync(token, name, type, title, text, wanttopics, null);
        }
        
        /// <remarks/>
        public void EditSpaceAsync(string token, string name, string type, string title, string text, string wanttopics, object userState) {
            if ((this.EditSpaceOperationCompleted == null)) {
                this.EditSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSpaceOperationCompleted);
            }
            this.InvokeAsync("EditSpace", new object[] {
                        token,
                        name,
                        type,
                        title,
                        text,
                        wanttopics}, this.EditSpaceOperationCompleted, userState);
        }
        
        private void OnEditSpaceOperationCompleted(object arg) {
            if ((this.EditSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSpaceCompleted(this, new EditSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/UpdateSpace", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateSpace(string token, string name, string type, string title, string text, string author, string image, string blogtitle, string bloghtml) {
            object[] results = this.Invoke("UpdateSpace", new object[] {
                        token,
                        name,
                        type,
                        title,
                        text,
                        author,
                        image,
                        blogtitle,
                        bloghtml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSpaceAsync(string token, string name, string type, string title, string text, string author, string image, string blogtitle, string bloghtml) {
            this.UpdateSpaceAsync(token, name, type, title, text, author, image, blogtitle, bloghtml, null);
        }
        
        /// <remarks/>
        public void UpdateSpaceAsync(string token, string name, string type, string title, string text, string author, string image, string blogtitle, string bloghtml, object userState) {
            if ((this.UpdateSpaceOperationCompleted == null)) {
                this.UpdateSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSpaceOperationCompleted);
            }
            this.InvokeAsync("UpdateSpace", new object[] {
                        token,
                        name,
                        type,
                        title,
                        text,
                        author,
                        image,
                        blogtitle,
                        bloghtml}, this.UpdateSpaceOperationCompleted, userState);
        }
        
        private void OnUpdateSpaceOperationCompleted(object arg) {
            if ((this.UpdateSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSpaceCompleted(this, new UpdateSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/RemoveSpace", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RemoveSpace(string token, string name) {
            object[] results = this.Invoke("RemoveSpace", new object[] {
                        token,
                        name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveSpaceAsync(string token, string name) {
            this.RemoveSpaceAsync(token, name, null);
        }
        
        /// <remarks/>
        public void RemoveSpaceAsync(string token, string name, object userState) {
            if ((this.RemoveSpaceOperationCompleted == null)) {
                this.RemoveSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveSpaceOperationCompleted);
            }
            this.InvokeAsync("RemoveSpace", new object[] {
                        token,
                        name}, this.RemoveSpaceOperationCompleted, userState);
        }
        
        private void OnRemoveSpaceOperationCompleted(object arg) {
            if ((this.RemoveSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveSpaceCompleted(this, new RemoveSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetSpaceBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetSpaceBlog(string token, string name) {
            object[] results = this.Invoke("GetSpaceBlog", new object[] {
                        token,
                        name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpaceBlogAsync(string token, string name) {
            this.GetSpaceBlogAsync(token, name, null);
        }
        
        /// <remarks/>
        public void GetSpaceBlogAsync(string token, string name, object userState) {
            if ((this.GetSpaceBlogOperationCompleted == null)) {
                this.GetSpaceBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpaceBlogOperationCompleted);
            }
            this.InvokeAsync("GetSpaceBlog", new object[] {
                        token,
                        name}, this.GetSpaceBlogOperationCompleted, userState);
        }
        
        private void OnGetSpaceBlogOperationCompleted(object arg) {
            if ((this.GetSpaceBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpaceBlogCompleted(this, new GetSpaceBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddSpaceBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddSpaceBlog(string token, string name, string author, string title, string image, string html) {
            object[] results = this.Invoke("AddSpaceBlog", new object[] {
                        token,
                        name,
                        author,
                        title,
                        image,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddSpaceBlogAsync(string token, string name, string author, string title, string image, string html) {
            this.AddSpaceBlogAsync(token, name, author, title, image, html, null);
        }
        
        /// <remarks/>
        public void AddSpaceBlogAsync(string token, string name, string author, string title, string image, string html, object userState) {
            if ((this.AddSpaceBlogOperationCompleted == null)) {
                this.AddSpaceBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSpaceBlogOperationCompleted);
            }
            this.InvokeAsync("AddSpaceBlog", new object[] {
                        token,
                        name,
                        author,
                        title,
                        image,
                        html}, this.AddSpaceBlogOperationCompleted, userState);
        }
        
        private void OnAddSpaceBlogOperationCompleted(object arg) {
            if ((this.AddSpaceBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSpaceBlogCompleted(this, new AddSpaceBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddSpaceImage", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddSpaceImage(string token, string name, string filename) {
            object[] results = this.Invoke("AddSpaceImage", new object[] {
                        token,
                        name,
                        filename});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddSpaceImageAsync(string token, string name, string filename) {
            this.AddSpaceImageAsync(token, name, filename, null);
        }
        
        /// <remarks/>
        public void AddSpaceImageAsync(string token, string name, string filename, object userState) {
            if ((this.AddSpaceImageOperationCompleted == null)) {
                this.AddSpaceImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSpaceImageOperationCompleted);
            }
            this.InvokeAsync("AddSpaceImage", new object[] {
                        token,
                        name,
                        filename}, this.AddSpaceImageOperationCompleted, userState);
        }
        
        private void OnAddSpaceImageOperationCompleted(object arg) {
            if ((this.AddSpaceImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSpaceImageCompleted(this, new AddSpaceImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/ChangeArchive", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ChangeArchive(string token, string name, string type) {
            object[] results = this.Invoke("ChangeArchive", new object[] {
                        token,
                        name,
                        type});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeArchiveAsync(string token, string name, string type) {
            this.ChangeArchiveAsync(token, name, type, null);
        }
        
        /// <remarks/>
        public void ChangeArchiveAsync(string token, string name, string type, object userState) {
            if ((this.ChangeArchiveOperationCompleted == null)) {
                this.ChangeArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeArchiveOperationCompleted);
            }
            this.InvokeAsync("ChangeArchive", new object[] {
                        token,
                        name,
                        type}, this.ChangeArchiveOperationCompleted, userState);
        }
        
        private void OnChangeArchiveOperationCompleted(object arg) {
            if ((this.ChangeArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeArchiveCompleted(this, new ChangeArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/DeleteUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteUser(string token, string name, string user) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        token,
                        name,
                        user});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string token, string name, string user) {
            this.DeleteUserAsync(token, name, user, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string token, string name, string user, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        token,
                        name,
                        user}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/RemoveUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RemoveUser(string token, string name) {
            object[] results = this.Invoke("RemoveUser", new object[] {
                        token,
                        name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserAsync(string token, string name) {
            this.RemoveUserAsync(token, name, null);
        }
        
        /// <remarks/>
        public void RemoveUserAsync(string token, string name, object userState) {
            if ((this.RemoveUserOperationCompleted == null)) {
                this.RemoveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserOperationCompleted);
            }
            this.InvokeAsync("RemoveUser", new object[] {
                        token,
                        name}, this.RemoveUserOperationCompleted, userState);
        }
        
        private void OnRemoveUserOperationCompleted(object arg) {
            if ((this.RemoveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserCompleted(this, new RemoveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddLink", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddLink(string token, string name, string text, string url) {
            object[] results = this.Invoke("AddLink", new object[] {
                        token,
                        name,
                        text,
                        url});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddLinkAsync(string token, string name, string text, string url) {
            this.AddLinkAsync(token, name, text, url, null);
        }
        
        /// <remarks/>
        public void AddLinkAsync(string token, string name, string text, string url, object userState) {
            if ((this.AddLinkOperationCompleted == null)) {
                this.AddLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLinkOperationCompleted);
            }
            this.InvokeAsync("AddLink", new object[] {
                        token,
                        name,
                        text,
                        url}, this.AddLinkOperationCompleted, userState);
        }
        
        private void OnAddLinkOperationCompleted(object arg) {
            if ((this.AddLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLinkCompleted(this, new AddLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditLink", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditLink(string token, string name, string id, string text, string url) {
            object[] results = this.Invoke("EditLink", new object[] {
                        token,
                        name,
                        id,
                        text,
                        url});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditLinkAsync(string token, string name, string id, string text, string url) {
            this.EditLinkAsync(token, name, id, text, url, null);
        }
        
        /// <remarks/>
        public void EditLinkAsync(string token, string name, string id, string text, string url, object userState) {
            if ((this.EditLinkOperationCompleted == null)) {
                this.EditLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLinkOperationCompleted);
            }
            this.InvokeAsync("EditLink", new object[] {
                        token,
                        name,
                        id,
                        text,
                        url}, this.EditLinkOperationCompleted, userState);
        }
        
        private void OnEditLinkOperationCompleted(object arg) {
            if ((this.EditLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLinkCompleted(this, new EditLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/DeleteLink", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteLink(string token, string name, string id) {
            object[] results = this.Invoke("DeleteLink", new object[] {
                        token,
                        name,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLinkAsync(string token, string name, string id) {
            this.DeleteLinkAsync(token, name, id, null);
        }
        
        /// <remarks/>
        public void DeleteLinkAsync(string token, string name, string id, object userState) {
            if ((this.DeleteLinkOperationCompleted == null)) {
                this.DeleteLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLinkOperationCompleted);
            }
            this.InvokeAsync("DeleteLink", new object[] {
                        token,
                        name,
                        id}, this.DeleteLinkOperationCompleted, userState);
        }
        
        private void OnDeleteLinkOperationCompleted(object arg) {
            if ((this.DeleteLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLinkCompleted(this, new DeleteLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/ListTopics", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListTopics(string token, string name) {
            object[] results = this.Invoke("ListTopics", new object[] {
                        token,
                        name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListTopicsAsync(string token, string name) {
            this.ListTopicsAsync(token, name, null);
        }
        
        /// <remarks/>
        public void ListTopicsAsync(string token, string name, object userState) {
            if ((this.ListTopicsOperationCompleted == null)) {
                this.ListTopicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListTopicsOperationCompleted);
            }
            this.InvokeAsync("ListTopics", new object[] {
                        token,
                        name}, this.ListTopicsOperationCompleted, userState);
        }
        
        private void OnListTopicsOperationCompleted(object arg) {
            if ((this.ListTopicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListTopicsCompleted(this, new ListTopicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddTopic", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddTopic(string token, string name, string topic, string title, string type) {
            object[] results = this.Invoke("AddTopic", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        type});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddTopicAsync(string token, string name, string topic, string title, string type) {
            this.AddTopicAsync(token, name, topic, title, type, null);
        }
        
        /// <remarks/>
        public void AddTopicAsync(string token, string name, string topic, string title, string type, object userState) {
            if ((this.AddTopicOperationCompleted == null)) {
                this.AddTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTopicOperationCompleted);
            }
            this.InvokeAsync("AddTopic", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        type}, this.AddTopicOperationCompleted, userState);
        }
        
        private void OnAddTopicOperationCompleted(object arg) {
            if ((this.AddTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTopicCompleted(this, new AddTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditTopic", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditTopic(string token, string name, string topic, string title, string type) {
            object[] results = this.Invoke("EditTopic", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        type});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditTopicAsync(string token, string name, string topic, string title, string type) {
            this.EditTopicAsync(token, name, topic, title, type, null);
        }
        
        /// <remarks/>
        public void EditTopicAsync(string token, string name, string topic, string title, string type, object userState) {
            if ((this.EditTopicOperationCompleted == null)) {
                this.EditTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTopicOperationCompleted);
            }
            this.InvokeAsync("EditTopic", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        type}, this.EditTopicOperationCompleted, userState);
        }
        
        private void OnEditTopicOperationCompleted(object arg) {
            if ((this.EditTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTopicCompleted(this, new EditTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/DeleteTopic", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteTopic(string token, string name, string topic) {
            object[] results = this.Invoke("DeleteTopic", new object[] {
                        token,
                        name,
                        topic});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTopicAsync(string token, string name, string topic) {
            this.DeleteTopicAsync(token, name, topic, null);
        }
        
        /// <remarks/>
        public void DeleteTopicAsync(string token, string name, string topic, object userState) {
            if ((this.DeleteTopicOperationCompleted == null)) {
                this.DeleteTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTopicOperationCompleted);
            }
            this.InvokeAsync("DeleteTopic", new object[] {
                        token,
                        name,
                        topic}, this.DeleteTopicOperationCompleted, userState);
        }
        
        private void OnDeleteTopicOperationCompleted(object arg) {
            if ((this.DeleteTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTopicCompleted(this, new DeleteTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/DeleteBlogHistory", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteBlogHistory(string token, string name, string topic, string id) {
            object[] results = this.Invoke("DeleteBlogHistory", new object[] {
                        token,
                        name,
                        topic,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBlogHistoryAsync(string token, string name, string topic, string id) {
            this.DeleteBlogHistoryAsync(token, name, topic, id, null);
        }
        
        /// <remarks/>
        public void DeleteBlogHistoryAsync(string token, string name, string topic, string id, object userState) {
            if ((this.DeleteBlogHistoryOperationCompleted == null)) {
                this.DeleteBlogHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBlogHistoryOperationCompleted);
            }
            this.InvokeAsync("DeleteBlogHistory", new object[] {
                        token,
                        name,
                        topic,
                        id}, this.DeleteBlogHistoryOperationCompleted, userState);
        }
        
        private void OnDeleteBlogHistoryOperationCompleted(object arg) {
            if ((this.DeleteBlogHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBlogHistoryCompleted(this, new DeleteBlogHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetTopicBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetTopicBlog(string token, string name, string topic) {
            object[] results = this.Invoke("GetTopicBlog", new object[] {
                        token,
                        name,
                        topic});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicBlogAsync(string token, string name, string topic) {
            this.GetTopicBlogAsync(token, name, topic, null);
        }
        
        /// <remarks/>
        public void GetTopicBlogAsync(string token, string name, string topic, object userState) {
            if ((this.GetTopicBlogOperationCompleted == null)) {
                this.GetTopicBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicBlogOperationCompleted);
            }
            this.InvokeAsync("GetTopicBlog", new object[] {
                        token,
                        name,
                        topic}, this.GetTopicBlogOperationCompleted, userState);
        }
        
        private void OnGetTopicBlogOperationCompleted(object arg) {
            if ((this.GetTopicBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicBlogCompleted(this, new GetTopicBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddTopicBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddTopicBlog(string token, string name, string topic, string author, string title, string image, string html) {
            object[] results = this.Invoke("AddTopicBlog", new object[] {
                        token,
                        name,
                        topic,
                        author,
                        title,
                        image,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddTopicBlogAsync(string token, string name, string topic, string author, string title, string image, string html) {
            this.AddTopicBlogAsync(token, name, topic, author, title, image, html, null);
        }
        
        /// <remarks/>
        public void AddTopicBlogAsync(string token, string name, string topic, string author, string title, string image, string html, object userState) {
            if ((this.AddTopicBlogOperationCompleted == null)) {
                this.AddTopicBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTopicBlogOperationCompleted);
            }
            this.InvokeAsync("AddTopicBlog", new object[] {
                        token,
                        name,
                        topic,
                        author,
                        title,
                        image,
                        html}, this.AddTopicBlogOperationCompleted, userState);
        }
        
        private void OnAddTopicBlogOperationCompleted(object arg) {
            if ((this.AddTopicBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTopicBlogCompleted(this, new AddTopicBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddTopicImage", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddTopicImage(string token, string name, string topic, string filename) {
            object[] results = this.Invoke("AddTopicImage", new object[] {
                        token,
                        name,
                        topic,
                        filename});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddTopicImageAsync(string token, string name, string topic, string filename) {
            this.AddTopicImageAsync(token, name, topic, filename, null);
        }
        
        /// <remarks/>
        public void AddTopicImageAsync(string token, string name, string topic, string filename, object userState) {
            if ((this.AddTopicImageOperationCompleted == null)) {
                this.AddTopicImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTopicImageOperationCompleted);
            }
            this.InvokeAsync("AddTopicImage", new object[] {
                        token,
                        name,
                        topic,
                        filename}, this.AddTopicImageOperationCompleted, userState);
        }
        
        private void OnAddTopicImageOperationCompleted(object arg) {
            if ((this.AddTopicImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTopicImageCompleted(this, new AddTopicImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/UpdateTopic", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateTopic(string token, string name, string topic, string label, string type, string author, string title, string image, string html) {
            object[] results = this.Invoke("UpdateTopic", new object[] {
                        token,
                        name,
                        topic,
                        label,
                        type,
                        author,
                        title,
                        image,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTopicAsync(string token, string name, string topic, string label, string type, string author, string title, string image, string html) {
            this.UpdateTopicAsync(token, name, topic, label, type, author, title, image, html, null);
        }
        
        /// <remarks/>
        public void UpdateTopicAsync(string token, string name, string topic, string label, string type, string author, string title, string image, string html, object userState) {
            if ((this.UpdateTopicOperationCompleted == null)) {
                this.UpdateTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTopicOperationCompleted);
            }
            this.InvokeAsync("UpdateTopic", new object[] {
                        token,
                        name,
                        topic,
                        label,
                        type,
                        author,
                        title,
                        image,
                        html}, this.UpdateTopicOperationCompleted, userState);
        }
        
        private void OnUpdateTopicOperationCompleted(object arg) {
            if ((this.UpdateTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTopicCompleted(this, new UpdateTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetSpaceCurrent", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetSpaceCurrent(string token, string name) {
            object[] results = this.Invoke("GetSpaceCurrent", new object[] {
                        token,
                        name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpaceCurrentAsync(string token, string name) {
            this.GetSpaceCurrentAsync(token, name, null);
        }
        
        /// <remarks/>
        public void GetSpaceCurrentAsync(string token, string name, object userState) {
            if ((this.GetSpaceCurrentOperationCompleted == null)) {
                this.GetSpaceCurrentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpaceCurrentOperationCompleted);
            }
            this.InvokeAsync("GetSpaceCurrent", new object[] {
                        token,
                        name}, this.GetSpaceCurrentOperationCompleted, userState);
        }
        
        private void OnGetSpaceCurrentOperationCompleted(object arg) {
            if ((this.GetSpaceCurrentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpaceCurrentCompleted(this, new GetSpaceCurrentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetBlog(string token, string name, string topic, string archive, string id) {
            object[] results = this.Invoke("GetBlog", new object[] {
                        token,
                        name,
                        topic,
                        archive,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlogAsync(string token, string name, string topic, string archive, string id) {
            this.GetBlogAsync(token, name, topic, archive, id, null);
        }
        
        /// <remarks/>
        public void GetBlogAsync(string token, string name, string topic, string archive, string id, object userState) {
            if ((this.GetBlogOperationCompleted == null)) {
                this.GetBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlogOperationCompleted);
            }
            this.InvokeAsync("GetBlog", new object[] {
                        token,
                        name,
                        topic,
                        archive,
                        id}, this.GetBlogOperationCompleted, userState);
        }
        
        private void OnGetBlogOperationCompleted(object arg) {
            if ((this.GetBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlogCompleted(this, new GetBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/ListBlogs", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListBlogs(string token, string name, string topicList, string archive) {
            object[] results = this.Invoke("ListBlogs", new object[] {
                        token,
                        name,
                        topicList,
                        archive});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListBlogsAsync(string token, string name, string topicList, string archive) {
            this.ListBlogsAsync(token, name, topicList, archive, null);
        }
        
        /// <remarks/>
        public void ListBlogsAsync(string token, string name, string topicList, string archive, object userState) {
            if ((this.ListBlogsOperationCompleted == null)) {
                this.ListBlogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListBlogsOperationCompleted);
            }
            this.InvokeAsync("ListBlogs", new object[] {
                        token,
                        name,
                        topicList,
                        archive}, this.ListBlogsOperationCompleted, userState);
        }
        
        private void OnListBlogsOperationCompleted(object arg) {
            if ((this.ListBlogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListBlogsCompleted(this, new ListBlogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/ListBlogsOrg", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListBlogsOrg(string token, string name, string topic, string archive) {
            object[] results = this.Invoke("ListBlogsOrg", new object[] {
                        token,
                        name,
                        topic,
                        archive});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListBlogsOrgAsync(string token, string name, string topic, string archive) {
            this.ListBlogsOrgAsync(token, name, topic, archive, null);
        }
        
        /// <remarks/>
        public void ListBlogsOrgAsync(string token, string name, string topic, string archive, object userState) {
            if ((this.ListBlogsOrgOperationCompleted == null)) {
                this.ListBlogsOrgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListBlogsOrgOperationCompleted);
            }
            this.InvokeAsync("ListBlogsOrg", new object[] {
                        token,
                        name,
                        topic,
                        archive}, this.ListBlogsOrgOperationCompleted, userState);
        }
        
        private void OnListBlogsOrgOperationCompleted(object arg) {
            if ((this.ListBlogsOrgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListBlogsOrgCompleted(this, new ListBlogsOrgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddBlog(string token, string name, string topic, string title, string xml) {
            object[] results = this.Invoke("AddBlog", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddBlogAsync(string token, string name, string topic, string title, string xml) {
            this.AddBlogAsync(token, name, topic, title, xml, null);
        }
        
        /// <remarks/>
        public void AddBlogAsync(string token, string name, string topic, string title, string xml, object userState) {
            if ((this.AddBlogOperationCompleted == null)) {
                this.AddBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBlogOperationCompleted);
            }
            this.InvokeAsync("AddBlog", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        xml}, this.AddBlogOperationCompleted, userState);
        }
        
        private void OnAddBlogOperationCompleted(object arg) {
            if ((this.AddBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBlogCompleted(this, new AddBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddBlogID", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddBlogID(string token, string name, string topic, string id, string title, string xml) {
            object[] results = this.Invoke("AddBlogID", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddBlogIDAsync(string token, string name, string topic, string id, string title, string xml) {
            this.AddBlogIDAsync(token, name, topic, id, title, xml, null);
        }
        
        /// <remarks/>
        public void AddBlogIDAsync(string token, string name, string topic, string id, string title, string xml, object userState) {
            if ((this.AddBlogIDOperationCompleted == null)) {
                this.AddBlogIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBlogIDOperationCompleted);
            }
            this.InvokeAsync("AddBlogID", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        xml}, this.AddBlogIDOperationCompleted, userState);
        }
        
        private void OnAddBlogIDOperationCompleted(object arg) {
            if ((this.AddBlogIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBlogIDCompleted(this, new AddBlogIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddTextBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddTextBlog(string token, string name, string topic, string title, string text) {
            object[] results = this.Invoke("AddTextBlog", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        text});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddTextBlogAsync(string token, string name, string topic, string title, string text) {
            this.AddTextBlogAsync(token, name, topic, title, text, null);
        }
        
        /// <remarks/>
        public void AddTextBlogAsync(string token, string name, string topic, string title, string text, object userState) {
            if ((this.AddTextBlogOperationCompleted == null)) {
                this.AddTextBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTextBlogOperationCompleted);
            }
            this.InvokeAsync("AddTextBlog", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        text}, this.AddTextBlogOperationCompleted, userState);
        }
        
        private void OnAddTextBlogOperationCompleted(object arg) {
            if ((this.AddTextBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTextBlogCompleted(this, new AddTextBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddTextBlogID", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddTextBlogID(string token, string name, string topic, string id, string title, string text) {
            object[] results = this.Invoke("AddTextBlogID", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        text});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddTextBlogIDAsync(string token, string name, string topic, string id, string title, string text) {
            this.AddTextBlogIDAsync(token, name, topic, id, title, text, null);
        }
        
        /// <remarks/>
        public void AddTextBlogIDAsync(string token, string name, string topic, string id, string title, string text, object userState) {
            if ((this.AddTextBlogIDOperationCompleted == null)) {
                this.AddTextBlogIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTextBlogIDOperationCompleted);
            }
            this.InvokeAsync("AddTextBlogID", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        text}, this.AddTextBlogIDOperationCompleted, userState);
        }
        
        private void OnAddTextBlogIDOperationCompleted(object arg) {
            if ((this.AddTextBlogIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTextBlogIDCompleted(this, new AddTextBlogIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddHtmlBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddHtmlBlog(string token, string name, string topic, string title, string html) {
            object[] results = this.Invoke("AddHtmlBlog", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddHtmlBlogAsync(string token, string name, string topic, string title, string html) {
            this.AddHtmlBlogAsync(token, name, topic, title, html, null);
        }
        
        /// <remarks/>
        public void AddHtmlBlogAsync(string token, string name, string topic, string title, string html, object userState) {
            if ((this.AddHtmlBlogOperationCompleted == null)) {
                this.AddHtmlBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHtmlBlogOperationCompleted);
            }
            this.InvokeAsync("AddHtmlBlog", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        html}, this.AddHtmlBlogOperationCompleted, userState);
        }
        
        private void OnAddHtmlBlogOperationCompleted(object arg) {
            if ((this.AddHtmlBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHtmlBlogCompleted(this, new AddHtmlBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddHtmlBlogXml", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddHtmlBlogXml(string token, string name, string topic, string title, string html, string xml) {
            object[] results = this.Invoke("AddHtmlBlogXml", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        html,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddHtmlBlogXmlAsync(string token, string name, string topic, string title, string html, string xml) {
            this.AddHtmlBlogXmlAsync(token, name, topic, title, html, xml, null);
        }
        
        /// <remarks/>
        public void AddHtmlBlogXmlAsync(string token, string name, string topic, string title, string html, string xml, object userState) {
            if ((this.AddHtmlBlogXmlOperationCompleted == null)) {
                this.AddHtmlBlogXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHtmlBlogXmlOperationCompleted);
            }
            this.InvokeAsync("AddHtmlBlogXml", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        html,
                        xml}, this.AddHtmlBlogXmlOperationCompleted, userState);
        }
        
        private void OnAddHtmlBlogXmlOperationCompleted(object arg) {
            if ((this.AddHtmlBlogXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHtmlBlogXmlCompleted(this, new AddHtmlBlogXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddHtmlBlogID", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddHtmlBlogID(string token, string name, string topic, string id, string title, string html) {
            object[] results = this.Invoke("AddHtmlBlogID", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddHtmlBlogIDAsync(string token, string name, string topic, string id, string title, string html) {
            this.AddHtmlBlogIDAsync(token, name, topic, id, title, html, null);
        }
        
        /// <remarks/>
        public void AddHtmlBlogIDAsync(string token, string name, string topic, string id, string title, string html, object userState) {
            if ((this.AddHtmlBlogIDOperationCompleted == null)) {
                this.AddHtmlBlogIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHtmlBlogIDOperationCompleted);
            }
            this.InvokeAsync("AddHtmlBlogID", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        html}, this.AddHtmlBlogIDOperationCompleted, userState);
        }
        
        private void OnAddHtmlBlogIDOperationCompleted(object arg) {
            if ((this.AddHtmlBlogIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHtmlBlogIDCompleted(this, new AddHtmlBlogIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddHtmlBlogDate", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddHtmlBlogDate(string token, string name, string topic, string year, string month, string day, string title, string text, string html) {
            object[] results = this.Invoke("AddHtmlBlogDate", new object[] {
                        token,
                        name,
                        topic,
                        year,
                        month,
                        day,
                        title,
                        text,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddHtmlBlogDateAsync(string token, string name, string topic, string year, string month, string day, string title, string text, string html) {
            this.AddHtmlBlogDateAsync(token, name, topic, year, month, day, title, text, html, null);
        }
        
        /// <remarks/>
        public void AddHtmlBlogDateAsync(string token, string name, string topic, string year, string month, string day, string title, string text, string html, object userState) {
            if ((this.AddHtmlBlogDateOperationCompleted == null)) {
                this.AddHtmlBlogDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHtmlBlogDateOperationCompleted);
            }
            this.InvokeAsync("AddHtmlBlogDate", new object[] {
                        token,
                        name,
                        topic,
                        year,
                        month,
                        day,
                        title,
                        text,
                        html}, this.AddHtmlBlogDateOperationCompleted, userState);
        }
        
        private void OnAddHtmlBlogDateOperationCompleted(object arg) {
            if ((this.AddHtmlBlogDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHtmlBlogDateCompleted(this, new AddHtmlBlogDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddImageBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddImageBlog(string token, string name, string topic, string title, string text, string image) {
            object[] results = this.Invoke("AddImageBlog", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        text,
                        image});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddImageBlogAsync(string token, string name, string topic, string title, string text, string image) {
            this.AddImageBlogAsync(token, name, topic, title, text, image, null);
        }
        
        /// <remarks/>
        public void AddImageBlogAsync(string token, string name, string topic, string title, string text, string image, object userState) {
            if ((this.AddImageBlogOperationCompleted == null)) {
                this.AddImageBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddImageBlogOperationCompleted);
            }
            this.InvokeAsync("AddImageBlog", new object[] {
                        token,
                        name,
                        topic,
                        title,
                        text,
                        image}, this.AddImageBlogOperationCompleted, userState);
        }
        
        private void OnAddImageBlogOperationCompleted(object arg) {
            if ((this.AddImageBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddImageBlogCompleted(this, new AddImageBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddImageBlogID", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddImageBlogID(string token, string name, string topic, string id, string title, string text, string image) {
            object[] results = this.Invoke("AddImageBlogID", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        text,
                        image});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddImageBlogIDAsync(string token, string name, string topic, string id, string title, string text, string image) {
            this.AddImageBlogIDAsync(token, name, topic, id, title, text, image, null);
        }
        
        /// <remarks/>
        public void AddImageBlogIDAsync(string token, string name, string topic, string id, string title, string text, string image, object userState) {
            if ((this.AddImageBlogIDOperationCompleted == null)) {
                this.AddImageBlogIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddImageBlogIDOperationCompleted);
            }
            this.InvokeAsync("AddImageBlogID", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        text,
                        image}, this.AddImageBlogIDOperationCompleted, userState);
        }
        
        private void OnAddImageBlogIDOperationCompleted(object arg) {
            if ((this.AddImageBlogIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddImageBlogIDCompleted(this, new AddImageBlogIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/DeleteBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteBlog(string token, string name, string topic, string id) {
            object[] results = this.Invoke("DeleteBlog", new object[] {
                        token,
                        name,
                        topic,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBlogAsync(string token, string name, string topic, string id) {
            this.DeleteBlogAsync(token, name, topic, id, null);
        }
        
        /// <remarks/>
        public void DeleteBlogAsync(string token, string name, string topic, string id, object userState) {
            if ((this.DeleteBlogOperationCompleted == null)) {
                this.DeleteBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBlogOperationCompleted);
            }
            this.InvokeAsync("DeleteBlog", new object[] {
                        token,
                        name,
                        topic,
                        id}, this.DeleteBlogOperationCompleted, userState);
        }
        
        private void OnDeleteBlogOperationCompleted(object arg) {
            if ((this.DeleteBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBlogCompleted(this, new DeleteBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditBlog(string token, string name, string topic, string id, string title, string xml) {
            object[] results = this.Invoke("EditBlog", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditBlogAsync(string token, string name, string topic, string id, string title, string xml) {
            this.EditBlogAsync(token, name, topic, id, title, xml, null);
        }
        
        /// <remarks/>
        public void EditBlogAsync(string token, string name, string topic, string id, string title, string xml, object userState) {
            if ((this.EditBlogOperationCompleted == null)) {
                this.EditBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBlogOperationCompleted);
            }
            this.InvokeAsync("EditBlog", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        xml}, this.EditBlogOperationCompleted, userState);
        }
        
        private void OnEditBlogOperationCompleted(object arg) {
            if ((this.EditBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBlogCompleted(this, new EditBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditTextBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditTextBlog(string token, string name, string topic, string id, string title, string text) {
            object[] results = this.Invoke("EditTextBlog", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        text});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditTextBlogAsync(string token, string name, string topic, string id, string title, string text) {
            this.EditTextBlogAsync(token, name, topic, id, title, text, null);
        }
        
        /// <remarks/>
        public void EditTextBlogAsync(string token, string name, string topic, string id, string title, string text, object userState) {
            if ((this.EditTextBlogOperationCompleted == null)) {
                this.EditTextBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTextBlogOperationCompleted);
            }
            this.InvokeAsync("EditTextBlog", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        text}, this.EditTextBlogOperationCompleted, userState);
        }
        
        private void OnEditTextBlogOperationCompleted(object arg) {
            if ((this.EditTextBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTextBlogCompleted(this, new EditTextBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditHtmlBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditHtmlBlog(string token, string name, string topic, string id, string title, string html) {
            object[] results = this.Invoke("EditHtmlBlog", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditHtmlBlogAsync(string token, string name, string topic, string id, string title, string html) {
            this.EditHtmlBlogAsync(token, name, topic, id, title, html, null);
        }
        
        /// <remarks/>
        public void EditHtmlBlogAsync(string token, string name, string topic, string id, string title, string html, object userState) {
            if ((this.EditHtmlBlogOperationCompleted == null)) {
                this.EditHtmlBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditHtmlBlogOperationCompleted);
            }
            this.InvokeAsync("EditHtmlBlog", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        html}, this.EditHtmlBlogOperationCompleted, userState);
        }
        
        private void OnEditHtmlBlogOperationCompleted(object arg) {
            if ((this.EditHtmlBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditHtmlBlogCompleted(this, new EditHtmlBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditHtmlBlogXml", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditHtmlBlogXml(string token, string name, string topic, string id, string title, string html, string xml) {
            object[] results = this.Invoke("EditHtmlBlogXml", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        html,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditHtmlBlogXmlAsync(string token, string name, string topic, string id, string title, string html, string xml) {
            this.EditHtmlBlogXmlAsync(token, name, topic, id, title, html, xml, null);
        }
        
        /// <remarks/>
        public void EditHtmlBlogXmlAsync(string token, string name, string topic, string id, string title, string html, string xml, object userState) {
            if ((this.EditHtmlBlogXmlOperationCompleted == null)) {
                this.EditHtmlBlogXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditHtmlBlogXmlOperationCompleted);
            }
            this.InvokeAsync("EditHtmlBlogXml", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        html,
                        xml}, this.EditHtmlBlogXmlOperationCompleted, userState);
        }
        
        private void OnEditHtmlBlogXmlOperationCompleted(object arg) {
            if ((this.EditHtmlBlogXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditHtmlBlogXmlCompleted(this, new EditHtmlBlogXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditHtmlBlogDate", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditHtmlBlogDate(string token, string name, string topic, string id, string title, string text, string html) {
            object[] results = this.Invoke("EditHtmlBlogDate", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        text,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditHtmlBlogDateAsync(string token, string name, string topic, string id, string title, string text, string html) {
            this.EditHtmlBlogDateAsync(token, name, topic, id, title, text, html, null);
        }
        
        /// <remarks/>
        public void EditHtmlBlogDateAsync(string token, string name, string topic, string id, string title, string text, string html, object userState) {
            if ((this.EditHtmlBlogDateOperationCompleted == null)) {
                this.EditHtmlBlogDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditHtmlBlogDateOperationCompleted);
            }
            this.InvokeAsync("EditHtmlBlogDate", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        text,
                        html}, this.EditHtmlBlogDateOperationCompleted, userState);
        }
        
        private void OnEditHtmlBlogDateOperationCompleted(object arg) {
            if ((this.EditHtmlBlogDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditHtmlBlogDateCompleted(this, new EditHtmlBlogDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditBlogTitleDate", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditBlogTitleDate(string token, string name, string topic, string id, string title, string year, string month, string day) {
            object[] results = this.Invoke("EditBlogTitleDate", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        year,
                        month,
                        day});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditBlogTitleDateAsync(string token, string name, string topic, string id, string title, string year, string month, string day) {
            this.EditBlogTitleDateAsync(token, name, topic, id, title, year, month, day, null);
        }
        
        /// <remarks/>
        public void EditBlogTitleDateAsync(string token, string name, string topic, string id, string title, string year, string month, string day, object userState) {
            if ((this.EditBlogTitleDateOperationCompleted == null)) {
                this.EditBlogTitleDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBlogTitleDateOperationCompleted);
            }
            this.InvokeAsync("EditBlogTitleDate", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title,
                        year,
                        month,
                        day}, this.EditBlogTitleDateOperationCompleted, userState);
        }
        
        private void OnEditBlogTitleDateOperationCompleted(object arg) {
            if ((this.EditBlogTitleDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBlogTitleDateCompleted(this, new EditBlogTitleDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditBlogTitle", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditBlogTitle(string token, string name, string topic, string id, string title) {
            object[] results = this.Invoke("EditBlogTitle", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditBlogTitleAsync(string token, string name, string topic, string id, string title) {
            this.EditBlogTitleAsync(token, name, topic, id, title, null);
        }
        
        /// <remarks/>
        public void EditBlogTitleAsync(string token, string name, string topic, string id, string title, object userState) {
            if ((this.EditBlogTitleOperationCompleted == null)) {
                this.EditBlogTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBlogTitleOperationCompleted);
            }
            this.InvokeAsync("EditBlogTitle", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        title}, this.EditBlogTitleOperationCompleted, userState);
        }
        
        private void OnEditBlogTitleOperationCompleted(object arg) {
            if ((this.EditBlogTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBlogTitleCompleted(this, new EditBlogTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/RestoreBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RestoreBlog(string token, string name, string topic, string id, string historyid) {
            object[] results = this.Invoke("RestoreBlog", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        historyid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreBlogAsync(string token, string name, string topic, string id, string historyid) {
            this.RestoreBlogAsync(token, name, topic, id, historyid, null);
        }
        
        /// <remarks/>
        public void RestoreBlogAsync(string token, string name, string topic, string id, string historyid, object userState) {
            if ((this.RestoreBlogOperationCompleted == null)) {
                this.RestoreBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreBlogOperationCompleted);
            }
            this.InvokeAsync("RestoreBlog", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        historyid}, this.RestoreBlogOperationCompleted, userState);
        }
        
        private void OnRestoreBlogOperationCompleted(object arg) {
            if ((this.RestoreBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreBlogCompleted(this, new RestoreBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetBlogComment", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetBlogComment(string token, string name, string topic, string id, string cid) {
            object[] results = this.Invoke("GetBlogComment", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        cid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlogCommentAsync(string token, string name, string topic, string id, string cid) {
            this.GetBlogCommentAsync(token, name, topic, id, cid, null);
        }
        
        /// <remarks/>
        public void GetBlogCommentAsync(string token, string name, string topic, string id, string cid, object userState) {
            if ((this.GetBlogCommentOperationCompleted == null)) {
                this.GetBlogCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlogCommentOperationCompleted);
            }
            this.InvokeAsync("GetBlogComment", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        cid}, this.GetBlogCommentOperationCompleted, userState);
        }
        
        private void OnGetBlogCommentOperationCompleted(object arg) {
            if ((this.GetBlogCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlogCommentCompleted(this, new GetBlogCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddBlogComment", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddBlogComment(string token, string name, string topic, string id, string author, string title, string text) {
            object[] results = this.Invoke("AddBlogComment", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        author,
                        title,
                        text});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddBlogCommentAsync(string token, string name, string topic, string id, string author, string title, string text) {
            this.AddBlogCommentAsync(token, name, topic, id, author, title, text, null);
        }
        
        /// <remarks/>
        public void AddBlogCommentAsync(string token, string name, string topic, string id, string author, string title, string text, object userState) {
            if ((this.AddBlogCommentOperationCompleted == null)) {
                this.AddBlogCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBlogCommentOperationCompleted);
            }
            this.InvokeAsync("AddBlogComment", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        author,
                        title,
                        text}, this.AddBlogCommentOperationCompleted, userState);
        }
        
        private void OnAddBlogCommentOperationCompleted(object arg) {
            if ((this.AddBlogCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBlogCommentCompleted(this, new AddBlogCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditBlogComment", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditBlogComment(string token, string name, string topic, string id, string cid, string title, string text) {
            object[] results = this.Invoke("EditBlogComment", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        cid,
                        title,
                        text});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditBlogCommentAsync(string token, string name, string topic, string id, string cid, string title, string text) {
            this.EditBlogCommentAsync(token, name, topic, id, cid, title, text, null);
        }
        
        /// <remarks/>
        public void EditBlogCommentAsync(string token, string name, string topic, string id, string cid, string title, string text, object userState) {
            if ((this.EditBlogCommentOperationCompleted == null)) {
                this.EditBlogCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBlogCommentOperationCompleted);
            }
            this.InvokeAsync("EditBlogComment", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        cid,
                        title,
                        text}, this.EditBlogCommentOperationCompleted, userState);
        }
        
        private void OnEditBlogCommentOperationCompleted(object arg) {
            if ((this.EditBlogCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBlogCommentCompleted(this, new EditBlogCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/DeleteBlogComment", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteBlogComment(string token, string name, string topic, string id, string cid) {
            object[] results = this.Invoke("DeleteBlogComment", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        cid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBlogCommentAsync(string token, string name, string topic, string id, string cid) {
            this.DeleteBlogCommentAsync(token, name, topic, id, cid, null);
        }
        
        /// <remarks/>
        public void DeleteBlogCommentAsync(string token, string name, string topic, string id, string cid, object userState) {
            if ((this.DeleteBlogCommentOperationCompleted == null)) {
                this.DeleteBlogCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBlogCommentOperationCompleted);
            }
            this.InvokeAsync("DeleteBlogComment", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        cid}, this.DeleteBlogCommentOperationCompleted, userState);
        }
        
        private void OnDeleteBlogCommentOperationCompleted(object arg) {
            if ((this.DeleteBlogCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBlogCommentCompleted(this, new DeleteBlogCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetBlogImage", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetBlogImage(string token, string name, string topic, string id, string iid) {
            object[] results = this.Invoke("GetBlogImage", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        iid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlogImageAsync(string token, string name, string topic, string id, string iid) {
            this.GetBlogImageAsync(token, name, topic, id, iid, null);
        }
        
        /// <remarks/>
        public void GetBlogImageAsync(string token, string name, string topic, string id, string iid, object userState) {
            if ((this.GetBlogImageOperationCompleted == null)) {
                this.GetBlogImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlogImageOperationCompleted);
            }
            this.InvokeAsync("GetBlogImage", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        iid}, this.GetBlogImageOperationCompleted, userState);
        }
        
        private void OnGetBlogImageOperationCompleted(object arg) {
            if ((this.GetBlogImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlogImageCompleted(this, new GetBlogImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddBlogImage", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddBlogImage(string token, string name, string topic, string id, string author, string title, string text) {
            object[] results = this.Invoke("AddBlogImage", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        author,
                        title,
                        text});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddBlogImageAsync(string token, string name, string topic, string id, string author, string title, string text) {
            this.AddBlogImageAsync(token, name, topic, id, author, title, text, null);
        }
        
        /// <remarks/>
        public void AddBlogImageAsync(string token, string name, string topic, string id, string author, string title, string text, object userState) {
            if ((this.AddBlogImageOperationCompleted == null)) {
                this.AddBlogImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBlogImageOperationCompleted);
            }
            this.InvokeAsync("AddBlogImage", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        author,
                        title,
                        text}, this.AddBlogImageOperationCompleted, userState);
        }
        
        private void OnAddBlogImageOperationCompleted(object arg) {
            if ((this.AddBlogImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBlogImageCompleted(this, new AddBlogImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditBlogImage", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditBlogImage(string token, string name, string topic, string id, string iid, string title, string text) {
            object[] results = this.Invoke("EditBlogImage", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        iid,
                        title,
                        text});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditBlogImageAsync(string token, string name, string topic, string id, string iid, string title, string text) {
            this.EditBlogImageAsync(token, name, topic, id, iid, title, text, null);
        }
        
        /// <remarks/>
        public void EditBlogImageAsync(string token, string name, string topic, string id, string iid, string title, string text, object userState) {
            if ((this.EditBlogImageOperationCompleted == null)) {
                this.EditBlogImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBlogImageOperationCompleted);
            }
            this.InvokeAsync("EditBlogImage", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        iid,
                        title,
                        text}, this.EditBlogImageOperationCompleted, userState);
        }
        
        private void OnEditBlogImageOperationCompleted(object arg) {
            if ((this.EditBlogImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBlogImageCompleted(this, new EditBlogImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/DeleteBlogImage", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteBlogImage(string token, string name, string topic, string id, string iid) {
            object[] results = this.Invoke("DeleteBlogImage", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        iid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBlogImageAsync(string token, string name, string topic, string id, string iid) {
            this.DeleteBlogImageAsync(token, name, topic, id, iid, null);
        }
        
        /// <remarks/>
        public void DeleteBlogImageAsync(string token, string name, string topic, string id, string iid, object userState) {
            if ((this.DeleteBlogImageOperationCompleted == null)) {
                this.DeleteBlogImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBlogImageOperationCompleted);
            }
            this.InvokeAsync("DeleteBlogImage", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        iid}, this.DeleteBlogImageOperationCompleted, userState);
        }
        
        private void OnDeleteBlogImageOperationCompleted(object arg) {
            if ((this.DeleteBlogImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBlogImageCompleted(this, new DeleteBlogImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/DefaultBlogImage", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DefaultBlogImage(string token, string name, string topic, string id, string iid) {
            object[] results = this.Invoke("DefaultBlogImage", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        iid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DefaultBlogImageAsync(string token, string name, string topic, string id, string iid) {
            this.DefaultBlogImageAsync(token, name, topic, id, iid, null);
        }
        
        /// <remarks/>
        public void DefaultBlogImageAsync(string token, string name, string topic, string id, string iid, object userState) {
            if ((this.DefaultBlogImageOperationCompleted == null)) {
                this.DefaultBlogImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDefaultBlogImageOperationCompleted);
            }
            this.InvokeAsync("DefaultBlogImage", new object[] {
                        token,
                        name,
                        topic,
                        id,
                        iid}, this.DefaultBlogImageOperationCompleted, userState);
        }
        
        private void OnDefaultBlogImageOperationCompleted(object arg) {
            if ((this.DefaultBlogImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DefaultBlogImageCompleted(this, new DefaultBlogImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/ListUsers", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListUsers(string token) {
            object[] results = this.Invoke("ListUsers", new object[] {
                        token});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListUsersAsync(string token) {
            this.ListUsersAsync(token, null);
        }
        
        /// <remarks/>
        public void ListUsersAsync(string token, object userState) {
            if ((this.ListUsersOperationCompleted == null)) {
                this.ListUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListUsersOperationCompleted);
            }
            this.InvokeAsync("ListUsers", new object[] {
                        token}, this.ListUsersOperationCompleted, userState);
        }
        
        private void OnListUsersOperationCompleted(object arg) {
            if ((this.ListUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListUsersCompleted(this, new ListUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/ListUsersByGroup", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListUsersByGroup(string token, string group) {
            object[] results = this.Invoke("ListUsersByGroup", new object[] {
                        token,
                        group});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListUsersByGroupAsync(string token, string group) {
            this.ListUsersByGroupAsync(token, group, null);
        }
        
        /// <remarks/>
        public void ListUsersByGroupAsync(string token, string group, object userState) {
            if ((this.ListUsersByGroupOperationCompleted == null)) {
                this.ListUsersByGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListUsersByGroupOperationCompleted);
            }
            this.InvokeAsync("ListUsersByGroup", new object[] {
                        token,
                        group}, this.ListUsersByGroupOperationCompleted, userState);
        }
        
        private void OnListUsersByGroupOperationCompleted(object arg) {
            if ((this.ListUsersByGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListUsersByGroupCompleted(this, new ListUsersByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUser(string token, string name) {
            object[] results = this.Invoke("GetUser", new object[] {
                        token,
                        name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(string token, string name) {
            this.GetUserAsync(token, name, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(string token, string name, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        token,
                        name}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetPassword", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPassword(string token, string name) {
            object[] results = this.Invoke("GetPassword", new object[] {
                        token,
                        name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordAsync(string token, string name) {
            this.GetPasswordAsync(token, name, null);
        }
        
        /// <remarks/>
        public void GetPasswordAsync(string token, string name, object userState) {
            if ((this.GetPasswordOperationCompleted == null)) {
                this.GetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordOperationCompleted);
            }
            this.InvokeAsync("GetPassword", new object[] {
                        token,
                        name}, this.GetPasswordOperationCompleted, userState);
        }
        
        private void OnGetPasswordOperationCompleted(object arg) {
            if ((this.GetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordCompleted(this, new GetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetSecret", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetSecret(string token, string name) {
            object[] results = this.Invoke("GetSecret", new object[] {
                        token,
                        name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecretAsync(string token, string name) {
            this.GetSecretAsync(token, name, null);
        }
        
        /// <remarks/>
        public void GetSecretAsync(string token, string name, object userState) {
            if ((this.GetSecretOperationCompleted == null)) {
                this.GetSecretOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecretOperationCompleted);
            }
            this.InvokeAsync("GetSecret", new object[] {
                        token,
                        name}, this.GetSecretOperationCompleted, userState);
        }
        
        private void OnGetSecretOperationCompleted(object arg) {
            if ((this.GetSecretCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecretCompleted(this, new GetSecretCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddUser(string token, string name, string firstname, string surname, string email, string telno, string secret, string password, string group) {
            object[] results = this.Invoke("AddUser", new object[] {
                        token,
                        name,
                        firstname,
                        surname,
                        email,
                        telno,
                        secret,
                        password,
                        group});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(string token, string name, string firstname, string surname, string email, string telno, string secret, string password, string group) {
            this.AddUserAsync(token, name, firstname, surname, email, telno, secret, password, group, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(string token, string name, string firstname, string surname, string email, string telno, string secret, string password, string group, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        token,
                        name,
                        firstname,
                        surname,
                        email,
                        telno,
                        secret,
                        password,
                        group}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/EditUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditUser(string token, string name, string firstname, string surname, string email, string telno, string group) {
            object[] results = this.Invoke("EditUser", new object[] {
                        token,
                        name,
                        firstname,
                        surname,
                        email,
                        telno,
                        group});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditUserAsync(string token, string name, string firstname, string surname, string email, string telno, string group) {
            this.EditUserAsync(token, name, firstname, surname, email, telno, group, null);
        }
        
        /// <remarks/>
        public void EditUserAsync(string token, string name, string firstname, string surname, string email, string telno, string group, object userState) {
            if ((this.EditUserOperationCompleted == null)) {
                this.EditUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUserOperationCompleted);
            }
            this.InvokeAsync("EditUser", new object[] {
                        token,
                        name,
                        firstname,
                        surname,
                        email,
                        telno,
                        group}, this.EditUserOperationCompleted, userState);
        }
        
        private void OnEditUserOperationCompleted(object arg) {
            if ((this.EditUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUserCompleted(this, new EditUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/ChangeLogin", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ChangeLogin(string token, string name, string password, string secret) {
            object[] results = this.Invoke("ChangeLogin", new object[] {
                        token,
                        name,
                        password,
                        secret});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeLoginAsync(string token, string name, string password, string secret) {
            this.ChangeLoginAsync(token, name, password, secret, null);
        }
        
        /// <remarks/>
        public void ChangeLoginAsync(string token, string name, string password, string secret, object userState) {
            if ((this.ChangeLoginOperationCompleted == null)) {
                this.ChangeLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeLoginOperationCompleted);
            }
            this.InvokeAsync("ChangeLogin", new object[] {
                        token,
                        name,
                        password,
                        secret}, this.ChangeLoginOperationCompleted, userState);
        }
        
        private void OnChangeLoginOperationCompleted(object arg) {
            if ((this.ChangeLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeLoginCompleted(this, new ChangeLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddUserBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddUserBlog(string token, string name, string title, string html) {
            object[] results = this.Invoke("AddUserBlog", new object[] {
                        token,
                        name,
                        title,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserBlogAsync(string token, string name, string title, string html) {
            this.AddUserBlogAsync(token, name, title, html, null);
        }
        
        /// <remarks/>
        public void AddUserBlogAsync(string token, string name, string title, string html, object userState) {
            if ((this.AddUserBlogOperationCompleted == null)) {
                this.AddUserBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserBlogOperationCompleted);
            }
            this.InvokeAsync("AddUserBlog", new object[] {
                        token,
                        name,
                        title,
                        html}, this.AddUserBlogOperationCompleted, userState);
        }
        
        private void OnAddUserBlogOperationCompleted(object arg) {
            if ((this.AddUserBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserBlogCompleted(this, new AddUserBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetUserBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUserBlog(string token, string name) {
            object[] results = this.Invoke("GetUserBlog", new object[] {
                        token,
                        name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBlogAsync(string token, string name) {
            this.GetUserBlogAsync(token, name, null);
        }
        
        /// <remarks/>
        public void GetUserBlogAsync(string token, string name, object userState) {
            if ((this.GetUserBlogOperationCompleted == null)) {
                this.GetUserBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBlogOperationCompleted);
            }
            this.InvokeAsync("GetUserBlog", new object[] {
                        token,
                        name}, this.GetUserBlogOperationCompleted, userState);
        }
        
        private void OnGetUserBlogOperationCompleted(object arg) {
            if ((this.GetUserBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBlogCompleted(this, new GetUserBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/GetUserSpaces", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUserSpaces(string token, string name) {
            object[] results = this.Invoke("GetUserSpaces", new object[] {
                        token,
                        name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSpacesAsync(string token, string name) {
            this.GetUserSpacesAsync(token, name, null);
        }
        
        /// <remarks/>
        public void GetUserSpacesAsync(string token, string name, object userState) {
            if ((this.GetUserSpacesOperationCompleted == null)) {
                this.GetUserSpacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSpacesOperationCompleted);
            }
            this.InvokeAsync("GetUserSpaces", new object[] {
                        token,
                        name}, this.GetUserSpacesOperationCompleted, userState);
        }
        
        private void OnGetUserSpacesOperationCompleted(object arg) {
            if ((this.GetUserSpacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSpacesCompleted(this, new GetUserSpacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddUserSpace", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddUserSpace(string token, string name, string spacename) {
            object[] results = this.Invoke("AddUserSpace", new object[] {
                        token,
                        name,
                        spacename});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserSpaceAsync(string token, string name, string spacename) {
            this.AddUserSpaceAsync(token, name, spacename, null);
        }
        
        /// <remarks/>
        public void AddUserSpaceAsync(string token, string name, string spacename, object userState) {
            if ((this.AddUserSpaceOperationCompleted == null)) {
                this.AddUserSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserSpaceOperationCompleted);
            }
            this.InvokeAsync("AddUserSpace", new object[] {
                        token,
                        name,
                        spacename}, this.AddUserSpaceOperationCompleted, userState);
        }
        
        private void OnAddUserSpaceOperationCompleted(object arg) {
            if ((this.AddUserSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserSpaceCompleted(this, new AddUserSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/DeleteUserSpace", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteUserSpace(string token, string name, string spacename) {
            object[] results = this.Invoke("DeleteUserSpace", new object[] {
                        token,
                        name,
                        spacename});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserSpaceAsync(string token, string name, string spacename) {
            this.DeleteUserSpaceAsync(token, name, spacename, null);
        }
        
        /// <remarks/>
        public void DeleteUserSpaceAsync(string token, string name, string spacename, object userState) {
            if ((this.DeleteUserSpaceOperationCompleted == null)) {
                this.DeleteUserSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserSpaceOperationCompleted);
            }
            this.InvokeAsync("DeleteUserSpace", new object[] {
                        token,
                        name,
                        spacename}, this.DeleteUserSpaceOperationCompleted, userState);
        }
        
        private void OnDeleteUserSpaceOperationCompleted(object arg) {
            if ((this.DeleteUserSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserSpaceCompleted(this, new DeleteUserSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/DefaultUserSpace", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DefaultUserSpace(string token, string name, string spacename) {
            object[] results = this.Invoke("DefaultUserSpace", new object[] {
                        token,
                        name,
                        spacename});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DefaultUserSpaceAsync(string token, string name, string spacename) {
            this.DefaultUserSpaceAsync(token, name, spacename, null);
        }
        
        /// <remarks/>
        public void DefaultUserSpaceAsync(string token, string name, string spacename, object userState) {
            if ((this.DefaultUserSpaceOperationCompleted == null)) {
                this.DefaultUserSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDefaultUserSpaceOperationCompleted);
            }
            this.InvokeAsync("DefaultUserSpace", new object[] {
                        token,
                        name,
                        spacename}, this.DefaultUserSpaceOperationCompleted, userState);
        }
        
        private void OnDefaultUserSpaceOperationCompleted(object arg) {
            if ((this.DefaultUserSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DefaultUserSpaceCompleted(this, new DefaultUserSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/AddRecruit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddRecruit(string spacename, string firstname, string surname, string email) {
            object[] results = this.Invoke("AddRecruit", new object[] {
                        spacename,
                        firstname,
                        surname,
                        email});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddRecruitAsync(string spacename, string firstname, string surname, string email) {
            this.AddRecruitAsync(spacename, firstname, surname, email, null);
        }
        
        /// <remarks/>
        public void AddRecruitAsync(string spacename, string firstname, string surname, string email, object userState) {
            if ((this.AddRecruitOperationCompleted == null)) {
                this.AddRecruitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRecruitOperationCompleted);
            }
            this.InvokeAsync("AddRecruit", new object[] {
                        spacename,
                        firstname,
                        surname,
                        email}, this.AddRecruitOperationCompleted, userState);
        }
        
        private void OnAddRecruitOperationCompleted(object arg) {
            if ((this.AddRecruitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRecruitCompleted(this, new AddRecruitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/RegisterRecruit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RegisterRecruit(string id, string telno, string extrainfo1, string extrainfo2, string extrainfo3, string extrainfo4) {
            object[] results = this.Invoke("RegisterRecruit", new object[] {
                        id,
                        telno,
                        extrainfo1,
                        extrainfo2,
                        extrainfo3,
                        extrainfo4});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterRecruitAsync(string id, string telno, string extrainfo1, string extrainfo2, string extrainfo3, string extrainfo4) {
            this.RegisterRecruitAsync(id, telno, extrainfo1, extrainfo2, extrainfo3, extrainfo4, null);
        }
        
        /// <remarks/>
        public void RegisterRecruitAsync(string id, string telno, string extrainfo1, string extrainfo2, string extrainfo3, string extrainfo4, object userState) {
            if ((this.RegisterRecruitOperationCompleted == null)) {
                this.RegisterRecruitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterRecruitOperationCompleted);
            }
            this.InvokeAsync("RegisterRecruit", new object[] {
                        id,
                        telno,
                        extrainfo1,
                        extrainfo2,
                        extrainfo3,
                        extrainfo4}, this.RegisterRecruitOperationCompleted, userState);
        }
        
        private void OnRegisterRecruitOperationCompleted(object arg) {
            if ((this.RegisterRecruitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterRecruitCompleted(this, new RegisterRecruitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/Test", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/TestName", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestName() {
            object[] results = this.Invoke("TestName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestNameAsync() {
            this.TestNameAsync(null);
        }
        
        /// <remarks/>
        public void TestNameAsync(object userState) {
            if ((this.TestNameOperationCompleted == null)) {
                this.TestNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestNameOperationCompleted);
            }
            this.InvokeAsync("TestName", new object[0], this.TestNameOperationCompleted, userState);
        }
        
        private void OnTestNameOperationCompleted(object arg) {
            if ((this.TestNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestNameCompleted(this, new TestNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/TestCustom", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestCustom(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            object[] results = this.Invoke("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            this.TestCustomAsync(Format, RootName, ResultName, CodeName, DescriptionName, null);
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName, object userState) {
            if ((this.TestCustomOperationCompleted == null)) {
                this.TestCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCustomOperationCompleted);
            }
            this.InvokeAsync("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName}, this.TestCustomOperationCompleted, userState);
        }
        
        private void OnTestCustomOperationCompleted(object arg) {
            if ((this.TestCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCustomCompleted(this, new TestCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/TestError", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestError() {
            object[] results = this.Invoke("TestError", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestErrorAsync() {
            this.TestErrorAsync(null);
        }
        
        /// <remarks/>
        public void TestErrorAsync(object userState) {
            if ((this.TestErrorOperationCompleted == null)) {
                this.TestErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestErrorOperationCompleted);
            }
            this.InvokeAsync("TestError", new object[0], this.TestErrorOperationCompleted, userState);
        }
        
        private void OnTestErrorOperationCompleted(object arg) {
            if ((this.TestErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestErrorCompleted(this, new TestErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/BlogX/TestException", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/BlogX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestException() {
            object[] results = this.Invoke("TestException", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestExceptionAsync() {
            this.TestExceptionAsync(null);
        }
        
        /// <remarks/>
        public void TestExceptionAsync(object userState) {
            if ((this.TestExceptionOperationCompleted == null)) {
                this.TestExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestExceptionOperationCompleted);
            }
            this.InvokeAsync("TestException", new object[0], this.TestExceptionOperationCompleted, userState);
        }
        
        private void OnTestExceptionOperationCompleted(object arg) {
            if ((this.TestExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestExceptionCompleted(this, new TestExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ValidateTokenCompletedEventHandler(object sender, ValidateTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ValidateCompletedEventHandler(object sender, ValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRightsCompletedEventHandler(object sender, GetRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RegisterAuthorCompletedEventHandler(object sender, RegisterAuthorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterAuthorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterAuthorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RegisterSubscriberCompletedEventHandler(object sender, RegisterSubscriberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateSubscriberCompletedEventHandler(object sender, UpdateSubscriberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UploadNewsletterCompletedEventHandler(object sender, UploadNewsletterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadNewsletterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadNewsletterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendNewsletterCompletedEventHandler(object sender, SendNewsletterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendNewsletterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendNewsletterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendNewsCompletedEventHandler(object sender, SendNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetSpaceCompletedEventHandler(object sender, GetSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListSpacesCompletedEventHandler(object sender, ListSpacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSpacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSpacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddSpaceCompletedEventHandler(object sender, AddSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditSpaceCompletedEventHandler(object sender, EditSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateSpaceCompletedEventHandler(object sender, UpdateSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveSpaceCompletedEventHandler(object sender, RemoveSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetSpaceBlogCompletedEventHandler(object sender, GetSpaceBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpaceBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpaceBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddSpaceBlogCompletedEventHandler(object sender, AddSpaceBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSpaceBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSpaceBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddSpaceImageCompletedEventHandler(object sender, AddSpaceImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSpaceImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSpaceImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ChangeArchiveCompletedEventHandler(object sender, ChangeArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveUserCompletedEventHandler(object sender, RemoveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddLinkCompletedEventHandler(object sender, AddLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditLinkCompletedEventHandler(object sender, EditLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteLinkCompletedEventHandler(object sender, DeleteLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListTopicsCompletedEventHandler(object sender, ListTopicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListTopicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListTopicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTopicCompletedEventHandler(object sender, AddTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditTopicCompletedEventHandler(object sender, EditTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteTopicCompletedEventHandler(object sender, DeleteTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteBlogHistoryCompletedEventHandler(object sender, DeleteBlogHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBlogHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBlogHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetTopicBlogCompletedEventHandler(object sender, GetTopicBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTopicBlogCompletedEventHandler(object sender, AddTopicBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTopicBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTopicBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTopicImageCompletedEventHandler(object sender, AddTopicImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTopicImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTopicImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateTopicCompletedEventHandler(object sender, UpdateTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetSpaceCurrentCompletedEventHandler(object sender, GetSpaceCurrentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpaceCurrentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpaceCurrentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetBlogCompletedEventHandler(object sender, GetBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListBlogsCompletedEventHandler(object sender, ListBlogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListBlogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListBlogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListBlogsOrgCompletedEventHandler(object sender, ListBlogsOrgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListBlogsOrgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListBlogsOrgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddBlogCompletedEventHandler(object sender, AddBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddBlogIDCompletedEventHandler(object sender, AddBlogIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBlogIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBlogIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTextBlogCompletedEventHandler(object sender, AddTextBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTextBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTextBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTextBlogIDCompletedEventHandler(object sender, AddTextBlogIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTextBlogIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTextBlogIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddHtmlBlogCompletedEventHandler(object sender, AddHtmlBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHtmlBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHtmlBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddHtmlBlogXmlCompletedEventHandler(object sender, AddHtmlBlogXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHtmlBlogXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHtmlBlogXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddHtmlBlogIDCompletedEventHandler(object sender, AddHtmlBlogIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHtmlBlogIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHtmlBlogIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddHtmlBlogDateCompletedEventHandler(object sender, AddHtmlBlogDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHtmlBlogDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHtmlBlogDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddImageBlogCompletedEventHandler(object sender, AddImageBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddImageBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddImageBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddImageBlogIDCompletedEventHandler(object sender, AddImageBlogIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddImageBlogIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddImageBlogIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteBlogCompletedEventHandler(object sender, DeleteBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditBlogCompletedEventHandler(object sender, EditBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditTextBlogCompletedEventHandler(object sender, EditTextBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTextBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTextBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditHtmlBlogCompletedEventHandler(object sender, EditHtmlBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditHtmlBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditHtmlBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditHtmlBlogXmlCompletedEventHandler(object sender, EditHtmlBlogXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditHtmlBlogXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditHtmlBlogXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditHtmlBlogDateCompletedEventHandler(object sender, EditHtmlBlogDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditHtmlBlogDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditHtmlBlogDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditBlogTitleDateCompletedEventHandler(object sender, EditBlogTitleDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBlogTitleDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBlogTitleDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditBlogTitleCompletedEventHandler(object sender, EditBlogTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBlogTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBlogTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RestoreBlogCompletedEventHandler(object sender, RestoreBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetBlogCommentCompletedEventHandler(object sender, GetBlogCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlogCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlogCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddBlogCommentCompletedEventHandler(object sender, AddBlogCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBlogCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBlogCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditBlogCommentCompletedEventHandler(object sender, EditBlogCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBlogCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBlogCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteBlogCommentCompletedEventHandler(object sender, DeleteBlogCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBlogCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBlogCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetBlogImageCompletedEventHandler(object sender, GetBlogImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlogImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlogImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddBlogImageCompletedEventHandler(object sender, AddBlogImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBlogImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBlogImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditBlogImageCompletedEventHandler(object sender, EditBlogImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBlogImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBlogImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteBlogImageCompletedEventHandler(object sender, DeleteBlogImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBlogImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBlogImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DefaultBlogImageCompletedEventHandler(object sender, DefaultBlogImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DefaultBlogImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DefaultBlogImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListUsersCompletedEventHandler(object sender, ListUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListUsersByGroupCompletedEventHandler(object sender, ListUsersByGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListUsersByGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListUsersByGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPasswordCompletedEventHandler(object sender, GetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetSecretCompletedEventHandler(object sender, GetSecretCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecretCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecretCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditUserCompletedEventHandler(object sender, EditUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ChangeLoginCompletedEventHandler(object sender, ChangeLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddUserBlogCompletedEventHandler(object sender, AddUserBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetUserBlogCompletedEventHandler(object sender, GetUserBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetUserSpacesCompletedEventHandler(object sender, GetUserSpacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSpacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSpacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddUserSpaceCompletedEventHandler(object sender, AddUserSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteUserSpaceCompletedEventHandler(object sender, DeleteUserSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DefaultUserSpaceCompletedEventHandler(object sender, DefaultUserSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DefaultUserSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DefaultUserSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddRecruitCompletedEventHandler(object sender, AddRecruitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRecruitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRecruitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RegisterRecruitCompletedEventHandler(object sender, RegisterRecruitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterRecruitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterRecruitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestNameCompletedEventHandler(object sender, TestNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestCustomCompletedEventHandler(object sender, TestCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestErrorCompletedEventHandler(object sender, TestErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestExceptionCompletedEventHandler(object sender, TestExceptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591