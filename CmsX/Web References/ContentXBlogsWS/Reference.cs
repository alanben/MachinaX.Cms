//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace clickclickboom.machinaX.blogX.cmsX.ContentXBlogsWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ContentXBlogsSoap", Namespace="http://www.clickclickBOOM.com/MachinaX/DisplayX")]
    public partial class ContentXBlogs : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDateTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestExceptionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ContentXBlogs() {
            this.Url = global::clickclickboom.machinaX.blogX.cmsX.Properties.Settings.Default.CmsX_2_6_0_ContentXBlogsWS_ContentXBlogs;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListCompletedEventHandler ListCompleted;
        
        /// <remarks/>
        public event GetCompletedEventHandler GetCompleted;
        
        /// <remarks/>
        public event GetBlogCompletedEventHandler GetBlogCompleted;
        
        /// <remarks/>
        public event AddCompletedEventHandler AddCompleted;
        
        /// <remarks/>
        public event AddNewsCompletedEventHandler AddNewsCompleted;
        
        /// <remarks/>
        public event EditCompletedEventHandler EditCompleted;
        
        /// <remarks/>
        public event EditTextCompletedEventHandler EditTextCompleted;
        
        /// <remarks/>
        public event EditNewsCompletedEventHandler EditNewsCompleted;
        
        /// <remarks/>
        public event EditTitleCompletedEventHandler EditTitleCompleted;
        
        /// <remarks/>
        public event EditDateTitleCompletedEventHandler EditDateTitleCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event GetCommentsCompletedEventHandler GetCommentsCompleted;
        
        /// <remarks/>
        public event GetCommentCompletedEventHandler GetCommentCompleted;
        
        /// <remarks/>
        public event AddCommentCompletedEventHandler AddCommentCompleted;
        
        /// <remarks/>
        public event EditCommentCompletedEventHandler EditCommentCompleted;
        
        /// <remarks/>
        public event DeleteCommentCompletedEventHandler DeleteCommentCompleted;
        
        /// <remarks/>
        public event ListHistoryCompletedEventHandler ListHistoryCompleted;
        
        /// <remarks/>
        public event RestoreHistoryCompletedEventHandler RestoreHistoryCompleted;
        
        /// <remarks/>
        public event GetHistoryCompletedEventHandler GetHistoryCompleted;
        
        /// <remarks/>
        public event DeleteHistoryCompletedEventHandler DeleteHistoryCompleted;
        
        /// <remarks/>
        public event DeleteAllHistoryCompletedEventHandler DeleteAllHistoryCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event TestNameCompletedEventHandler TestNameCompleted;
        
        /// <remarks/>
        public event TestCustomCompletedEventHandler TestCustomCompleted;
        
        /// <remarks/>
        public event TestErrorCompletedEventHandler TestErrorCompleted;
        
        /// <remarks/>
        public event TestExceptionCompletedEventHandler TestExceptionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/List", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode List(string name, string topic, string SortBy, bool SortAscending) {
            object[] results = this.Invoke("List", new object[] {
                        name,
                        topic,
                        SortBy,
                        SortAscending});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListAsync(string name, string topic, string SortBy, bool SortAscending) {
            this.ListAsync(name, topic, SortBy, SortAscending, null);
        }
        
        /// <remarks/>
        public void ListAsync(string name, string topic, string SortBy, bool SortAscending, object userState) {
            if ((this.ListOperationCompleted == null)) {
                this.ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOperationCompleted);
            }
            this.InvokeAsync("List", new object[] {
                        name,
                        topic,
                        SortBy,
                        SortAscending}, this.ListOperationCompleted, userState);
        }
        
        private void OnListOperationCompleted(object arg) {
            if ((this.ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCompleted(this, new ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Get", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Get(string name, string topic, string id) {
            object[] results = this.Invoke("Get", new object[] {
                        name,
                        topic,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAsync(string name, string topic, string id) {
            this.GetAsync(name, topic, id, null);
        }
        
        /// <remarks/>
        public void GetAsync(string name, string topic, string id, object userState) {
            if ((this.GetOperationCompleted == null)) {
                this.GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationCompleted);
            }
            this.InvokeAsync("Get", new object[] {
                        name,
                        topic,
                        id}, this.GetOperationCompleted, userState);
        }
        
        private void OnGetOperationCompleted(object arg) {
            if ((this.GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleted(this, new GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetBlog(string name, string topic, string id) {
            object[] results = this.Invoke("GetBlog", new object[] {
                        name,
                        topic,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlogAsync(string name, string topic, string id) {
            this.GetBlogAsync(name, topic, id, null);
        }
        
        /// <remarks/>
        public void GetBlogAsync(string name, string topic, string id, object userState) {
            if ((this.GetBlogOperationCompleted == null)) {
                this.GetBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlogOperationCompleted);
            }
            this.InvokeAsync("GetBlog", new object[] {
                        name,
                        topic,
                        id}, this.GetBlogOperationCompleted, userState);
        }
        
        private void OnGetBlogOperationCompleted(object arg) {
            if ((this.GetBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlogCompleted(this, new GetBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Add", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Add(string name, string topic, string author, string title, string html) {
            object[] results = this.Invoke("Add", new object[] {
                        name,
                        topic,
                        author,
                        title,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddAsync(string name, string topic, string author, string title, string html) {
            this.AddAsync(name, topic, author, title, html, null);
        }
        
        /// <remarks/>
        public void AddAsync(string name, string topic, string author, string title, string html, object userState) {
            if ((this.AddOperationCompleted == null)) {
                this.AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationCompleted);
            }
            this.InvokeAsync("Add", new object[] {
                        name,
                        topic,
                        author,
                        title,
                        html}, this.AddOperationCompleted, userState);
        }
        
        private void OnAddOperationCompleted(object arg) {
            if ((this.AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCompleted(this, new AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/AddNews", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddNews(string name, string topic, string author, string year, string month, string day, string title, string text, string html) {
            object[] results = this.Invoke("AddNews", new object[] {
                        name,
                        topic,
                        author,
                        year,
                        month,
                        day,
                        title,
                        text,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewsAsync(string name, string topic, string author, string year, string month, string day, string title, string text, string html) {
            this.AddNewsAsync(name, topic, author, year, month, day, title, text, html, null);
        }
        
        /// <remarks/>
        public void AddNewsAsync(string name, string topic, string author, string year, string month, string day, string title, string text, string html, object userState) {
            if ((this.AddNewsOperationCompleted == null)) {
                this.AddNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewsOperationCompleted);
            }
            this.InvokeAsync("AddNews", new object[] {
                        name,
                        topic,
                        author,
                        year,
                        month,
                        day,
                        title,
                        text,
                        html}, this.AddNewsOperationCompleted, userState);
        }
        
        private void OnAddNewsOperationCompleted(object arg) {
            if ((this.AddNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewsCompleted(this, new AddNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Edit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Edit(string name, string topic, string id, string title, string html) {
            object[] results = this.Invoke("Edit", new object[] {
                        name,
                        topic,
                        id,
                        title,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditAsync(string name, string topic, string id, string title, string html) {
            this.EditAsync(name, topic, id, title, html, null);
        }
        
        /// <remarks/>
        public void EditAsync(string name, string topic, string id, string title, string html, object userState) {
            if ((this.EditOperationCompleted == null)) {
                this.EditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditOperationCompleted);
            }
            this.InvokeAsync("Edit", new object[] {
                        name,
                        topic,
                        id,
                        title,
                        html}, this.EditOperationCompleted, userState);
        }
        
        private void OnEditOperationCompleted(object arg) {
            if ((this.EditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCompleted(this, new EditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditText", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditText(string name, string topic, string id, string title, string text, string html) {
            object[] results = this.Invoke("EditText", new object[] {
                        name,
                        topic,
                        id,
                        title,
                        text,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditTextAsync(string name, string topic, string id, string title, string text, string html) {
            this.EditTextAsync(name, topic, id, title, text, html, null);
        }
        
        /// <remarks/>
        public void EditTextAsync(string name, string topic, string id, string title, string text, string html, object userState) {
            if ((this.EditTextOperationCompleted == null)) {
                this.EditTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTextOperationCompleted);
            }
            this.InvokeAsync("EditText", new object[] {
                        name,
                        topic,
                        id,
                        title,
                        text,
                        html}, this.EditTextOperationCompleted, userState);
        }
        
        private void OnEditTextOperationCompleted(object arg) {
            if ((this.EditTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTextCompleted(this, new EditTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditNews", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditNews(string name, string topic, string id, string year, string month, string day, string title, string text, string html) {
            object[] results = this.Invoke("EditNews", new object[] {
                        name,
                        topic,
                        id,
                        year,
                        month,
                        day,
                        title,
                        text,
                        html});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditNewsAsync(string name, string topic, string id, string year, string month, string day, string title, string text, string html) {
            this.EditNewsAsync(name, topic, id, year, month, day, title, text, html, null);
        }
        
        /// <remarks/>
        public void EditNewsAsync(string name, string topic, string id, string year, string month, string day, string title, string text, string html, object userState) {
            if ((this.EditNewsOperationCompleted == null)) {
                this.EditNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditNewsOperationCompleted);
            }
            this.InvokeAsync("EditNews", new object[] {
                        name,
                        topic,
                        id,
                        year,
                        month,
                        day,
                        title,
                        text,
                        html}, this.EditNewsOperationCompleted, userState);
        }
        
        private void OnEditNewsOperationCompleted(object arg) {
            if ((this.EditNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditNewsCompleted(this, new EditNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditTitle", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditTitle(string name, string topic, string id, string title) {
            object[] results = this.Invoke("EditTitle", new object[] {
                        name,
                        topic,
                        id,
                        title});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditTitleAsync(string name, string topic, string id, string title) {
            this.EditTitleAsync(name, topic, id, title, null);
        }
        
        /// <remarks/>
        public void EditTitleAsync(string name, string topic, string id, string title, object userState) {
            if ((this.EditTitleOperationCompleted == null)) {
                this.EditTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTitleOperationCompleted);
            }
            this.InvokeAsync("EditTitle", new object[] {
                        name,
                        topic,
                        id,
                        title}, this.EditTitleOperationCompleted, userState);
        }
        
        private void OnEditTitleOperationCompleted(object arg) {
            if ((this.EditTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTitleCompleted(this, new EditTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditDateTitle", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditDateTitle(string name, string topic, string id, string year, string month, string day, string title) {
            object[] results = this.Invoke("EditDateTitle", new object[] {
                        name,
                        topic,
                        id,
                        year,
                        month,
                        day,
                        title});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditDateTitleAsync(string name, string topic, string id, string year, string month, string day, string title) {
            this.EditDateTitleAsync(name, topic, id, year, month, day, title, null);
        }
        
        /// <remarks/>
        public void EditDateTitleAsync(string name, string topic, string id, string year, string month, string day, string title, object userState) {
            if ((this.EditDateTitleOperationCompleted == null)) {
                this.EditDateTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDateTitleOperationCompleted);
            }
            this.InvokeAsync("EditDateTitle", new object[] {
                        name,
                        topic,
                        id,
                        year,
                        month,
                        day,
                        title}, this.EditDateTitleOperationCompleted, userState);
        }
        
        private void OnEditDateTitleOperationCompleted(object arg) {
            if ((this.EditDateTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDateTitleCompleted(this, new EditDateTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Delete", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Delete(string name, string topic, string id) {
            object[] results = this.Invoke("Delete", new object[] {
                        name,
                        topic,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string name, string topic, string id) {
            this.DeleteAsync(name, topic, id, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string name, string topic, string id, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        name,
                        topic,
                        id}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetComments", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetComments(string name, string topic, string id) {
            object[] results = this.Invoke("GetComments", new object[] {
                        name,
                        topic,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentsAsync(string name, string topic, string id) {
            this.GetCommentsAsync(name, topic, id, null);
        }
        
        /// <remarks/>
        public void GetCommentsAsync(string name, string topic, string id, object userState) {
            if ((this.GetCommentsOperationCompleted == null)) {
                this.GetCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentsOperationCompleted);
            }
            this.InvokeAsync("GetComments", new object[] {
                        name,
                        topic,
                        id}, this.GetCommentsOperationCompleted, userState);
        }
        
        private void OnGetCommentsOperationCompleted(object arg) {
            if ((this.GetCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentsCompleted(this, new GetCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetComment", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetComment(string name, string topic, string id, string commentid) {
            object[] results = this.Invoke("GetComment", new object[] {
                        name,
                        topic,
                        id,
                        commentid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentAsync(string name, string topic, string id, string commentid) {
            this.GetCommentAsync(name, topic, id, commentid, null);
        }
        
        /// <remarks/>
        public void GetCommentAsync(string name, string topic, string id, string commentid, object userState) {
            if ((this.GetCommentOperationCompleted == null)) {
                this.GetCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentOperationCompleted);
            }
            this.InvokeAsync("GetComment", new object[] {
                        name,
                        topic,
                        id,
                        commentid}, this.GetCommentOperationCompleted, userState);
        }
        
        private void OnGetCommentOperationCompleted(object arg) {
            if ((this.GetCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentCompleted(this, new GetCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/AddComment", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddComment(string name, string topic, string id, string username, string author, string title, string comment, bool approved) {
            object[] results = this.Invoke("AddComment", new object[] {
                        name,
                        topic,
                        id,
                        username,
                        author,
                        title,
                        comment,
                        approved});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddCommentAsync(string name, string topic, string id, string username, string author, string title, string comment, bool approved) {
            this.AddCommentAsync(name, topic, id, username, author, title, comment, approved, null);
        }
        
        /// <remarks/>
        public void AddCommentAsync(string name, string topic, string id, string username, string author, string title, string comment, bool approved, object userState) {
            if ((this.AddCommentOperationCompleted == null)) {
                this.AddCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentOperationCompleted);
            }
            this.InvokeAsync("AddComment", new object[] {
                        name,
                        topic,
                        id,
                        username,
                        author,
                        title,
                        comment,
                        approved}, this.AddCommentOperationCompleted, userState);
        }
        
        private void OnAddCommentOperationCompleted(object arg) {
            if ((this.AddCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommentCompleted(this, new AddCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditComment", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditComment(string name, string topic, string id, string commentid, string title, string comment, bool approved) {
            object[] results = this.Invoke("EditComment", new object[] {
                        name,
                        topic,
                        id,
                        commentid,
                        title,
                        comment,
                        approved});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditCommentAsync(string name, string topic, string id, string commentid, string title, string comment, bool approved) {
            this.EditCommentAsync(name, topic, id, commentid, title, comment, approved, null);
        }
        
        /// <remarks/>
        public void EditCommentAsync(string name, string topic, string id, string commentid, string title, string comment, bool approved, object userState) {
            if ((this.EditCommentOperationCompleted == null)) {
                this.EditCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCommentOperationCompleted);
            }
            this.InvokeAsync("EditComment", new object[] {
                        name,
                        topic,
                        id,
                        commentid,
                        title,
                        comment,
                        approved}, this.EditCommentOperationCompleted, userState);
        }
        
        private void OnEditCommentOperationCompleted(object arg) {
            if ((this.EditCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCommentCompleted(this, new EditCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/DeleteComment", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteComment(string name, string topic, string id, string commentid) {
            object[] results = this.Invoke("DeleteComment", new object[] {
                        name,
                        topic,
                        id,
                        commentid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCommentAsync(string name, string topic, string id, string commentid) {
            this.DeleteCommentAsync(name, topic, id, commentid, null);
        }
        
        /// <remarks/>
        public void DeleteCommentAsync(string name, string topic, string id, string commentid, object userState) {
            if ((this.DeleteCommentOperationCompleted == null)) {
                this.DeleteCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCommentOperationCompleted);
            }
            this.InvokeAsync("DeleteComment", new object[] {
                        name,
                        topic,
                        id,
                        commentid}, this.DeleteCommentOperationCompleted, userState);
        }
        
        private void OnDeleteCommentOperationCompleted(object arg) {
            if ((this.DeleteCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCommentCompleted(this, new DeleteCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListHistory", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListHistory(string name, string topic, string id) {
            object[] results = this.Invoke("ListHistory", new object[] {
                        name,
                        topic,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListHistoryAsync(string name, string topic, string id) {
            this.ListHistoryAsync(name, topic, id, null);
        }
        
        /// <remarks/>
        public void ListHistoryAsync(string name, string topic, string id, object userState) {
            if ((this.ListHistoryOperationCompleted == null)) {
                this.ListHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListHistoryOperationCompleted);
            }
            this.InvokeAsync("ListHistory", new object[] {
                        name,
                        topic,
                        id}, this.ListHistoryOperationCompleted, userState);
        }
        
        private void OnListHistoryOperationCompleted(object arg) {
            if ((this.ListHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListHistoryCompleted(this, new ListHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/RestoreHistory", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RestoreHistory(string name, string topic, string id, string historyid) {
            object[] results = this.Invoke("RestoreHistory", new object[] {
                        name,
                        topic,
                        id,
                        historyid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreHistoryAsync(string name, string topic, string id, string historyid) {
            this.RestoreHistoryAsync(name, topic, id, historyid, null);
        }
        
        /// <remarks/>
        public void RestoreHistoryAsync(string name, string topic, string id, string historyid, object userState) {
            if ((this.RestoreHistoryOperationCompleted == null)) {
                this.RestoreHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreHistoryOperationCompleted);
            }
            this.InvokeAsync("RestoreHistory", new object[] {
                        name,
                        topic,
                        id,
                        historyid}, this.RestoreHistoryOperationCompleted, userState);
        }
        
        private void OnRestoreHistoryOperationCompleted(object arg) {
            if ((this.RestoreHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreHistoryCompleted(this, new RestoreHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetHistory", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetHistory(string name, string topic, string id, string historyid) {
            object[] results = this.Invoke("GetHistory", new object[] {
                        name,
                        topic,
                        id,
                        historyid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryAsync(string name, string topic, string id, string historyid) {
            this.GetHistoryAsync(name, topic, id, historyid, null);
        }
        
        /// <remarks/>
        public void GetHistoryAsync(string name, string topic, string id, string historyid, object userState) {
            if ((this.GetHistoryOperationCompleted == null)) {
                this.GetHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryOperationCompleted);
            }
            this.InvokeAsync("GetHistory", new object[] {
                        name,
                        topic,
                        id,
                        historyid}, this.GetHistoryOperationCompleted, userState);
        }
        
        private void OnGetHistoryOperationCompleted(object arg) {
            if ((this.GetHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryCompleted(this, new GetHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/DeleteHistory", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteHistory(string name, string topic, string id, string historyid) {
            object[] results = this.Invoke("DeleteHistory", new object[] {
                        name,
                        topic,
                        id,
                        historyid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteHistoryAsync(string name, string topic, string id, string historyid) {
            this.DeleteHistoryAsync(name, topic, id, historyid, null);
        }
        
        /// <remarks/>
        public void DeleteHistoryAsync(string name, string topic, string id, string historyid, object userState) {
            if ((this.DeleteHistoryOperationCompleted == null)) {
                this.DeleteHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteHistoryOperationCompleted);
            }
            this.InvokeAsync("DeleteHistory", new object[] {
                        name,
                        topic,
                        id,
                        historyid}, this.DeleteHistoryOperationCompleted, userState);
        }
        
        private void OnDeleteHistoryOperationCompleted(object arg) {
            if ((this.DeleteHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteHistoryCompleted(this, new DeleteHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/DeleteAllHistory", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteAllHistory(string name, string topic, string id) {
            object[] results = this.Invoke("DeleteAllHistory", new object[] {
                        name,
                        topic,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllHistoryAsync(string name, string topic, string id) {
            this.DeleteAllHistoryAsync(name, topic, id, null);
        }
        
        /// <remarks/>
        public void DeleteAllHistoryAsync(string name, string topic, string id, object userState) {
            if ((this.DeleteAllHistoryOperationCompleted == null)) {
                this.DeleteAllHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllHistoryOperationCompleted);
            }
            this.InvokeAsync("DeleteAllHistory", new object[] {
                        name,
                        topic,
                        id}, this.DeleteAllHistoryOperationCompleted, userState);
        }
        
        private void OnDeleteAllHistoryOperationCompleted(object arg) {
            if ((this.DeleteAllHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllHistoryCompleted(this, new DeleteAllHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Test", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestName", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestName() {
            object[] results = this.Invoke("TestName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestNameAsync() {
            this.TestNameAsync(null);
        }
        
        /// <remarks/>
        public void TestNameAsync(object userState) {
            if ((this.TestNameOperationCompleted == null)) {
                this.TestNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestNameOperationCompleted);
            }
            this.InvokeAsync("TestName", new object[0], this.TestNameOperationCompleted, userState);
        }
        
        private void OnTestNameOperationCompleted(object arg) {
            if ((this.TestNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestNameCompleted(this, new TestNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestCustom", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestCustom(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            object[] results = this.Invoke("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            this.TestCustomAsync(Format, RootName, ResultName, CodeName, DescriptionName, null);
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName, object userState) {
            if ((this.TestCustomOperationCompleted == null)) {
                this.TestCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCustomOperationCompleted);
            }
            this.InvokeAsync("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName}, this.TestCustomOperationCompleted, userState);
        }
        
        private void OnTestCustomOperationCompleted(object arg) {
            if ((this.TestCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCustomCompleted(this, new TestCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestError", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestError() {
            object[] results = this.Invoke("TestError", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestErrorAsync() {
            this.TestErrorAsync(null);
        }
        
        /// <remarks/>
        public void TestErrorAsync(object userState) {
            if ((this.TestErrorOperationCompleted == null)) {
                this.TestErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestErrorOperationCompleted);
            }
            this.InvokeAsync("TestError", new object[0], this.TestErrorOperationCompleted, userState);
        }
        
        private void OnTestErrorOperationCompleted(object arg) {
            if ((this.TestErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestErrorCompleted(this, new TestErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestException", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestException() {
            object[] results = this.Invoke("TestException", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestExceptionAsync() {
            this.TestExceptionAsync(null);
        }
        
        /// <remarks/>
        public void TestExceptionAsync(object userState) {
            if ((this.TestExceptionOperationCompleted == null)) {
                this.TestExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestExceptionOperationCompleted);
            }
            this.InvokeAsync("TestException", new object[0], this.TestExceptionOperationCompleted, userState);
        }
        
        private void OnTestExceptionOperationCompleted(object arg) {
            if ((this.TestExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestExceptionCompleted(this, new TestExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListCompletedEventHandler(object sender, ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCompletedEventHandler(object sender, GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetBlogCompletedEventHandler(object sender, GetBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddCompletedEventHandler(object sender, AddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddNewsCompletedEventHandler(object sender, AddNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditCompletedEventHandler(object sender, EditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditTextCompletedEventHandler(object sender, EditTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditNewsCompletedEventHandler(object sender, EditNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditTitleCompletedEventHandler(object sender, EditTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditDateTitleCompletedEventHandler(object sender, EditDateTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDateTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDateTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCommentsCompletedEventHandler(object sender, GetCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCommentCompletedEventHandler(object sender, GetCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddCommentCompletedEventHandler(object sender, AddCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditCommentCompletedEventHandler(object sender, EditCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteCommentCompletedEventHandler(object sender, DeleteCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListHistoryCompletedEventHandler(object sender, ListHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RestoreHistoryCompletedEventHandler(object sender, RestoreHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetHistoryCompletedEventHandler(object sender, GetHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteHistoryCompletedEventHandler(object sender, DeleteHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteAllHistoryCompletedEventHandler(object sender, DeleteAllHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestNameCompletedEventHandler(object sender, TestNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestCustomCompletedEventHandler(object sender, TestCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestErrorCompletedEventHandler(object sender, TestErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestExceptionCompletedEventHandler(object sender, TestExceptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591