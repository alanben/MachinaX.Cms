//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18051.
// 
#pragma warning disable 1591

namespace clickclickboom.machinaX.blogX.cmsX.PassportAdminWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PassportX Admin ServicesSoap", Namespace="http://www.clickclickBOOM.com/MachinaX/PassportX")]
    public partial class PassportXAdminServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonStatusListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUserListAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindUsersAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersSortOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfileListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProfileServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProfileServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductServiceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupMemberListOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUserServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecruitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecruitTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRecruitOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRecruitOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRecruitOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestExceptionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PassportXAdminServices() {
            this.Url = global::clickclickboom.machinaX.blogX.cmsX.Properties.Settings.Default.CmsX_2_6_0_PassportAdminWS_PassportX_x0020_Admin_x0020_Services;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event RegisterUserCompletedEventHandler RegisterUserCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event UpdateUserPasswordCompletedEventHandler UpdateUserPasswordCompleted;
        
        /// <remarks/>
        public event UpdateUserDetailsCompletedEventHandler UpdateUserDetailsCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event RemoveUserCompletedEventHandler RemoveUserCompleted;
        
        /// <remarks/>
        public event AddUserProfileCompletedEventHandler AddUserProfileCompleted;
        
        /// <remarks/>
        public event RemoveUserProfileCompletedEventHandler RemoveUserProfileCompleted;
        
        /// <remarks/>
        public event GetPersonStatusListCompletedEventHandler GetPersonStatusListCompleted;
        
        /// <remarks/>
        public event GetUserProfileCompletedEventHandler GetUserProfileCompleted;
        
        /// <remarks/>
        public event GetUserProfilesCompletedEventHandler GetUserProfilesCompleted;
        
        /// <remarks/>
        public event SearchUserListCompletedEventHandler SearchUserListCompleted;
        
        /// <remarks/>
        public event FindUsersCompletedEventHandler FindUsersCompleted;
        
        /// <remarks/>
        public event SearchUserListAllCompletedEventHandler SearchUserListAllCompleted;
        
        /// <remarks/>
        public event FindUsersAllCompletedEventHandler FindUsersAllCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event GetUsersSortCompletedEventHandler GetUsersSortCompleted;
        
        /// <remarks/>
        public event GetUserRightsCompletedEventHandler GetUserRightsCompleted;
        
        /// <remarks/>
        public event SendPasswordCompletedEventHandler SendPasswordCompleted;
        
        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;
        
        /// <remarks/>
        public event SaveProfileCompletedEventHandler SaveProfileCompleted;
        
        /// <remarks/>
        public event GetProfileCompletedEventHandler GetProfileCompleted;
        
        /// <remarks/>
        public event GetProfileListCompletedEventHandler GetProfileListCompleted;
        
        /// <remarks/>
        public event RemoveProfileCompletedEventHandler RemoveProfileCompleted;
        
        /// <remarks/>
        public event SaveProfileServiceCompletedEventHandler SaveProfileServiceCompleted;
        
        /// <remarks/>
        public event DeleteProfileServiceCompletedEventHandler DeleteProfileServiceCompleted;
        
        /// <remarks/>
        public event GetProductServiceListCompletedEventHandler GetProductServiceListCompleted;
        
        /// <remarks/>
        public event SaveGroupCompletedEventHandler SaveGroupCompleted;
        
        /// <remarks/>
        public event GetGroupCompletedEventHandler GetGroupCompleted;
        
        /// <remarks/>
        public event GetGroupListCompletedEventHandler GetGroupListCompleted;
        
        /// <remarks/>
        public event GetGroupMemberListCompletedEventHandler GetGroupMemberListCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event ValidateUserCompletedEventHandler ValidateUserCompleted;
        
        /// <remarks/>
        public event ValidateUserServiceCompletedEventHandler ValidateUserServiceCompleted;
        
        /// <remarks/>
        public event ValidateCompletedEventHandler ValidateCompleted;
        
        /// <remarks/>
        public event ValidateServiceCompletedEventHandler ValidateServiceCompleted;
        
        /// <remarks/>
        public event GetRecruitCompletedEventHandler GetRecruitCompleted;
        
        /// <remarks/>
        public event GetRecruitTokenCompletedEventHandler GetRecruitTokenCompleted;
        
        /// <remarks/>
        public event AddRecruitCompletedEventHandler AddRecruitCompleted;
        
        /// <remarks/>
        public event UpdateRecruitCompletedEventHandler UpdateRecruitCompleted;
        
        /// <remarks/>
        public event DeleteRecruitCompletedEventHandler DeleteRecruitCompleted;
        
        /// <remarks/>
        public event TestConnectionCompletedEventHandler TestConnectionCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event TestNameCompletedEventHandler TestNameCompleted;
        
        /// <remarks/>
        public event TestCustomCompletedEventHandler TestCustomCompleted;
        
        /// <remarks/>
        public event TestErrorCompletedEventHandler TestErrorCompleted;
        
        /// <remarks/>
        public event TestExceptionCompletedEventHandler TestExceptionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/Login", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Login(string UserName, string Password) {
            object[] results = this.Invoke("Login", new object[] {
                        UserName,
                        Password});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string UserName, string Password) {
            this.LoginAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string UserName, string Password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        UserName,
                        Password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/RegisterUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RegisterUser(string Token, string UserName, string Password, string FirstName, string Surname, string EMail, string TelNo, string CellNo) {
            object[] results = this.Invoke("RegisterUser", new object[] {
                        Token,
                        UserName,
                        Password,
                        FirstName,
                        Surname,
                        EMail,
                        TelNo,
                        CellNo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string Token, string UserName, string Password, string FirstName, string Surname, string EMail, string TelNo, string CellNo) {
            this.RegisterUserAsync(Token, UserName, Password, FirstName, Surname, EMail, TelNo, CellNo, null);
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string Token, string UserName, string Password, string FirstName, string Surname, string EMail, string TelNo, string CellNo, object userState) {
            if ((this.RegisterUserOperationCompleted == null)) {
                this.RegisterUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterUserOperationCompleted);
            }
            this.InvokeAsync("RegisterUser", new object[] {
                        Token,
                        UserName,
                        Password,
                        FirstName,
                        Surname,
                        EMail,
                        TelNo,
                        CellNo}, this.RegisterUserOperationCompleted, userState);
        }
        
        private void OnRegisterUserOperationCompleted(object arg) {
            if ((this.RegisterUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterUserCompleted(this, new RegisterUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUser(string Token, int UserID) {
            object[] results = this.Invoke("GetUser", new object[] {
                        Token,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(string Token, int UserID) {
            this.GetUserAsync(Token, UserID, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(string Token, int UserID, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        Token,
                        UserID}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/UpdateUserPassword", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateUserPassword(int UserID, string Password) {
            object[] results = this.Invoke("UpdateUserPassword", new object[] {
                        UserID,
                        Password});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAsync(int UserID, string Password) {
            this.UpdateUserPasswordAsync(UserID, Password, null);
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAsync(int UserID, string Password, object userState) {
            if ((this.UpdateUserPasswordOperationCompleted == null)) {
                this.UpdateUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateUserPassword", new object[] {
                        UserID,
                        Password}, this.UpdateUserPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateUserPasswordOperationCompleted(object arg) {
            if ((this.UpdateUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserPasswordCompleted(this, new UpdateUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/UpdateUserDetails", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateUserDetails(int UserID, string UserName, string FirstName, string Surname, string EMail, string TelNo, string CellNo, int PersonStatusID, string Safeguard) {
            object[] results = this.Invoke("UpdateUserDetails", new object[] {
                        UserID,
                        UserName,
                        FirstName,
                        Surname,
                        EMail,
                        TelNo,
                        CellNo,
                        PersonStatusID,
                        Safeguard});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserDetailsAsync(int UserID, string UserName, string FirstName, string Surname, string EMail, string TelNo, string CellNo, int PersonStatusID, string Safeguard) {
            this.UpdateUserDetailsAsync(UserID, UserName, FirstName, Surname, EMail, TelNo, CellNo, PersonStatusID, Safeguard, null);
        }
        
        /// <remarks/>
        public void UpdateUserDetailsAsync(int UserID, string UserName, string FirstName, string Surname, string EMail, string TelNo, string CellNo, int PersonStatusID, string Safeguard, object userState) {
            if ((this.UpdateUserDetailsOperationCompleted == null)) {
                this.UpdateUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateUserDetails", new object[] {
                        UserID,
                        UserName,
                        FirstName,
                        Surname,
                        EMail,
                        TelNo,
                        CellNo,
                        PersonStatusID,
                        Safeguard}, this.UpdateUserDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateUserDetailsOperationCompleted(object arg) {
            if ((this.UpdateUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserDetailsCompleted(this, new UpdateUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/UpdateUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateUser(string Token, int UserID, string UserName, string FirstName, string Surname, string EMail, string TelNo, string CellNo, int PersonStatusID, string Safeguard) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        Token,
                        UserID,
                        UserName,
                        FirstName,
                        Surname,
                        EMail,
                        TelNo,
                        CellNo,
                        PersonStatusID,
                        Safeguard});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string Token, int UserID, string UserName, string FirstName, string Surname, string EMail, string TelNo, string CellNo, int PersonStatusID, string Safeguard) {
            this.UpdateUserAsync(Token, UserID, UserName, FirstName, Surname, EMail, TelNo, CellNo, PersonStatusID, Safeguard, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string Token, int UserID, string UserName, string FirstName, string Surname, string EMail, string TelNo, string CellNo, int PersonStatusID, string Safeguard, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        Token,
                        UserID,
                        UserName,
                        FirstName,
                        Surname,
                        EMail,
                        TelNo,
                        CellNo,
                        PersonStatusID,
                        Safeguard}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/RemoveUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RemoveUser(string Token, int UserID) {
            object[] results = this.Invoke("RemoveUser", new object[] {
                        Token,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserAsync(string Token, int UserID) {
            this.RemoveUserAsync(Token, UserID, null);
        }
        
        /// <remarks/>
        public void RemoveUserAsync(string Token, int UserID, object userState) {
            if ((this.RemoveUserOperationCompleted == null)) {
                this.RemoveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserOperationCompleted);
            }
            this.InvokeAsync("RemoveUser", new object[] {
                        Token,
                        UserID}, this.RemoveUserOperationCompleted, userState);
        }
        
        private void OnRemoveUserOperationCompleted(object arg) {
            if ((this.RemoveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserCompleted(this, new RemoveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/AddUserProfile", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddUserProfile(string Token, int UserID, int GroupID, string WantItems) {
            object[] results = this.Invoke("AddUserProfile", new object[] {
                        Token,
                        UserID,
                        GroupID,
                        WantItems});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserProfileAsync(string Token, int UserID, int GroupID, string WantItems) {
            this.AddUserProfileAsync(Token, UserID, GroupID, WantItems, null);
        }
        
        /// <remarks/>
        public void AddUserProfileAsync(string Token, int UserID, int GroupID, string WantItems, object userState) {
            if ((this.AddUserProfileOperationCompleted == null)) {
                this.AddUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserProfileOperationCompleted);
            }
            this.InvokeAsync("AddUserProfile", new object[] {
                        Token,
                        UserID,
                        GroupID,
                        WantItems}, this.AddUserProfileOperationCompleted, userState);
        }
        
        private void OnAddUserProfileOperationCompleted(object arg) {
            if ((this.AddUserProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserProfileCompleted(this, new AddUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/RemoveUserProfile", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RemoveUserProfile(string Token, int UserID, int GroupID, string WantItems) {
            object[] results = this.Invoke("RemoveUserProfile", new object[] {
                        Token,
                        UserID,
                        GroupID,
                        WantItems});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserProfileAsync(string Token, int UserID, int GroupID, string WantItems) {
            this.RemoveUserProfileAsync(Token, UserID, GroupID, WantItems, null);
        }
        
        /// <remarks/>
        public void RemoveUserProfileAsync(string Token, int UserID, int GroupID, string WantItems, object userState) {
            if ((this.RemoveUserProfileOperationCompleted == null)) {
                this.RemoveUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserProfileOperationCompleted);
            }
            this.InvokeAsync("RemoveUserProfile", new object[] {
                        Token,
                        UserID,
                        GroupID,
                        WantItems}, this.RemoveUserProfileOperationCompleted, userState);
        }
        
        private void OnRemoveUserProfileOperationCompleted(object arg) {
            if ((this.RemoveUserProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserProfileCompleted(this, new RemoveUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetPersonStatusList", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPersonStatusList() {
            object[] results = this.Invoke("GetPersonStatusList", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonStatusListAsync() {
            this.GetPersonStatusListAsync(null);
        }
        
        /// <remarks/>
        public void GetPersonStatusListAsync(object userState) {
            if ((this.GetPersonStatusListOperationCompleted == null)) {
                this.GetPersonStatusListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonStatusListOperationCompleted);
            }
            this.InvokeAsync("GetPersonStatusList", new object[0], this.GetPersonStatusListOperationCompleted, userState);
        }
        
        private void OnGetPersonStatusListOperationCompleted(object arg) {
            if ((this.GetPersonStatusListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonStatusListCompleted(this, new GetPersonStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetUserProfile", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUserProfile(int UserID) {
            object[] results = this.Invoke("GetUserProfile", new object[] {
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserProfileAsync(int UserID) {
            this.GetUserProfileAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetUserProfileAsync(int UserID, object userState) {
            if ((this.GetUserProfileOperationCompleted == null)) {
                this.GetUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserProfileOperationCompleted);
            }
            this.InvokeAsync("GetUserProfile", new object[] {
                        UserID}, this.GetUserProfileOperationCompleted, userState);
        }
        
        private void OnGetUserProfileOperationCompleted(object arg) {
            if ((this.GetUserProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserProfileCompleted(this, new GetUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetUserProfiles", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUserProfiles(string Token, int UserID, string WantItems) {
            object[] results = this.Invoke("GetUserProfiles", new object[] {
                        Token,
                        UserID,
                        WantItems});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserProfilesAsync(string Token, int UserID, string WantItems) {
            this.GetUserProfilesAsync(Token, UserID, WantItems, null);
        }
        
        /// <remarks/>
        public void GetUserProfilesAsync(string Token, int UserID, string WantItems, object userState) {
            if ((this.GetUserProfilesOperationCompleted == null)) {
                this.GetUserProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserProfilesOperationCompleted);
            }
            this.InvokeAsync("GetUserProfiles", new object[] {
                        Token,
                        UserID,
                        WantItems}, this.GetUserProfilesOperationCompleted, userState);
        }
        
        private void OnGetUserProfilesOperationCompleted(object arg) {
            if ((this.GetUserProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserProfilesCompleted(this, new GetUserProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/SearchUserList", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SearchUserList(string Token, int GroupID, string SearchName, string SearchNo) {
            object[] results = this.Invoke("SearchUserList", new object[] {
                        Token,
                        GroupID,
                        SearchName,
                        SearchNo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SearchUserListAsync(string Token, int GroupID, string SearchName, string SearchNo) {
            this.SearchUserListAsync(Token, GroupID, SearchName, SearchNo, null);
        }
        
        /// <remarks/>
        public void SearchUserListAsync(string Token, int GroupID, string SearchName, string SearchNo, object userState) {
            if ((this.SearchUserListOperationCompleted == null)) {
                this.SearchUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUserListOperationCompleted);
            }
            this.InvokeAsync("SearchUserList", new object[] {
                        Token,
                        GroupID,
                        SearchName,
                        SearchNo}, this.SearchUserListOperationCompleted, userState);
        }
        
        private void OnSearchUserListOperationCompleted(object arg) {
            if ((this.SearchUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUserListCompleted(this, new SearchUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/FindUsers", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode FindUsers(string Token, int GroupID, string SearchName, string SearchNo) {
            object[] results = this.Invoke("FindUsers", new object[] {
                        Token,
                        GroupID,
                        SearchName,
                        SearchNo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void FindUsersAsync(string Token, int GroupID, string SearchName, string SearchNo) {
            this.FindUsersAsync(Token, GroupID, SearchName, SearchNo, null);
        }
        
        /// <remarks/>
        public void FindUsersAsync(string Token, int GroupID, string SearchName, string SearchNo, object userState) {
            if ((this.FindUsersOperationCompleted == null)) {
                this.FindUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindUsersOperationCompleted);
            }
            this.InvokeAsync("FindUsers", new object[] {
                        Token,
                        GroupID,
                        SearchName,
                        SearchNo}, this.FindUsersOperationCompleted, userState);
        }
        
        private void OnFindUsersOperationCompleted(object arg) {
            if ((this.FindUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindUsersCompleted(this, new FindUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/SearchUserListAll", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SearchUserListAll(string Token, int GroupID, string SearchUserID, string SearchUserName, string SearchFirstName, string SearchSurname, string SearchCellNo, string SearchTelNo, string SearchEmail) {
            object[] results = this.Invoke("SearchUserListAll", new object[] {
                        Token,
                        GroupID,
                        SearchUserID,
                        SearchUserName,
                        SearchFirstName,
                        SearchSurname,
                        SearchCellNo,
                        SearchTelNo,
                        SearchEmail});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SearchUserListAllAsync(string Token, int GroupID, string SearchUserID, string SearchUserName, string SearchFirstName, string SearchSurname, string SearchCellNo, string SearchTelNo, string SearchEmail) {
            this.SearchUserListAllAsync(Token, GroupID, SearchUserID, SearchUserName, SearchFirstName, SearchSurname, SearchCellNo, SearchTelNo, SearchEmail, null);
        }
        
        /// <remarks/>
        public void SearchUserListAllAsync(string Token, int GroupID, string SearchUserID, string SearchUserName, string SearchFirstName, string SearchSurname, string SearchCellNo, string SearchTelNo, string SearchEmail, object userState) {
            if ((this.SearchUserListAllOperationCompleted == null)) {
                this.SearchUserListAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUserListAllOperationCompleted);
            }
            this.InvokeAsync("SearchUserListAll", new object[] {
                        Token,
                        GroupID,
                        SearchUserID,
                        SearchUserName,
                        SearchFirstName,
                        SearchSurname,
                        SearchCellNo,
                        SearchTelNo,
                        SearchEmail}, this.SearchUserListAllOperationCompleted, userState);
        }
        
        private void OnSearchUserListAllOperationCompleted(object arg) {
            if ((this.SearchUserListAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUserListAllCompleted(this, new SearchUserListAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/FindUsersAll", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode FindUsersAll(string Token, int GroupID, string SearchUserID, string SearchUserName, string SearchFirstName, string SearchSurname, string SearchCellNo, string SearchTelNo, string SearchEmail) {
            object[] results = this.Invoke("FindUsersAll", new object[] {
                        Token,
                        GroupID,
                        SearchUserID,
                        SearchUserName,
                        SearchFirstName,
                        SearchSurname,
                        SearchCellNo,
                        SearchTelNo,
                        SearchEmail});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void FindUsersAllAsync(string Token, int GroupID, string SearchUserID, string SearchUserName, string SearchFirstName, string SearchSurname, string SearchCellNo, string SearchTelNo, string SearchEmail) {
            this.FindUsersAllAsync(Token, GroupID, SearchUserID, SearchUserName, SearchFirstName, SearchSurname, SearchCellNo, SearchTelNo, SearchEmail, null);
        }
        
        /// <remarks/>
        public void FindUsersAllAsync(string Token, int GroupID, string SearchUserID, string SearchUserName, string SearchFirstName, string SearchSurname, string SearchCellNo, string SearchTelNo, string SearchEmail, object userState) {
            if ((this.FindUsersAllOperationCompleted == null)) {
                this.FindUsersAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindUsersAllOperationCompleted);
            }
            this.InvokeAsync("FindUsersAll", new object[] {
                        Token,
                        GroupID,
                        SearchUserID,
                        SearchUserName,
                        SearchFirstName,
                        SearchSurname,
                        SearchCellNo,
                        SearchTelNo,
                        SearchEmail}, this.FindUsersAllOperationCompleted, userState);
        }
        
        private void OnFindUsersAllOperationCompleted(object arg) {
            if ((this.FindUsersAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindUsersAllCompleted(this, new FindUsersAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetUsers", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUsers(string Token, int GroupID, int StartRow, int PageRows, string SortCol) {
            object[] results = this.Invoke("GetUsers", new object[] {
                        Token,
                        GroupID,
                        StartRow,
                        PageRows,
                        SortCol});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync(string Token, int GroupID, int StartRow, int PageRows, string SortCol) {
            this.GetUsersAsync(Token, GroupID, StartRow, PageRows, SortCol, null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(string Token, int GroupID, int StartRow, int PageRows, string SortCol, object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[] {
                        Token,
                        GroupID,
                        StartRow,
                        PageRows,
                        SortCol}, this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetUsersSort", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUsersSort(string Token, int GroupID, int PageNumber, int PageRows, string SortCol) {
            object[] results = this.Invoke("GetUsersSort", new object[] {
                        Token,
                        GroupID,
                        PageNumber,
                        PageRows,
                        SortCol});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersSortAsync(string Token, int GroupID, int PageNumber, int PageRows, string SortCol) {
            this.GetUsersSortAsync(Token, GroupID, PageNumber, PageRows, SortCol, null);
        }
        
        /// <remarks/>
        public void GetUsersSortAsync(string Token, int GroupID, int PageNumber, int PageRows, string SortCol, object userState) {
            if ((this.GetUsersSortOperationCompleted == null)) {
                this.GetUsersSortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersSortOperationCompleted);
            }
            this.InvokeAsync("GetUsersSort", new object[] {
                        Token,
                        GroupID,
                        PageNumber,
                        PageRows,
                        SortCol}, this.GetUsersSortOperationCompleted, userState);
        }
        
        private void OnGetUsersSortOperationCompleted(object arg) {
            if ((this.GetUsersSortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersSortCompleted(this, new GetUsersSortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetUserRights", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUserRights(string Token, int UserID, string WantItems) {
            object[] results = this.Invoke("GetUserRights", new object[] {
                        Token,
                        UserID,
                        WantItems});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRightsAsync(string Token, int UserID, string WantItems) {
            this.GetUserRightsAsync(Token, UserID, WantItems, null);
        }
        
        /// <remarks/>
        public void GetUserRightsAsync(string Token, int UserID, string WantItems, object userState) {
            if ((this.GetUserRightsOperationCompleted == null)) {
                this.GetUserRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRightsOperationCompleted);
            }
            this.InvokeAsync("GetUserRights", new object[] {
                        Token,
                        UserID,
                        WantItems}, this.GetUserRightsOperationCompleted, userState);
        }
        
        private void OnGetUserRightsOperationCompleted(object arg) {
            if ((this.GetUserRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRightsCompleted(this, new GetUserRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/SendPassword", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SendPassword(string Token, int UserID) {
            object[] results = this.Invoke("SendPassword", new object[] {
                        Token,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SendPasswordAsync(string Token, int UserID) {
            this.SendPasswordAsync(Token, UserID, null);
        }
        
        /// <remarks/>
        public void SendPasswordAsync(string Token, int UserID, object userState) {
            if ((this.SendPasswordOperationCompleted == null)) {
                this.SendPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPasswordOperationCompleted);
            }
            this.InvokeAsync("SendPassword", new object[] {
                        Token,
                        UserID}, this.SendPasswordOperationCompleted, userState);
        }
        
        private void OnSendPasswordOperationCompleted(object arg) {
            if ((this.SendPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPasswordCompleted(this, new SendPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/SendMessage", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SendMessage(string Token, int UserID, string Message) {
            object[] results = this.Invoke("SendMessage", new object[] {
                        Token,
                        UserID,
                        Message});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SendMessageAsync(string Token, int UserID, string Message) {
            this.SendMessageAsync(Token, UserID, Message, null);
        }
        
        /// <remarks/>
        public void SendMessageAsync(string Token, int UserID, string Message, object userState) {
            if ((this.SendMessageOperationCompleted == null)) {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        Token,
                        UserID,
                        Message}, this.SendMessageOperationCompleted, userState);
        }
        
        private void OnSendMessageOperationCompleted(object arg) {
            if ((this.SendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new SendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/SaveProfile", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SaveProfile(string Token, int GroupID, string Description, int GroupStatusID) {
            object[] results = this.Invoke("SaveProfile", new object[] {
                        Token,
                        GroupID,
                        Description,
                        GroupStatusID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProfileAsync(string Token, int GroupID, string Description, int GroupStatusID) {
            this.SaveProfileAsync(Token, GroupID, Description, GroupStatusID, null);
        }
        
        /// <remarks/>
        public void SaveProfileAsync(string Token, int GroupID, string Description, int GroupStatusID, object userState) {
            if ((this.SaveProfileOperationCompleted == null)) {
                this.SaveProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProfileOperationCompleted);
            }
            this.InvokeAsync("SaveProfile", new object[] {
                        Token,
                        GroupID,
                        Description,
                        GroupStatusID}, this.SaveProfileOperationCompleted, userState);
        }
        
        private void OnSaveProfileOperationCompleted(object arg) {
            if ((this.SaveProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProfileCompleted(this, new SaveProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetProfile", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetProfile(string Token, int GroupID) {
            object[] results = this.Invoke("GetProfile", new object[] {
                        Token,
                        GroupID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfileAsync(string Token, int GroupID) {
            this.GetProfileAsync(Token, GroupID, null);
        }
        
        /// <remarks/>
        public void GetProfileAsync(string Token, int GroupID, object userState) {
            if ((this.GetProfileOperationCompleted == null)) {
                this.GetProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfileOperationCompleted);
            }
            this.InvokeAsync("GetProfile", new object[] {
                        Token,
                        GroupID}, this.GetProfileOperationCompleted, userState);
        }
        
        private void OnGetProfileOperationCompleted(object arg) {
            if ((this.GetProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfileCompleted(this, new GetProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetProfileList", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetProfileList() {
            object[] results = this.Invoke("GetProfileList", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfileListAsync() {
            this.GetProfileListAsync(null);
        }
        
        /// <remarks/>
        public void GetProfileListAsync(object userState) {
            if ((this.GetProfileListOperationCompleted == null)) {
                this.GetProfileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfileListOperationCompleted);
            }
            this.InvokeAsync("GetProfileList", new object[0], this.GetProfileListOperationCompleted, userState);
        }
        
        private void OnGetProfileListOperationCompleted(object arg) {
            if ((this.GetProfileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfileListCompleted(this, new GetProfileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/RemoveProfile", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RemoveProfile(string Token, int GroupID) {
            object[] results = this.Invoke("RemoveProfile", new object[] {
                        Token,
                        GroupID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveProfileAsync(string Token, int GroupID) {
            this.RemoveProfileAsync(Token, GroupID, null);
        }
        
        /// <remarks/>
        public void RemoveProfileAsync(string Token, int GroupID, object userState) {
            if ((this.RemoveProfileOperationCompleted == null)) {
                this.RemoveProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveProfileOperationCompleted);
            }
            this.InvokeAsync("RemoveProfile", new object[] {
                        Token,
                        GroupID}, this.RemoveProfileOperationCompleted, userState);
        }
        
        private void OnRemoveProfileOperationCompleted(object arg) {
            if ((this.RemoveProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveProfileCompleted(this, new RemoveProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/SaveProfileService", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SaveProfileService(string Token, int GroupID, int ServiceID, int SecurityLevelID) {
            object[] results = this.Invoke("SaveProfileService", new object[] {
                        Token,
                        GroupID,
                        ServiceID,
                        SecurityLevelID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProfileServiceAsync(string Token, int GroupID, int ServiceID, int SecurityLevelID) {
            this.SaveProfileServiceAsync(Token, GroupID, ServiceID, SecurityLevelID, null);
        }
        
        /// <remarks/>
        public void SaveProfileServiceAsync(string Token, int GroupID, int ServiceID, int SecurityLevelID, object userState) {
            if ((this.SaveProfileServiceOperationCompleted == null)) {
                this.SaveProfileServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProfileServiceOperationCompleted);
            }
            this.InvokeAsync("SaveProfileService", new object[] {
                        Token,
                        GroupID,
                        ServiceID,
                        SecurityLevelID}, this.SaveProfileServiceOperationCompleted, userState);
        }
        
        private void OnSaveProfileServiceOperationCompleted(object arg) {
            if ((this.SaveProfileServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProfileServiceCompleted(this, new SaveProfileServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/DeleteProfileService", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteProfileService(string Token, int GroupID, int ServiceID, int SecurityLevelID) {
            object[] results = this.Invoke("DeleteProfileService", new object[] {
                        Token,
                        GroupID,
                        ServiceID,
                        SecurityLevelID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProfileServiceAsync(string Token, int GroupID, int ServiceID, int SecurityLevelID) {
            this.DeleteProfileServiceAsync(Token, GroupID, ServiceID, SecurityLevelID, null);
        }
        
        /// <remarks/>
        public void DeleteProfileServiceAsync(string Token, int GroupID, int ServiceID, int SecurityLevelID, object userState) {
            if ((this.DeleteProfileServiceOperationCompleted == null)) {
                this.DeleteProfileServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfileServiceOperationCompleted);
            }
            this.InvokeAsync("DeleteProfileService", new object[] {
                        Token,
                        GroupID,
                        ServiceID,
                        SecurityLevelID}, this.DeleteProfileServiceOperationCompleted, userState);
        }
        
        private void OnDeleteProfileServiceOperationCompleted(object arg) {
            if ((this.DeleteProfileServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProfileServiceCompleted(this, new DeleteProfileServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetProductServiceList", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetProductServiceList(string Token, int ProductID) {
            object[] results = this.Invoke("GetProductServiceList", new object[] {
                        Token,
                        ProductID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductServiceListAsync(string Token, int ProductID) {
            this.GetProductServiceListAsync(Token, ProductID, null);
        }
        
        /// <remarks/>
        public void GetProductServiceListAsync(string Token, int ProductID, object userState) {
            if ((this.GetProductServiceListOperationCompleted == null)) {
                this.GetProductServiceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductServiceListOperationCompleted);
            }
            this.InvokeAsync("GetProductServiceList", new object[] {
                        Token,
                        ProductID}, this.GetProductServiceListOperationCompleted, userState);
        }
        
        private void OnGetProductServiceListOperationCompleted(object arg) {
            if ((this.GetProductServiceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductServiceListCompleted(this, new GetProductServiceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/SaveGroup", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SaveGroup(string Token, int GroupID, string Description, int GroupStatusID) {
            object[] results = this.Invoke("SaveGroup", new object[] {
                        Token,
                        GroupID,
                        Description,
                        GroupStatusID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SaveGroupAsync(string Token, int GroupID, string Description, int GroupStatusID) {
            this.SaveGroupAsync(Token, GroupID, Description, GroupStatusID, null);
        }
        
        /// <remarks/>
        public void SaveGroupAsync(string Token, int GroupID, string Description, int GroupStatusID, object userState) {
            if ((this.SaveGroupOperationCompleted == null)) {
                this.SaveGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveGroupOperationCompleted);
            }
            this.InvokeAsync("SaveGroup", new object[] {
                        Token,
                        GroupID,
                        Description,
                        GroupStatusID}, this.SaveGroupOperationCompleted, userState);
        }
        
        private void OnSaveGroupOperationCompleted(object arg) {
            if ((this.SaveGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveGroupCompleted(this, new SaveGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetGroup", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGroup(int GroupID) {
            object[] results = this.Invoke("GetGroup", new object[] {
                        GroupID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupAsync(int GroupID) {
            this.GetGroupAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void GetGroupAsync(int GroupID, object userState) {
            if ((this.GetGroupOperationCompleted == null)) {
                this.GetGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupOperationCompleted);
            }
            this.InvokeAsync("GetGroup", new object[] {
                        GroupID}, this.GetGroupOperationCompleted, userState);
        }
        
        private void OnGetGroupOperationCompleted(object arg) {
            if ((this.GetGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupCompleted(this, new GetGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetGroupList", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGroupList() {
            object[] results = this.Invoke("GetGroupList", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupListAsync() {
            this.GetGroupListAsync(null);
        }
        
        /// <remarks/>
        public void GetGroupListAsync(object userState) {
            if ((this.GetGroupListOperationCompleted == null)) {
                this.GetGroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupListOperationCompleted);
            }
            this.InvokeAsync("GetGroupList", new object[0], this.GetGroupListOperationCompleted, userState);
        }
        
        private void OnGetGroupListOperationCompleted(object arg) {
            if ((this.GetGroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupListCompleted(this, new GetGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetGroupMemberList", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGroupMemberList(int GroupID) {
            object[] results = this.Invoke("GetGroupMemberList", new object[] {
                        GroupID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupMemberListAsync(int GroupID) {
            this.GetGroupMemberListAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void GetGroupMemberListAsync(int GroupID, object userState) {
            if ((this.GetGroupMemberListOperationCompleted == null)) {
                this.GetGroupMemberListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupMemberListOperationCompleted);
            }
            this.InvokeAsync("GetGroupMemberList", new object[] {
                        GroupID}, this.GetGroupMemberListOperationCompleted, userState);
        }
        
        private void OnGetGroupMemberListOperationCompleted(object arg) {
            if ((this.GetGroupMemberListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupMemberListCompleted(this, new GetGroupMemberListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/Logout", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Logout(string Token) {
            object[] results = this.Invoke("Logout", new object[] {
                        Token});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutAsync(string Token) {
            this.LogoutAsync(Token, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(string Token, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        Token}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/ValidateUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValidateUser(string Token, bool Remember) {
            object[] results = this.Invoke("ValidateUser", new object[] {
                        Token,
                        Remember});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string Token, bool Remember) {
            this.ValidateUserAsync(Token, Remember, null);
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string Token, bool Remember, object userState) {
            if ((this.ValidateUserOperationCompleted == null)) {
                this.ValidateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserOperationCompleted);
            }
            this.InvokeAsync("ValidateUser", new object[] {
                        Token,
                        Remember}, this.ValidateUserOperationCompleted, userState);
        }
        
        private void OnValidateUserOperationCompleted(object arg) {
            if ((this.ValidateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/ValidateUserService", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValidateUserService(string Token, string ServiceName, bool Remember) {
            object[] results = this.Invoke("ValidateUserService", new object[] {
                        Token,
                        ServiceName,
                        Remember});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUserServiceAsync(string Token, string ServiceName, bool Remember) {
            this.ValidateUserServiceAsync(Token, ServiceName, Remember, null);
        }
        
        /// <remarks/>
        public void ValidateUserServiceAsync(string Token, string ServiceName, bool Remember, object userState) {
            if ((this.ValidateUserServiceOperationCompleted == null)) {
                this.ValidateUserServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserServiceOperationCompleted);
            }
            this.InvokeAsync("ValidateUserService", new object[] {
                        Token,
                        ServiceName,
                        Remember}, this.ValidateUserServiceOperationCompleted, userState);
        }
        
        private void OnValidateUserServiceOperationCompleted(object arg) {
            if ((this.ValidateUserServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserServiceCompleted(this, new ValidateUserServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/Validate", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Validate(string Token) {
            object[] results = this.Invoke("Validate", new object[] {
                        Token});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAsync(string Token) {
            this.ValidateAsync(Token, null);
        }
        
        /// <remarks/>
        public void ValidateAsync(string Token, object userState) {
            if ((this.ValidateOperationCompleted == null)) {
                this.ValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateOperationCompleted);
            }
            this.InvokeAsync("Validate", new object[] {
                        Token}, this.ValidateOperationCompleted, userState);
        }
        
        private void OnValidateOperationCompleted(object arg) {
            if ((this.ValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCompleted(this, new ValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/ValidateService", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValidateService(string Token, string ServiceName) {
            object[] results = this.Invoke("ValidateService", new object[] {
                        Token,
                        ServiceName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateServiceAsync(string Token, string ServiceName) {
            this.ValidateServiceAsync(Token, ServiceName, null);
        }
        
        /// <remarks/>
        public void ValidateServiceAsync(string Token, string ServiceName, object userState) {
            if ((this.ValidateServiceOperationCompleted == null)) {
                this.ValidateServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateServiceOperationCompleted);
            }
            this.InvokeAsync("ValidateService", new object[] {
                        Token,
                        ServiceName}, this.ValidateServiceOperationCompleted, userState);
        }
        
        private void OnValidateServiceOperationCompleted(object arg) {
            if ((this.ValidateServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateServiceCompleted(this, new ValidateServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetRecruit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRecruit(int RecruitID) {
            object[] results = this.Invoke("GetRecruit", new object[] {
                        RecruitID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecruitAsync(int RecruitID) {
            this.GetRecruitAsync(RecruitID, null);
        }
        
        /// <remarks/>
        public void GetRecruitAsync(int RecruitID, object userState) {
            if ((this.GetRecruitOperationCompleted == null)) {
                this.GetRecruitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecruitOperationCompleted);
            }
            this.InvokeAsync("GetRecruit", new object[] {
                        RecruitID}, this.GetRecruitOperationCompleted, userState);
        }
        
        private void OnGetRecruitOperationCompleted(object arg) {
            if ((this.GetRecruitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecruitCompleted(this, new GetRecruitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetRecruitToken", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRecruitToken(string RecruitToken) {
            object[] results = this.Invoke("GetRecruitToken", new object[] {
                        RecruitToken});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecruitTokenAsync(string RecruitToken) {
            this.GetRecruitTokenAsync(RecruitToken, null);
        }
        
        /// <remarks/>
        public void GetRecruitTokenAsync(string RecruitToken, object userState) {
            if ((this.GetRecruitTokenOperationCompleted == null)) {
                this.GetRecruitTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecruitTokenOperationCompleted);
            }
            this.InvokeAsync("GetRecruitToken", new object[] {
                        RecruitToken}, this.GetRecruitTokenOperationCompleted, userState);
        }
        
        private void OnGetRecruitTokenOperationCompleted(object arg) {
            if ((this.GetRecruitTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecruitTokenCompleted(this, new GetRecruitTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/AddRecruit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddRecruit(string UserName, string Password, string FirstName, string Surname, string Email, string TelNo, string CellNo, int TypeID, int UserID) {
            object[] results = this.Invoke("AddRecruit", new object[] {
                        UserName,
                        Password,
                        FirstName,
                        Surname,
                        Email,
                        TelNo,
                        CellNo,
                        TypeID,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddRecruitAsync(string UserName, string Password, string FirstName, string Surname, string Email, string TelNo, string CellNo, int TypeID, int UserID) {
            this.AddRecruitAsync(UserName, Password, FirstName, Surname, Email, TelNo, CellNo, TypeID, UserID, null);
        }
        
        /// <remarks/>
        public void AddRecruitAsync(string UserName, string Password, string FirstName, string Surname, string Email, string TelNo, string CellNo, int TypeID, int UserID, object userState) {
            if ((this.AddRecruitOperationCompleted == null)) {
                this.AddRecruitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRecruitOperationCompleted);
            }
            this.InvokeAsync("AddRecruit", new object[] {
                        UserName,
                        Password,
                        FirstName,
                        Surname,
                        Email,
                        TelNo,
                        CellNo,
                        TypeID,
                        UserID}, this.AddRecruitOperationCompleted, userState);
        }
        
        private void OnAddRecruitOperationCompleted(object arg) {
            if ((this.AddRecruitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRecruitCompleted(this, new AddRecruitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/UpdateRecruit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateRecruit(int RecruitID, string UserName, string FirstName, string Surname, string Email, string TelNo, string CellNo, int UserID) {
            object[] results = this.Invoke("UpdateRecruit", new object[] {
                        RecruitID,
                        UserName,
                        FirstName,
                        Surname,
                        Email,
                        TelNo,
                        CellNo,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRecruitAsync(int RecruitID, string UserName, string FirstName, string Surname, string Email, string TelNo, string CellNo, int UserID) {
            this.UpdateRecruitAsync(RecruitID, UserName, FirstName, Surname, Email, TelNo, CellNo, UserID, null);
        }
        
        /// <remarks/>
        public void UpdateRecruitAsync(int RecruitID, string UserName, string FirstName, string Surname, string Email, string TelNo, string CellNo, int UserID, object userState) {
            if ((this.UpdateRecruitOperationCompleted == null)) {
                this.UpdateRecruitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRecruitOperationCompleted);
            }
            this.InvokeAsync("UpdateRecruit", new object[] {
                        RecruitID,
                        UserName,
                        FirstName,
                        Surname,
                        Email,
                        TelNo,
                        CellNo,
                        UserID}, this.UpdateRecruitOperationCompleted, userState);
        }
        
        private void OnUpdateRecruitOperationCompleted(object arg) {
            if ((this.UpdateRecruitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRecruitCompleted(this, new UpdateRecruitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/DeleteRecruit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteRecruit(int RecruitID) {
            object[] results = this.Invoke("DeleteRecruit", new object[] {
                        RecruitID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRecruitAsync(int RecruitID) {
            this.DeleteRecruitAsync(RecruitID, null);
        }
        
        /// <remarks/>
        public void DeleteRecruitAsync(int RecruitID, object userState) {
            if ((this.DeleteRecruitOperationCompleted == null)) {
                this.DeleteRecruitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRecruitOperationCompleted);
            }
            this.InvokeAsync("DeleteRecruit", new object[] {
                        RecruitID}, this.DeleteRecruitOperationCompleted, userState);
        }
        
        private void OnDeleteRecruitOperationCompleted(object arg) {
            if ((this.DeleteRecruitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRecruitCompleted(this, new DeleteRecruitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/TestConnection", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestConnection() {
            object[] results = this.Invoke("TestConnection", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestConnectionAsync() {
            this.TestConnectionAsync(null);
        }
        
        /// <remarks/>
        public void TestConnectionAsync(object userState) {
            if ((this.TestConnectionOperationCompleted == null)) {
                this.TestConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnectionOperationCompleted);
            }
            this.InvokeAsync("TestConnection", new object[0], this.TestConnectionOperationCompleted, userState);
        }
        
        private void OnTestConnectionOperationCompleted(object arg) {
            if ((this.TestConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnectionCompleted(this, new TestConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/Test", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/TestName", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestName() {
            object[] results = this.Invoke("TestName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestNameAsync() {
            this.TestNameAsync(null);
        }
        
        /// <remarks/>
        public void TestNameAsync(object userState) {
            if ((this.TestNameOperationCompleted == null)) {
                this.TestNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestNameOperationCompleted);
            }
            this.InvokeAsync("TestName", new object[0], this.TestNameOperationCompleted, userState);
        }
        
        private void OnTestNameOperationCompleted(object arg) {
            if ((this.TestNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestNameCompleted(this, new TestNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/TestCustom", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestCustom(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            object[] results = this.Invoke("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            this.TestCustomAsync(Format, RootName, ResultName, CodeName, DescriptionName, null);
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName, object userState) {
            if ((this.TestCustomOperationCompleted == null)) {
                this.TestCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCustomOperationCompleted);
            }
            this.InvokeAsync("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName}, this.TestCustomOperationCompleted, userState);
        }
        
        private void OnTestCustomOperationCompleted(object arg) {
            if ((this.TestCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCustomCompleted(this, new TestCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/TestError", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestError() {
            object[] results = this.Invoke("TestError", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestErrorAsync() {
            this.TestErrorAsync(null);
        }
        
        /// <remarks/>
        public void TestErrorAsync(object userState) {
            if ((this.TestErrorOperationCompleted == null)) {
                this.TestErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestErrorOperationCompleted);
            }
            this.InvokeAsync("TestError", new object[0], this.TestErrorOperationCompleted, userState);
        }
        
        private void OnTestErrorOperationCompleted(object arg) {
            if ((this.TestErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestErrorCompleted(this, new TestErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/TestException", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestException() {
            object[] results = this.Invoke("TestException", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestExceptionAsync() {
            this.TestExceptionAsync(null);
        }
        
        /// <remarks/>
        public void TestExceptionAsync(object userState) {
            if ((this.TestExceptionOperationCompleted == null)) {
                this.TestExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestExceptionOperationCompleted);
            }
            this.InvokeAsync("TestException", new object[0], this.TestExceptionOperationCompleted, userState);
        }
        
        private void OnTestExceptionOperationCompleted(object arg) {
            if ((this.TestExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestExceptionCompleted(this, new TestExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegisterUserCompletedEventHandler(object sender, RegisterUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateUserPasswordCompletedEventHandler(object sender, UpdateUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateUserDetailsCompletedEventHandler(object sender, UpdateUserDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveUserCompletedEventHandler(object sender, RemoveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddUserProfileCompletedEventHandler(object sender, AddUserProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveUserProfileCompletedEventHandler(object sender, RemoveUserProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPersonStatusListCompletedEventHandler(object sender, GetPersonStatusListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserProfileCompletedEventHandler(object sender, GetUserProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserProfilesCompletedEventHandler(object sender, GetUserProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUserListCompletedEventHandler(object sender, SearchUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FindUsersCompletedEventHandler(object sender, FindUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUserListAllCompletedEventHandler(object sender, SearchUserListAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUserListAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUserListAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FindUsersAllCompletedEventHandler(object sender, FindUsersAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindUsersAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindUsersAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUsersSortCompletedEventHandler(object sender, GetUsersSortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersSortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersSortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserRightsCompletedEventHandler(object sender, GetUserRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendPasswordCompletedEventHandler(object sender, SendPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendMessageCompletedEventHandler(object sender, SendMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveProfileCompletedEventHandler(object sender, SaveProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProfileCompletedEventHandler(object sender, GetProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProfileListCompletedEventHandler(object sender, GetProfileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveProfileCompletedEventHandler(object sender, RemoveProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveProfileServiceCompletedEventHandler(object sender, SaveProfileServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProfileServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProfileServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteProfileServiceCompletedEventHandler(object sender, DeleteProfileServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProfileServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProfileServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProductServiceListCompletedEventHandler(object sender, GetProductServiceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductServiceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductServiceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveGroupCompletedEventHandler(object sender, SaveGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGroupCompletedEventHandler(object sender, GetGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGroupListCompletedEventHandler(object sender, GetGroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGroupMemberListCompletedEventHandler(object sender, GetGroupMemberListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupMemberListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupMemberListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateUserCompletedEventHandler(object sender, ValidateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateUserServiceCompletedEventHandler(object sender, ValidateUserServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUserServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUserServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateCompletedEventHandler(object sender, ValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateServiceCompletedEventHandler(object sender, ValidateServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRecruitCompletedEventHandler(object sender, GetRecruitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecruitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecruitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRecruitTokenCompletedEventHandler(object sender, GetRecruitTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecruitTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecruitTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddRecruitCompletedEventHandler(object sender, AddRecruitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRecruitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRecruitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateRecruitCompletedEventHandler(object sender, UpdateRecruitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRecruitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRecruitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteRecruitCompletedEventHandler(object sender, DeleteRecruitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRecruitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRecruitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestConnectionCompletedEventHandler(object sender, TestConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestNameCompletedEventHandler(object sender, TestNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestCustomCompletedEventHandler(object sender, TestCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestErrorCompletedEventHandler(object sender, TestErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestExceptionCompletedEventHandler(object sender, TestExceptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591