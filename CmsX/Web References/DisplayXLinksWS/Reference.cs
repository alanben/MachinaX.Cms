//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace clickclickboom.machinaX.blogX.cmsX.DisplayXLinksWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DisplayXLinksSoap", Namespace="http://www.clickclickBOOM.com/MachinaX/DisplayX")]
    public partial class DisplayXLinks : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListDDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListFlagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSEOOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSEOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLinkLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLinkLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLinkLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkHintsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkHintOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLinkHintOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLinkHintOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLinkHintOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListFilesDDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFileXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFileIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestExceptionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DisplayXLinks() {
            this.Url = global::clickclickboom.machinaX.blogX.cmsX.Properties.Settings.Default.CmsX_2_6_0_DisplayXLinksWS_DisplayXLinks;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListDDCompletedEventHandler ListDDCompleted;
        
        /// <remarks/>
        public event ListAllCompletedEventHandler ListAllCompleted;
        
        /// <remarks/>
        public event ListCompletedEventHandler ListCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event ListGroupsCompletedEventHandler ListGroupsCompleted;
        
        /// <remarks/>
        public event ListFlagsCompletedEventHandler ListFlagsCompleted;
        
        /// <remarks/>
        public event GetCompletedEventHandler GetCompleted;
        
        /// <remarks/>
        public event GetLinkCompletedEventHandler GetLinkCompleted;
        
        /// <remarks/>
        public event AddCompletedEventHandler AddCompleted;
        
        /// <remarks/>
        public event EditCompletedEventHandler EditCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event ListLinksCompletedEventHandler ListLinksCompleted;
        
        /// <remarks/>
        public event AddPageCompletedEventHandler AddPageCompleted;
        
        /// <remarks/>
        public event EditPageCompletedEventHandler EditPageCompleted;
        
        /// <remarks/>
        public event AddSEOCompletedEventHandler AddSEOCompleted;
        
        /// <remarks/>
        public event EditSEOCompletedEventHandler EditSEOCompleted;
        
        /// <remarks/>
        public event GetBlogsCompletedEventHandler GetBlogsCompleted;
        
        /// <remarks/>
        public event GetBlogCompletedEventHandler GetBlogCompleted;
        
        /// <remarks/>
        public event AddBlogCompletedEventHandler AddBlogCompleted;
        
        /// <remarks/>
        public event EditBlogCompletedEventHandler EditBlogCompleted;
        
        /// <remarks/>
        public event DeleteBlogCompletedEventHandler DeleteBlogCompleted;
        
        /// <remarks/>
        public event GetFlagsCompletedEventHandler GetFlagsCompleted;
        
        /// <remarks/>
        public event GetFlagCompletedEventHandler GetFlagCompleted;
        
        /// <remarks/>
        public event AddFlagCompletedEventHandler AddFlagCompleted;
        
        /// <remarks/>
        public event EditFlagCompletedEventHandler EditFlagCompleted;
        
        /// <remarks/>
        public event DeleteFlagCompletedEventHandler DeleteFlagCompleted;
        
        /// <remarks/>
        public event GetLinkLinksCompletedEventHandler GetLinkLinksCompleted;
        
        /// <remarks/>
        public event GetLinkLinkCompletedEventHandler GetLinkLinkCompleted;
        
        /// <remarks/>
        public event AddLinkLinkCompletedEventHandler AddLinkLinkCompleted;
        
        /// <remarks/>
        public event EditLinkLinkCompletedEventHandler EditLinkLinkCompleted;
        
        /// <remarks/>
        public event DeleteLinkLinkCompletedEventHandler DeleteLinkLinkCompleted;
        
        /// <remarks/>
        public event GetLinkHintsCompletedEventHandler GetLinkHintsCompleted;
        
        /// <remarks/>
        public event GetLinkHintCompletedEventHandler GetLinkHintCompleted;
        
        /// <remarks/>
        public event DeleteLinkHintCompletedEventHandler DeleteLinkHintCompleted;
        
        /// <remarks/>
        public event AddLinkHintCompletedEventHandler AddLinkHintCompleted;
        
        /// <remarks/>
        public event EditLinkHintCompletedEventHandler EditLinkHintCompleted;
        
        /// <remarks/>
        public event ListFilesDDCompletedEventHandler ListFilesDDCompleted;
        
        /// <remarks/>
        public event ListFilesCompletedEventHandler ListFilesCompleted;
        
        /// <remarks/>
        public event GetFilesCompletedEventHandler GetFilesCompleted;
        
        /// <remarks/>
        public event GetFileCompletedEventHandler GetFileCompleted;
        
        /// <remarks/>
        public event GetFileXmlCompletedEventHandler GetFileXmlCompleted;
        
        /// <remarks/>
        public event SaveFileXmlCompletedEventHandler SaveFileXmlCompleted;
        
        /// <remarks/>
        public event AddFileCompletedEventHandler AddFileCompleted;
        
        /// <remarks/>
        public event AddFileIDCompletedEventHandler AddFileIDCompleted;
        
        /// <remarks/>
        public event EditFileCompletedEventHandler EditFileCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event TestNameCompletedEventHandler TestNameCompleted;
        
        /// <remarks/>
        public event TestCustomCompletedEventHandler TestCustomCompleted;
        
        /// <remarks/>
        public event TestErrorCompletedEventHandler TestErrorCompleted;
        
        /// <remarks/>
        public event TestExceptionCompletedEventHandler TestExceptionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListDD", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListDD(string blogxID) {
            object[] results = this.Invoke("ListDD", new object[] {
                        blogxID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListDDAsync(string blogxID) {
            this.ListDDAsync(blogxID, null);
        }
        
        /// <remarks/>
        public void ListDDAsync(string blogxID, object userState) {
            if ((this.ListDDOperationCompleted == null)) {
                this.ListDDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListDDOperationCompleted);
            }
            this.InvokeAsync("ListDD", new object[] {
                        blogxID}, this.ListDDOperationCompleted, userState);
        }
        
        private void OnListDDOperationCompleted(object arg) {
            if ((this.ListDDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListDDCompleted(this, new ListDDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListAll", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListAll(string blogxID, string Group, string SortBy, bool SortAscending) {
            object[] results = this.Invoke("ListAll", new object[] {
                        blogxID,
                        Group,
                        SortBy,
                        SortAscending});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListAllAsync(string blogxID, string Group, string SortBy, bool SortAscending) {
            this.ListAllAsync(blogxID, Group, SortBy, SortAscending, null);
        }
        
        /// <remarks/>
        public void ListAllAsync(string blogxID, string Group, string SortBy, bool SortAscending, object userState) {
            if ((this.ListAllOperationCompleted == null)) {
                this.ListAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllOperationCompleted);
            }
            this.InvokeAsync("ListAll", new object[] {
                        blogxID,
                        Group,
                        SortBy,
                        SortAscending}, this.ListAllOperationCompleted, userState);
        }
        
        private void OnListAllOperationCompleted(object arg) {
            if ((this.ListAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAllCompleted(this, new ListAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/List", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode List(string blogxID, string Group, string SortBy, bool SortAscending, bool SortNumber, int StartPage, int Rows) {
            object[] results = this.Invoke("List", new object[] {
                        blogxID,
                        Group,
                        SortBy,
                        SortAscending,
                        SortNumber,
                        StartPage,
                        Rows});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListAsync(string blogxID, string Group, string SortBy, bool SortAscending, bool SortNumber, int StartPage, int Rows) {
            this.ListAsync(blogxID, Group, SortBy, SortAscending, SortNumber, StartPage, Rows, null);
        }
        
        /// <remarks/>
        public void ListAsync(string blogxID, string Group, string SortBy, bool SortAscending, bool SortNumber, int StartPage, int Rows, object userState) {
            if ((this.ListOperationCompleted == null)) {
                this.ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOperationCompleted);
            }
            this.InvokeAsync("List", new object[] {
                        blogxID,
                        Group,
                        SortBy,
                        SortAscending,
                        SortNumber,
                        StartPage,
                        Rows}, this.ListOperationCompleted, userState);
        }
        
        private void OnListOperationCompleted(object arg) {
            if ((this.ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCompleted(this, new ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Search", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Search(string blogxID, int GroupSrchType, string Group, int NameSrchType, string Name, int PromptSrchType, string Prompt, string SortBy, bool SortAscending, bool SortNumber, int StartPage, int Rows) {
            object[] results = this.Invoke("Search", new object[] {
                        blogxID,
                        GroupSrchType,
                        Group,
                        NameSrchType,
                        Name,
                        PromptSrchType,
                        Prompt,
                        SortBy,
                        SortAscending,
                        SortNumber,
                        StartPage,
                        Rows});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string blogxID, int GroupSrchType, string Group, int NameSrchType, string Name, int PromptSrchType, string Prompt, string SortBy, bool SortAscending, bool SortNumber, int StartPage, int Rows) {
            this.SearchAsync(blogxID, GroupSrchType, Group, NameSrchType, Name, PromptSrchType, Prompt, SortBy, SortAscending, SortNumber, StartPage, Rows, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string blogxID, int GroupSrchType, string Group, int NameSrchType, string Name, int PromptSrchType, string Prompt, string SortBy, bool SortAscending, bool SortNumber, int StartPage, int Rows, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        blogxID,
                        GroupSrchType,
                        Group,
                        NameSrchType,
                        Name,
                        PromptSrchType,
                        Prompt,
                        SortBy,
                        SortAscending,
                        SortNumber,
                        StartPage,
                        Rows}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListGroups", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListGroups(string blogxID) {
            object[] results = this.Invoke("ListGroups", new object[] {
                        blogxID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListGroupsAsync(string blogxID) {
            this.ListGroupsAsync(blogxID, null);
        }
        
        /// <remarks/>
        public void ListGroupsAsync(string blogxID, object userState) {
            if ((this.ListGroupsOperationCompleted == null)) {
                this.ListGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGroupsOperationCompleted);
            }
            this.InvokeAsync("ListGroups", new object[] {
                        blogxID}, this.ListGroupsOperationCompleted, userState);
        }
        
        private void OnListGroupsOperationCompleted(object arg) {
            if ((this.ListGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListGroupsCompleted(this, new ListGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListFlags", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListFlags(string blogxID) {
            object[] results = this.Invoke("ListFlags", new object[] {
                        blogxID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListFlagsAsync(string blogxID) {
            this.ListFlagsAsync(blogxID, null);
        }
        
        /// <remarks/>
        public void ListFlagsAsync(string blogxID, object userState) {
            if ((this.ListFlagsOperationCompleted == null)) {
                this.ListFlagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListFlagsOperationCompleted);
            }
            this.InvokeAsync("ListFlags", new object[] {
                        blogxID}, this.ListFlagsOperationCompleted, userState);
        }
        
        private void OnListFlagsOperationCompleted(object arg) {
            if ((this.ListFlagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListFlagsCompleted(this, new ListFlagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Get", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Get(string blogxID, int LinkID) {
            object[] results = this.Invoke("Get", new object[] {
                        blogxID,
                        LinkID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAsync(string blogxID, int LinkID) {
            this.GetAsync(blogxID, LinkID, null);
        }
        
        /// <remarks/>
        public void GetAsync(string blogxID, int LinkID, object userState) {
            if ((this.GetOperationCompleted == null)) {
                this.GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationCompleted);
            }
            this.InvokeAsync("Get", new object[] {
                        blogxID,
                        LinkID}, this.GetOperationCompleted, userState);
        }
        
        private void OnGetOperationCompleted(object arg) {
            if ((this.GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleted(this, new GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetLink", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetLink(string blogxID, int LinkID) {
            object[] results = this.Invoke("GetLink", new object[] {
                        blogxID,
                        LinkID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkAsync(string blogxID, int LinkID) {
            this.GetLinkAsync(blogxID, LinkID, null);
        }
        
        /// <remarks/>
        public void GetLinkAsync(string blogxID, int LinkID, object userState) {
            if ((this.GetLinkOperationCompleted == null)) {
                this.GetLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkOperationCompleted);
            }
            this.InvokeAsync("GetLink", new object[] {
                        blogxID,
                        LinkID}, this.GetLinkOperationCompleted, userState);
        }
        
        private void OnGetLinkOperationCompleted(object arg) {
            if ((this.GetLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkCompleted(this, new GetLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Add", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Add(string blogxID, string name, string linkref, string prompt, string broker, string group, string display, string secure, string type, string tags, string track, string url) {
            object[] results = this.Invoke("Add", new object[] {
                        blogxID,
                        name,
                        linkref,
                        prompt,
                        broker,
                        group,
                        display,
                        secure,
                        type,
                        tags,
                        track,
                        url});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddAsync(string blogxID, string name, string linkref, string prompt, string broker, string group, string display, string secure, string type, string tags, string track, string url) {
            this.AddAsync(blogxID, name, linkref, prompt, broker, group, display, secure, type, tags, track, url, null);
        }
        
        /// <remarks/>
        public void AddAsync(string blogxID, string name, string linkref, string prompt, string broker, string group, string display, string secure, string type, string tags, string track, string url, object userState) {
            if ((this.AddOperationCompleted == null)) {
                this.AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationCompleted);
            }
            this.InvokeAsync("Add", new object[] {
                        blogxID,
                        name,
                        linkref,
                        prompt,
                        broker,
                        group,
                        display,
                        secure,
                        type,
                        tags,
                        track,
                        url}, this.AddOperationCompleted, userState);
        }
        
        private void OnAddOperationCompleted(object arg) {
            if ((this.AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCompleted(this, new AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Edit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Edit(string blogxID, int id, string name, string linkref, string prompt, string broker, string group, string display, string secure, string type, string tags, string track, string url) {
            object[] results = this.Invoke("Edit", new object[] {
                        blogxID,
                        id,
                        name,
                        linkref,
                        prompt,
                        broker,
                        group,
                        display,
                        secure,
                        type,
                        tags,
                        track,
                        url});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditAsync(string blogxID, int id, string name, string linkref, string prompt, string broker, string group, string display, string secure, string type, string tags, string track, string url) {
            this.EditAsync(blogxID, id, name, linkref, prompt, broker, group, display, secure, type, tags, track, url, null);
        }
        
        /// <remarks/>
        public void EditAsync(string blogxID, int id, string name, string linkref, string prompt, string broker, string group, string display, string secure, string type, string tags, string track, string url, object userState) {
            if ((this.EditOperationCompleted == null)) {
                this.EditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditOperationCompleted);
            }
            this.InvokeAsync("Edit", new object[] {
                        blogxID,
                        id,
                        name,
                        linkref,
                        prompt,
                        broker,
                        group,
                        display,
                        secure,
                        type,
                        tags,
                        track,
                        url}, this.EditOperationCompleted, userState);
        }
        
        private void OnEditOperationCompleted(object arg) {
            if ((this.EditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCompleted(this, new EditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Delete", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Delete(string blogxID, int id) {
            object[] results = this.Invoke("Delete", new object[] {
                        blogxID,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string blogxID, int id) {
            this.DeleteAsync(blogxID, id, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string blogxID, int id, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        blogxID,
                        id}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListLinks", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListLinks(string blogxID) {
            object[] results = this.Invoke("ListLinks", new object[] {
                        blogxID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListLinksAsync(string blogxID) {
            this.ListLinksAsync(blogxID, null);
        }
        
        /// <remarks/>
        public void ListLinksAsync(string blogxID, object userState) {
            if ((this.ListLinksOperationCompleted == null)) {
                this.ListLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListLinksOperationCompleted);
            }
            this.InvokeAsync("ListLinks", new object[] {
                        blogxID}, this.ListLinksOperationCompleted, userState);
        }
        
        private void OnListLinksOperationCompleted(object arg) {
            if ((this.ListLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListLinksCompleted(this, new ListLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/AddPage", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddPage(string blogxID, int LinkID, string sect, string sub, string proc, string file) {
            object[] results = this.Invoke("AddPage", new object[] {
                        blogxID,
                        LinkID,
                        sect,
                        sub,
                        proc,
                        file});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddPageAsync(string blogxID, int LinkID, string sect, string sub, string proc, string file) {
            this.AddPageAsync(blogxID, LinkID, sect, sub, proc, file, null);
        }
        
        /// <remarks/>
        public void AddPageAsync(string blogxID, int LinkID, string sect, string sub, string proc, string file, object userState) {
            if ((this.AddPageOperationCompleted == null)) {
                this.AddPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPageOperationCompleted);
            }
            this.InvokeAsync("AddPage", new object[] {
                        blogxID,
                        LinkID,
                        sect,
                        sub,
                        proc,
                        file}, this.AddPageOperationCompleted, userState);
        }
        
        private void OnAddPageOperationCompleted(object arg) {
            if ((this.AddPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPageCompleted(this, new AddPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditPage", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditPage(string blogxID, int LinkID, string sect, string sub, string proc, string file) {
            object[] results = this.Invoke("EditPage", new object[] {
                        blogxID,
                        LinkID,
                        sect,
                        sub,
                        proc,
                        file});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditPageAsync(string blogxID, int LinkID, string sect, string sub, string proc, string file) {
            this.EditPageAsync(blogxID, LinkID, sect, sub, proc, file, null);
        }
        
        /// <remarks/>
        public void EditPageAsync(string blogxID, int LinkID, string sect, string sub, string proc, string file, object userState) {
            if ((this.EditPageOperationCompleted == null)) {
                this.EditPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPageOperationCompleted);
            }
            this.InvokeAsync("EditPage", new object[] {
                        blogxID,
                        LinkID,
                        sect,
                        sub,
                        proc,
                        file}, this.EditPageOperationCompleted, userState);
        }
        
        private void OnEditPageOperationCompleted(object arg) {
            if ((this.EditPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPageCompleted(this, new EditPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/AddSEO", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddSEO(string blogxID, int LinkID, string title, string desc, string keywords) {
            object[] results = this.Invoke("AddSEO", new object[] {
                        blogxID,
                        LinkID,
                        title,
                        desc,
                        keywords});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddSEOAsync(string blogxID, int LinkID, string title, string desc, string keywords) {
            this.AddSEOAsync(blogxID, LinkID, title, desc, keywords, null);
        }
        
        /// <remarks/>
        public void AddSEOAsync(string blogxID, int LinkID, string title, string desc, string keywords, object userState) {
            if ((this.AddSEOOperationCompleted == null)) {
                this.AddSEOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSEOOperationCompleted);
            }
            this.InvokeAsync("AddSEO", new object[] {
                        blogxID,
                        LinkID,
                        title,
                        desc,
                        keywords}, this.AddSEOOperationCompleted, userState);
        }
        
        private void OnAddSEOOperationCompleted(object arg) {
            if ((this.AddSEOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSEOCompleted(this, new AddSEOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditSEO", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditSEO(string blogxID, int LinkID, string title, string desc, string keywords) {
            object[] results = this.Invoke("EditSEO", new object[] {
                        blogxID,
                        LinkID,
                        title,
                        desc,
                        keywords});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditSEOAsync(string blogxID, int LinkID, string title, string desc, string keywords) {
            this.EditSEOAsync(blogxID, LinkID, title, desc, keywords, null);
        }
        
        /// <remarks/>
        public void EditSEOAsync(string blogxID, int LinkID, string title, string desc, string keywords, object userState) {
            if ((this.EditSEOOperationCompleted == null)) {
                this.EditSEOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSEOOperationCompleted);
            }
            this.InvokeAsync("EditSEO", new object[] {
                        blogxID,
                        LinkID,
                        title,
                        desc,
                        keywords}, this.EditSEOOperationCompleted, userState);
        }
        
        private void OnEditSEOOperationCompleted(object arg) {
            if ((this.EditSEOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSEOCompleted(this, new EditSEOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetBlogs", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetBlogs(string blogxID, int LinkID) {
            object[] results = this.Invoke("GetBlogs", new object[] {
                        blogxID,
                        LinkID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlogsAsync(string blogxID, int LinkID) {
            this.GetBlogsAsync(blogxID, LinkID, null);
        }
        
        /// <remarks/>
        public void GetBlogsAsync(string blogxID, int LinkID, object userState) {
            if ((this.GetBlogsOperationCompleted == null)) {
                this.GetBlogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlogsOperationCompleted);
            }
            this.InvokeAsync("GetBlogs", new object[] {
                        blogxID,
                        LinkID}, this.GetBlogsOperationCompleted, userState);
        }
        
        private void OnGetBlogsOperationCompleted(object arg) {
            if ((this.GetBlogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlogsCompleted(this, new GetBlogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetBlog(string blogxID, int LinkID, string space, string topic, string blog) {
            object[] results = this.Invoke("GetBlog", new object[] {
                        blogxID,
                        LinkID,
                        space,
                        topic,
                        blog});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlogAsync(string blogxID, int LinkID, string space, string topic, string blog) {
            this.GetBlogAsync(blogxID, LinkID, space, topic, blog, null);
        }
        
        /// <remarks/>
        public void GetBlogAsync(string blogxID, int LinkID, string space, string topic, string blog, object userState) {
            if ((this.GetBlogOperationCompleted == null)) {
                this.GetBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlogOperationCompleted);
            }
            this.InvokeAsync("GetBlog", new object[] {
                        blogxID,
                        LinkID,
                        space,
                        topic,
                        blog}, this.GetBlogOperationCompleted, userState);
        }
        
        private void OnGetBlogOperationCompleted(object arg) {
            if ((this.GetBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlogCompleted(this, new GetBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/AddBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddBlog(string blogxID, int LinkID, string space, string topic, string blog, string position, string title) {
            object[] results = this.Invoke("AddBlog", new object[] {
                        blogxID,
                        LinkID,
                        space,
                        topic,
                        blog,
                        position,
                        title});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddBlogAsync(string blogxID, int LinkID, string space, string topic, string blog, string position, string title) {
            this.AddBlogAsync(blogxID, LinkID, space, topic, blog, position, title, null);
        }
        
        /// <remarks/>
        public void AddBlogAsync(string blogxID, int LinkID, string space, string topic, string blog, string position, string title, object userState) {
            if ((this.AddBlogOperationCompleted == null)) {
                this.AddBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBlogOperationCompleted);
            }
            this.InvokeAsync("AddBlog", new object[] {
                        blogxID,
                        LinkID,
                        space,
                        topic,
                        blog,
                        position,
                        title}, this.AddBlogOperationCompleted, userState);
        }
        
        private void OnAddBlogOperationCompleted(object arg) {
            if ((this.AddBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBlogCompleted(this, new AddBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditBlog(string blogxID, int LinkID, string space, string topic, string blog, string position, string title) {
            object[] results = this.Invoke("EditBlog", new object[] {
                        blogxID,
                        LinkID,
                        space,
                        topic,
                        blog,
                        position,
                        title});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditBlogAsync(string blogxID, int LinkID, string space, string topic, string blog, string position, string title) {
            this.EditBlogAsync(blogxID, LinkID, space, topic, blog, position, title, null);
        }
        
        /// <remarks/>
        public void EditBlogAsync(string blogxID, int LinkID, string space, string topic, string blog, string position, string title, object userState) {
            if ((this.EditBlogOperationCompleted == null)) {
                this.EditBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBlogOperationCompleted);
            }
            this.InvokeAsync("EditBlog", new object[] {
                        blogxID,
                        LinkID,
                        space,
                        topic,
                        blog,
                        position,
                        title}, this.EditBlogOperationCompleted, userState);
        }
        
        private void OnEditBlogOperationCompleted(object arg) {
            if ((this.EditBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBlogCompleted(this, new EditBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/DeleteBlog", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteBlog(string blogxID, int LinkID, string space, string topic, string blog) {
            object[] results = this.Invoke("DeleteBlog", new object[] {
                        blogxID,
                        LinkID,
                        space,
                        topic,
                        blog});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBlogAsync(string blogxID, int LinkID, string space, string topic, string blog) {
            this.DeleteBlogAsync(blogxID, LinkID, space, topic, blog, null);
        }
        
        /// <remarks/>
        public void DeleteBlogAsync(string blogxID, int LinkID, string space, string topic, string blog, object userState) {
            if ((this.DeleteBlogOperationCompleted == null)) {
                this.DeleteBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBlogOperationCompleted);
            }
            this.InvokeAsync("DeleteBlog", new object[] {
                        blogxID,
                        LinkID,
                        space,
                        topic,
                        blog}, this.DeleteBlogOperationCompleted, userState);
        }
        
        private void OnDeleteBlogOperationCompleted(object arg) {
            if ((this.DeleteBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBlogCompleted(this, new DeleteBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetFlags", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetFlags(string blogxID, int LinkID) {
            object[] results = this.Invoke("GetFlags", new object[] {
                        blogxID,
                        LinkID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlagsAsync(string blogxID, int LinkID) {
            this.GetFlagsAsync(blogxID, LinkID, null);
        }
        
        /// <remarks/>
        public void GetFlagsAsync(string blogxID, int LinkID, object userState) {
            if ((this.GetFlagsOperationCompleted == null)) {
                this.GetFlagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlagsOperationCompleted);
            }
            this.InvokeAsync("GetFlags", new object[] {
                        blogxID,
                        LinkID}, this.GetFlagsOperationCompleted, userState);
        }
        
        private void OnGetFlagsOperationCompleted(object arg) {
            if ((this.GetFlagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlagsCompleted(this, new GetFlagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetFlag", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetFlag(string blogxID, int LinkID, string flag) {
            object[] results = this.Invoke("GetFlag", new object[] {
                        blogxID,
                        LinkID,
                        flag});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlagAsync(string blogxID, int LinkID, string flag) {
            this.GetFlagAsync(blogxID, LinkID, flag, null);
        }
        
        /// <remarks/>
        public void GetFlagAsync(string blogxID, int LinkID, string flag, object userState) {
            if ((this.GetFlagOperationCompleted == null)) {
                this.GetFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlagOperationCompleted);
            }
            this.InvokeAsync("GetFlag", new object[] {
                        blogxID,
                        LinkID,
                        flag}, this.GetFlagOperationCompleted, userState);
        }
        
        private void OnGetFlagOperationCompleted(object arg) {
            if ((this.GetFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlagCompleted(this, new GetFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/AddFlag", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddFlag(string blogxID, int LinkID, string flag, string value) {
            object[] results = this.Invoke("AddFlag", new object[] {
                        blogxID,
                        LinkID,
                        flag,
                        value});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddFlagAsync(string blogxID, int LinkID, string flag, string value) {
            this.AddFlagAsync(blogxID, LinkID, flag, value, null);
        }
        
        /// <remarks/>
        public void AddFlagAsync(string blogxID, int LinkID, string flag, string value, object userState) {
            if ((this.AddFlagOperationCompleted == null)) {
                this.AddFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFlagOperationCompleted);
            }
            this.InvokeAsync("AddFlag", new object[] {
                        blogxID,
                        LinkID,
                        flag,
                        value}, this.AddFlagOperationCompleted, userState);
        }
        
        private void OnAddFlagOperationCompleted(object arg) {
            if ((this.AddFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFlagCompleted(this, new AddFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditFlag", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditFlag(string blogxID, int LinkID, string flag, string value) {
            object[] results = this.Invoke("EditFlag", new object[] {
                        blogxID,
                        LinkID,
                        flag,
                        value});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditFlagAsync(string blogxID, int LinkID, string flag, string value) {
            this.EditFlagAsync(blogxID, LinkID, flag, value, null);
        }
        
        /// <remarks/>
        public void EditFlagAsync(string blogxID, int LinkID, string flag, string value, object userState) {
            if ((this.EditFlagOperationCompleted == null)) {
                this.EditFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFlagOperationCompleted);
            }
            this.InvokeAsync("EditFlag", new object[] {
                        blogxID,
                        LinkID,
                        flag,
                        value}, this.EditFlagOperationCompleted, userState);
        }
        
        private void OnEditFlagOperationCompleted(object arg) {
            if ((this.EditFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFlagCompleted(this, new EditFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/DeleteFlag", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteFlag(string blogxID, int LinkID, string flag) {
            object[] results = this.Invoke("DeleteFlag", new object[] {
                        blogxID,
                        LinkID,
                        flag});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFlagAsync(string blogxID, int LinkID, string flag) {
            this.DeleteFlagAsync(blogxID, LinkID, flag, null);
        }
        
        /// <remarks/>
        public void DeleteFlagAsync(string blogxID, int LinkID, string flag, object userState) {
            if ((this.DeleteFlagOperationCompleted == null)) {
                this.DeleteFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFlagOperationCompleted);
            }
            this.InvokeAsync("DeleteFlag", new object[] {
                        blogxID,
                        LinkID,
                        flag}, this.DeleteFlagOperationCompleted, userState);
        }
        
        private void OnDeleteFlagOperationCompleted(object arg) {
            if ((this.DeleteFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFlagCompleted(this, new DeleteFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetLinkLinks", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetLinkLinks(string blogxID, int LinkID) {
            object[] results = this.Invoke("GetLinkLinks", new object[] {
                        blogxID,
                        LinkID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkLinksAsync(string blogxID, int LinkID) {
            this.GetLinkLinksAsync(blogxID, LinkID, null);
        }
        
        /// <remarks/>
        public void GetLinkLinksAsync(string blogxID, int LinkID, object userState) {
            if ((this.GetLinkLinksOperationCompleted == null)) {
                this.GetLinkLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkLinksOperationCompleted);
            }
            this.InvokeAsync("GetLinkLinks", new object[] {
                        blogxID,
                        LinkID}, this.GetLinkLinksOperationCompleted, userState);
        }
        
        private void OnGetLinkLinksOperationCompleted(object arg) {
            if ((this.GetLinkLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkLinksCompleted(this, new GetLinkLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetLinkLink", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetLinkLink(string blogxID, int LinkID, string RelLink) {
            object[] results = this.Invoke("GetLinkLink", new object[] {
                        blogxID,
                        LinkID,
                        RelLink});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkLinkAsync(string blogxID, int LinkID, string RelLink) {
            this.GetLinkLinkAsync(blogxID, LinkID, RelLink, null);
        }
        
        /// <remarks/>
        public void GetLinkLinkAsync(string blogxID, int LinkID, string RelLink, object userState) {
            if ((this.GetLinkLinkOperationCompleted == null)) {
                this.GetLinkLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkLinkOperationCompleted);
            }
            this.InvokeAsync("GetLinkLink", new object[] {
                        blogxID,
                        LinkID,
                        RelLink}, this.GetLinkLinkOperationCompleted, userState);
        }
        
        private void OnGetLinkLinkOperationCompleted(object arg) {
            if ((this.GetLinkLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkLinkCompleted(this, new GetLinkLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/AddLinkLink", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddLinkLink(string blogxID, int LinkID, string RelLink, string value) {
            object[] results = this.Invoke("AddLinkLink", new object[] {
                        blogxID,
                        LinkID,
                        RelLink,
                        value});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddLinkLinkAsync(string blogxID, int LinkID, string RelLink, string value) {
            this.AddLinkLinkAsync(blogxID, LinkID, RelLink, value, null);
        }
        
        /// <remarks/>
        public void AddLinkLinkAsync(string blogxID, int LinkID, string RelLink, string value, object userState) {
            if ((this.AddLinkLinkOperationCompleted == null)) {
                this.AddLinkLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLinkLinkOperationCompleted);
            }
            this.InvokeAsync("AddLinkLink", new object[] {
                        blogxID,
                        LinkID,
                        RelLink,
                        value}, this.AddLinkLinkOperationCompleted, userState);
        }
        
        private void OnAddLinkLinkOperationCompleted(object arg) {
            if ((this.AddLinkLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLinkLinkCompleted(this, new AddLinkLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditLinkLink", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditLinkLink(string blogxID, int LinkID, string RelLink, string value) {
            object[] results = this.Invoke("EditLinkLink", new object[] {
                        blogxID,
                        LinkID,
                        RelLink,
                        value});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditLinkLinkAsync(string blogxID, int LinkID, string RelLink, string value) {
            this.EditLinkLinkAsync(blogxID, LinkID, RelLink, value, null);
        }
        
        /// <remarks/>
        public void EditLinkLinkAsync(string blogxID, int LinkID, string RelLink, string value, object userState) {
            if ((this.EditLinkLinkOperationCompleted == null)) {
                this.EditLinkLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLinkLinkOperationCompleted);
            }
            this.InvokeAsync("EditLinkLink", new object[] {
                        blogxID,
                        LinkID,
                        RelLink,
                        value}, this.EditLinkLinkOperationCompleted, userState);
        }
        
        private void OnEditLinkLinkOperationCompleted(object arg) {
            if ((this.EditLinkLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLinkLinkCompleted(this, new EditLinkLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/DeleteLinkLink", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteLinkLink(string blogxID, int LinkID, string RelLink) {
            object[] results = this.Invoke("DeleteLinkLink", new object[] {
                        blogxID,
                        LinkID,
                        RelLink});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLinkLinkAsync(string blogxID, int LinkID, string RelLink) {
            this.DeleteLinkLinkAsync(blogxID, LinkID, RelLink, null);
        }
        
        /// <remarks/>
        public void DeleteLinkLinkAsync(string blogxID, int LinkID, string RelLink, object userState) {
            if ((this.DeleteLinkLinkOperationCompleted == null)) {
                this.DeleteLinkLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLinkLinkOperationCompleted);
            }
            this.InvokeAsync("DeleteLinkLink", new object[] {
                        blogxID,
                        LinkID,
                        RelLink}, this.DeleteLinkLinkOperationCompleted, userState);
        }
        
        private void OnDeleteLinkLinkOperationCompleted(object arg) {
            if ((this.DeleteLinkLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLinkLinkCompleted(this, new DeleteLinkLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetLinkHints", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetLinkHints(string blogxID, int LinkID) {
            object[] results = this.Invoke("GetLinkHints", new object[] {
                        blogxID,
                        LinkID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkHintsAsync(string blogxID, int LinkID) {
            this.GetLinkHintsAsync(blogxID, LinkID, null);
        }
        
        /// <remarks/>
        public void GetLinkHintsAsync(string blogxID, int LinkID, object userState) {
            if ((this.GetLinkHintsOperationCompleted == null)) {
                this.GetLinkHintsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkHintsOperationCompleted);
            }
            this.InvokeAsync("GetLinkHints", new object[] {
                        blogxID,
                        LinkID}, this.GetLinkHintsOperationCompleted, userState);
        }
        
        private void OnGetLinkHintsOperationCompleted(object arg) {
            if ((this.GetLinkHintsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkHintsCompleted(this, new GetLinkHintsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetLinkHint", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetLinkHint(string blogxID, int LinkID, string File, string HintID) {
            object[] results = this.Invoke("GetLinkHint", new object[] {
                        blogxID,
                        LinkID,
                        File,
                        HintID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkHintAsync(string blogxID, int LinkID, string File, string HintID) {
            this.GetLinkHintAsync(blogxID, LinkID, File, HintID, null);
        }
        
        /// <remarks/>
        public void GetLinkHintAsync(string blogxID, int LinkID, string File, string HintID, object userState) {
            if ((this.GetLinkHintOperationCompleted == null)) {
                this.GetLinkHintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkHintOperationCompleted);
            }
            this.InvokeAsync("GetLinkHint", new object[] {
                        blogxID,
                        LinkID,
                        File,
                        HintID}, this.GetLinkHintOperationCompleted, userState);
        }
        
        private void OnGetLinkHintOperationCompleted(object arg) {
            if ((this.GetLinkHintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkHintCompleted(this, new GetLinkHintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/DeleteLinkHint", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteLinkHint(string blogxID, int LinkID, string File, string HintID) {
            object[] results = this.Invoke("DeleteLinkHint", new object[] {
                        blogxID,
                        LinkID,
                        File,
                        HintID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLinkHintAsync(string blogxID, int LinkID, string File, string HintID) {
            this.DeleteLinkHintAsync(blogxID, LinkID, File, HintID, null);
        }
        
        /// <remarks/>
        public void DeleteLinkHintAsync(string blogxID, int LinkID, string File, string HintID, object userState) {
            if ((this.DeleteLinkHintOperationCompleted == null)) {
                this.DeleteLinkHintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLinkHintOperationCompleted);
            }
            this.InvokeAsync("DeleteLinkHint", new object[] {
                        blogxID,
                        LinkID,
                        File,
                        HintID}, this.DeleteLinkHintOperationCompleted, userState);
        }
        
        private void OnDeleteLinkHintOperationCompleted(object arg) {
            if ((this.DeleteLinkHintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLinkHintCompleted(this, new DeleteLinkHintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/AddLinkHint", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddLinkHint(string blogxID, int LinkID, string File, string Type, string Hint) {
            object[] results = this.Invoke("AddLinkHint", new object[] {
                        blogxID,
                        LinkID,
                        File,
                        Type,
                        Hint});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddLinkHintAsync(string blogxID, int LinkID, string File, string Type, string Hint) {
            this.AddLinkHintAsync(blogxID, LinkID, File, Type, Hint, null);
        }
        
        /// <remarks/>
        public void AddLinkHintAsync(string blogxID, int LinkID, string File, string Type, string Hint, object userState) {
            if ((this.AddLinkHintOperationCompleted == null)) {
                this.AddLinkHintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLinkHintOperationCompleted);
            }
            this.InvokeAsync("AddLinkHint", new object[] {
                        blogxID,
                        LinkID,
                        File,
                        Type,
                        Hint}, this.AddLinkHintOperationCompleted, userState);
        }
        
        private void OnAddLinkHintOperationCompleted(object arg) {
            if ((this.AddLinkHintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLinkHintCompleted(this, new AddLinkHintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditLinkHint", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditLinkHint(string blogxID, int LinkID, string File, string HintID, string Type, string Hint) {
            object[] results = this.Invoke("EditLinkHint", new object[] {
                        blogxID,
                        LinkID,
                        File,
                        HintID,
                        Type,
                        Hint});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditLinkHintAsync(string blogxID, int LinkID, string File, string HintID, string Type, string Hint) {
            this.EditLinkHintAsync(blogxID, LinkID, File, HintID, Type, Hint, null);
        }
        
        /// <remarks/>
        public void EditLinkHintAsync(string blogxID, int LinkID, string File, string HintID, string Type, string Hint, object userState) {
            if ((this.EditLinkHintOperationCompleted == null)) {
                this.EditLinkHintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLinkHintOperationCompleted);
            }
            this.InvokeAsync("EditLinkHint", new object[] {
                        blogxID,
                        LinkID,
                        File,
                        HintID,
                        Type,
                        Hint}, this.EditLinkHintOperationCompleted, userState);
        }
        
        private void OnEditLinkHintOperationCompleted(object arg) {
            if ((this.EditLinkHintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLinkHintCompleted(this, new EditLinkHintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListFilesDD", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListFilesDD(string blogxID) {
            object[] results = this.Invoke("ListFilesDD", new object[] {
                        blogxID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListFilesDDAsync(string blogxID) {
            this.ListFilesDDAsync(blogxID, null);
        }
        
        /// <remarks/>
        public void ListFilesDDAsync(string blogxID, object userState) {
            if ((this.ListFilesDDOperationCompleted == null)) {
                this.ListFilesDDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListFilesDDOperationCompleted);
            }
            this.InvokeAsync("ListFilesDD", new object[] {
                        blogxID}, this.ListFilesDDOperationCompleted, userState);
        }
        
        private void OnListFilesDDOperationCompleted(object arg) {
            if ((this.ListFilesDDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListFilesDDCompleted(this, new ListFilesDDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/ListFiles", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListFiles(string blogxID) {
            object[] results = this.Invoke("ListFiles", new object[] {
                        blogxID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListFilesAsync(string blogxID) {
            this.ListFilesAsync(blogxID, null);
        }
        
        /// <remarks/>
        public void ListFilesAsync(string blogxID, object userState) {
            if ((this.ListFilesOperationCompleted == null)) {
                this.ListFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListFilesOperationCompleted);
            }
            this.InvokeAsync("ListFiles", new object[] {
                        blogxID}, this.ListFilesOperationCompleted, userState);
        }
        
        private void OnListFilesOperationCompleted(object arg) {
            if ((this.ListFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListFilesCompleted(this, new ListFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetFiles", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetFiles(string blogxID, int LinkID) {
            object[] results = this.Invoke("GetFiles", new object[] {
                        blogxID,
                        LinkID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilesAsync(string blogxID, int LinkID) {
            this.GetFilesAsync(blogxID, LinkID, null);
        }
        
        /// <remarks/>
        public void GetFilesAsync(string blogxID, int LinkID, object userState) {
            if ((this.GetFilesOperationCompleted == null)) {
                this.GetFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilesOperationCompleted);
            }
            this.InvokeAsync("GetFiles", new object[] {
                        blogxID,
                        LinkID}, this.GetFilesOperationCompleted, userState);
        }
        
        private void OnGetFilesOperationCompleted(object arg) {
            if ((this.GetFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilesCompleted(this, new GetFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetFile", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetFile(string blogxID, int LinkID, string FileID) {
            object[] results = this.Invoke("GetFile", new object[] {
                        blogxID,
                        LinkID,
                        FileID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileAsync(string blogxID, int LinkID, string FileID) {
            this.GetFileAsync(blogxID, LinkID, FileID, null);
        }
        
        /// <remarks/>
        public void GetFileAsync(string blogxID, int LinkID, string FileID, object userState) {
            if ((this.GetFileOperationCompleted == null)) {
                this.GetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileOperationCompleted);
            }
            this.InvokeAsync("GetFile", new object[] {
                        blogxID,
                        LinkID,
                        FileID}, this.GetFileOperationCompleted, userState);
        }
        
        private void OnGetFileOperationCompleted(object arg) {
            if ((this.GetFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileCompleted(this, new GetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/GetFileXml", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetFileXml(string blogxID, int LinkID, string FileID) {
            object[] results = this.Invoke("GetFileXml", new object[] {
                        blogxID,
                        LinkID,
                        FileID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileXmlAsync(string blogxID, int LinkID, string FileID) {
            this.GetFileXmlAsync(blogxID, LinkID, FileID, null);
        }
        
        /// <remarks/>
        public void GetFileXmlAsync(string blogxID, int LinkID, string FileID, object userState) {
            if ((this.GetFileXmlOperationCompleted == null)) {
                this.GetFileXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileXmlOperationCompleted);
            }
            this.InvokeAsync("GetFileXml", new object[] {
                        blogxID,
                        LinkID,
                        FileID}, this.GetFileXmlOperationCompleted, userState);
        }
        
        private void OnGetFileXmlOperationCompleted(object arg) {
            if ((this.GetFileXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileXmlCompleted(this, new GetFileXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/SaveFileXml", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SaveFileXml(string blogxID, int LinkID, string FileID, string Xml) {
            object[] results = this.Invoke("SaveFileXml", new object[] {
                        blogxID,
                        LinkID,
                        FileID,
                        Xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFileXmlAsync(string blogxID, int LinkID, string FileID, string Xml) {
            this.SaveFileXmlAsync(blogxID, LinkID, FileID, Xml, null);
        }
        
        /// <remarks/>
        public void SaveFileXmlAsync(string blogxID, int LinkID, string FileID, string Xml, object userState) {
            if ((this.SaveFileXmlOperationCompleted == null)) {
                this.SaveFileXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFileXmlOperationCompleted);
            }
            this.InvokeAsync("SaveFileXml", new object[] {
                        blogxID,
                        LinkID,
                        FileID,
                        Xml}, this.SaveFileXmlOperationCompleted, userState);
        }
        
        private void OnSaveFileXmlOperationCompleted(object arg) {
            if ((this.SaveFileXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFileXmlCompleted(this, new SaveFileXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/AddFile", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddFile(string blogxID, int LinkID, string Sect, string SubSect, string Process, string File, string Position) {
            object[] results = this.Invoke("AddFile", new object[] {
                        blogxID,
                        LinkID,
                        Sect,
                        SubSect,
                        Process,
                        File,
                        Position});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddFileAsync(string blogxID, int LinkID, string Sect, string SubSect, string Process, string File, string Position) {
            this.AddFileAsync(blogxID, LinkID, Sect, SubSect, Process, File, Position, null);
        }
        
        /// <remarks/>
        public void AddFileAsync(string blogxID, int LinkID, string Sect, string SubSect, string Process, string File, string Position, object userState) {
            if ((this.AddFileOperationCompleted == null)) {
                this.AddFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFileOperationCompleted);
            }
            this.InvokeAsync("AddFile", new object[] {
                        blogxID,
                        LinkID,
                        Sect,
                        SubSect,
                        Process,
                        File,
                        Position}, this.AddFileOperationCompleted, userState);
        }
        
        private void OnAddFileOperationCompleted(object arg) {
            if ((this.AddFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFileCompleted(this, new AddFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/AddFileID", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddFileID(string blogxID, int LinkID, string FileID, string Position) {
            object[] results = this.Invoke("AddFileID", new object[] {
                        blogxID,
                        LinkID,
                        FileID,
                        Position});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddFileIDAsync(string blogxID, int LinkID, string FileID, string Position) {
            this.AddFileIDAsync(blogxID, LinkID, FileID, Position, null);
        }
        
        /// <remarks/>
        public void AddFileIDAsync(string blogxID, int LinkID, string FileID, string Position, object userState) {
            if ((this.AddFileIDOperationCompleted == null)) {
                this.AddFileIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFileIDOperationCompleted);
            }
            this.InvokeAsync("AddFileID", new object[] {
                        blogxID,
                        LinkID,
                        FileID,
                        Position}, this.AddFileIDOperationCompleted, userState);
        }
        
        private void OnAddFileIDOperationCompleted(object arg) {
            if ((this.AddFileIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFileIDCompleted(this, new AddFileIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/EditFile", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditFile(string blogxID, int LinkID, string FileID, string Sect, string SubSect, string Process, string File, string Position) {
            object[] results = this.Invoke("EditFile", new object[] {
                        blogxID,
                        LinkID,
                        FileID,
                        Sect,
                        SubSect,
                        Process,
                        File,
                        Position});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditFileAsync(string blogxID, int LinkID, string FileID, string Sect, string SubSect, string Process, string File, string Position) {
            this.EditFileAsync(blogxID, LinkID, FileID, Sect, SubSect, Process, File, Position, null);
        }
        
        /// <remarks/>
        public void EditFileAsync(string blogxID, int LinkID, string FileID, string Sect, string SubSect, string Process, string File, string Position, object userState) {
            if ((this.EditFileOperationCompleted == null)) {
                this.EditFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFileOperationCompleted);
            }
            this.InvokeAsync("EditFile", new object[] {
                        blogxID,
                        LinkID,
                        FileID,
                        Sect,
                        SubSect,
                        Process,
                        File,
                        Position}, this.EditFileOperationCompleted, userState);
        }
        
        private void OnEditFileOperationCompleted(object arg) {
            if ((this.EditFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFileCompleted(this, new EditFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/DeleteFile", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteFile(string blogxID, int LinkID, string FileID) {
            object[] results = this.Invoke("DeleteFile", new object[] {
                        blogxID,
                        LinkID,
                        FileID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string blogxID, int LinkID, string FileID) {
            this.DeleteFileAsync(blogxID, LinkID, FileID, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string blogxID, int LinkID, string FileID, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                        blogxID,
                        LinkID,
                        FileID}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/Test", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestName", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestName() {
            object[] results = this.Invoke("TestName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestNameAsync() {
            this.TestNameAsync(null);
        }
        
        /// <remarks/>
        public void TestNameAsync(object userState) {
            if ((this.TestNameOperationCompleted == null)) {
                this.TestNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestNameOperationCompleted);
            }
            this.InvokeAsync("TestName", new object[0], this.TestNameOperationCompleted, userState);
        }
        
        private void OnTestNameOperationCompleted(object arg) {
            if ((this.TestNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestNameCompleted(this, new TestNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestCustom", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestCustom(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            object[] results = this.Invoke("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            this.TestCustomAsync(Format, RootName, ResultName, CodeName, DescriptionName, null);
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName, object userState) {
            if ((this.TestCustomOperationCompleted == null)) {
                this.TestCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCustomOperationCompleted);
            }
            this.InvokeAsync("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName}, this.TestCustomOperationCompleted, userState);
        }
        
        private void OnTestCustomOperationCompleted(object arg) {
            if ((this.TestCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCustomCompleted(this, new TestCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestError", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestError() {
            object[] results = this.Invoke("TestError", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestErrorAsync() {
            this.TestErrorAsync(null);
        }
        
        /// <remarks/>
        public void TestErrorAsync(object userState) {
            if ((this.TestErrorOperationCompleted == null)) {
                this.TestErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestErrorOperationCompleted);
            }
            this.InvokeAsync("TestError", new object[0], this.TestErrorOperationCompleted, userState);
        }
        
        private void OnTestErrorOperationCompleted(object arg) {
            if ((this.TestErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestErrorCompleted(this, new TestErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/DisplayX/TestException", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/DisplayX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestException() {
            object[] results = this.Invoke("TestException", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestExceptionAsync() {
            this.TestExceptionAsync(null);
        }
        
        /// <remarks/>
        public void TestExceptionAsync(object userState) {
            if ((this.TestExceptionOperationCompleted == null)) {
                this.TestExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestExceptionOperationCompleted);
            }
            this.InvokeAsync("TestException", new object[0], this.TestExceptionOperationCompleted, userState);
        }
        
        private void OnTestExceptionOperationCompleted(object arg) {
            if ((this.TestExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestExceptionCompleted(this, new TestExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListDDCompletedEventHandler(object sender, ListDDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListDDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListDDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListAllCompletedEventHandler(object sender, ListAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListCompletedEventHandler(object sender, ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListGroupsCompletedEventHandler(object sender, ListGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListFlagsCompletedEventHandler(object sender, ListFlagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListFlagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListFlagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCompletedEventHandler(object sender, GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetLinkCompletedEventHandler(object sender, GetLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddCompletedEventHandler(object sender, AddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditCompletedEventHandler(object sender, EditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListLinksCompletedEventHandler(object sender, ListLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddPageCompletedEventHandler(object sender, AddPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditPageCompletedEventHandler(object sender, EditPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddSEOCompletedEventHandler(object sender, AddSEOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSEOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSEOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditSEOCompletedEventHandler(object sender, EditSEOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSEOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSEOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetBlogsCompletedEventHandler(object sender, GetBlogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetBlogCompletedEventHandler(object sender, GetBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddBlogCompletedEventHandler(object sender, AddBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditBlogCompletedEventHandler(object sender, EditBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteBlogCompletedEventHandler(object sender, DeleteBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetFlagsCompletedEventHandler(object sender, GetFlagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetFlagCompletedEventHandler(object sender, GetFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddFlagCompletedEventHandler(object sender, AddFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditFlagCompletedEventHandler(object sender, EditFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteFlagCompletedEventHandler(object sender, DeleteFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetLinkLinksCompletedEventHandler(object sender, GetLinkLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetLinkLinkCompletedEventHandler(object sender, GetLinkLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddLinkLinkCompletedEventHandler(object sender, AddLinkLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLinkLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLinkLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditLinkLinkCompletedEventHandler(object sender, EditLinkLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLinkLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLinkLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteLinkLinkCompletedEventHandler(object sender, DeleteLinkLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLinkLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLinkLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetLinkHintsCompletedEventHandler(object sender, GetLinkHintsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkHintsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkHintsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetLinkHintCompletedEventHandler(object sender, GetLinkHintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkHintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkHintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteLinkHintCompletedEventHandler(object sender, DeleteLinkHintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLinkHintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLinkHintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddLinkHintCompletedEventHandler(object sender, AddLinkHintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLinkHintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLinkHintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditLinkHintCompletedEventHandler(object sender, EditLinkHintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLinkHintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLinkHintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListFilesDDCompletedEventHandler(object sender, ListFilesDDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListFilesDDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListFilesDDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListFilesCompletedEventHandler(object sender, ListFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetFilesCompletedEventHandler(object sender, GetFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetFileCompletedEventHandler(object sender, GetFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetFileXmlCompletedEventHandler(object sender, GetFileXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SaveFileXmlCompletedEventHandler(object sender, SaveFileXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFileXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFileXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddFileCompletedEventHandler(object sender, AddFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddFileIDCompletedEventHandler(object sender, AddFileIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFileIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFileIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditFileCompletedEventHandler(object sender, EditFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteFileCompletedEventHandler(object sender, DeleteFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestNameCompletedEventHandler(object sender, TestNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestCustomCompletedEventHandler(object sender, TestCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestErrorCompletedEventHandler(object sender, TestErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestExceptionCompletedEventHandler(object sender, TestExceptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591