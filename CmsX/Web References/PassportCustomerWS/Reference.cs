//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace clickclickboom.machinaX.blogX.cmsX.PassportCustomerWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PassportX Customer ServicesSoap", Namespace="http://www.clickclickBOOM.com/MachinaX/PassportX")]
    public partial class PassportXCustomerServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginBaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHintOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUserServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecruitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecruitTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRecruitOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRecruitOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRecruitOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestExceptionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PassportXCustomerServices() {
            this.Url = global::clickclickboom.machinaX.blogX.cmsX.Properties.Settings.Default.CmsX_2_6_0_CustomerWS_PassportX_x0020_Customer_x0020_Services;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginBaseCompletedEventHandler LoginBaseCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LoginCaseCompletedEventHandler LoginCaseCompleted;
        
        /// <remarks/>
        public event RegisterUserCompletedEventHandler RegisterUserCompleted;
        
        /// <remarks/>
        public event VerifyUsernameCompletedEventHandler VerifyUsernameCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetUserIDCompletedEventHandler GetUserIDCompleted;
        
        /// <remarks/>
        public event UnlockUserCompletedEventHandler UnlockUserCompleted;
        
        /// <remarks/>
        public event GetPasswordCompletedEventHandler GetPasswordCompleted;
        
        /// <remarks/>
        public event GetHintCompletedEventHandler GetHintCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event ValidateUserCompletedEventHandler ValidateUserCompleted;
        
        /// <remarks/>
        public event ValidateUserServiceCompletedEventHandler ValidateUserServiceCompleted;
        
        /// <remarks/>
        public event ValidateCompletedEventHandler ValidateCompleted;
        
        /// <remarks/>
        public event ValidateServiceCompletedEventHandler ValidateServiceCompleted;
        
        /// <remarks/>
        public event GetRecruitCompletedEventHandler GetRecruitCompleted;
        
        /// <remarks/>
        public event GetRecruitTokenCompletedEventHandler GetRecruitTokenCompleted;
        
        /// <remarks/>
        public event AddRecruitCompletedEventHandler AddRecruitCompleted;
        
        /// <remarks/>
        public event UpdateRecruitCompletedEventHandler UpdateRecruitCompleted;
        
        /// <remarks/>
        public event DeleteRecruitCompletedEventHandler DeleteRecruitCompleted;
        
        /// <remarks/>
        public event TestConnectionCompletedEventHandler TestConnectionCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event TestNameCompletedEventHandler TestNameCompleted;
        
        /// <remarks/>
        public event TestCustomCompletedEventHandler TestCustomCompleted;
        
        /// <remarks/>
        public event TestErrorCompletedEventHandler TestErrorCompleted;
        
        /// <remarks/>
        public event TestExceptionCompletedEventHandler TestExceptionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/LoginBase", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode LoginBase(string UserName, string Password) {
            object[] results = this.Invoke("LoginBase", new object[] {
                        UserName,
                        Password});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LoginBaseAsync(string UserName, string Password) {
            this.LoginBaseAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void LoginBaseAsync(string UserName, string Password, object userState) {
            if ((this.LoginBaseOperationCompleted == null)) {
                this.LoginBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginBaseOperationCompleted);
            }
            this.InvokeAsync("LoginBase", new object[] {
                        UserName,
                        Password}, this.LoginBaseOperationCompleted, userState);
        }
        
        private void OnLoginBaseOperationCompleted(object arg) {
            if ((this.LoginBaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginBaseCompleted(this, new LoginBaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/Login", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Login(string UserName, string Password, bool Expire) {
            object[] results = this.Invoke("Login", new object[] {
                        UserName,
                        Password,
                        Expire});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string UserName, string Password, bool Expire) {
            this.LoginAsync(UserName, Password, Expire, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string UserName, string Password, bool Expire, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        UserName,
                        Password,
                        Expire}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/LoginCase", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode LoginCase(string UserName, string Password, bool Expire) {
            object[] results = this.Invoke("LoginCase", new object[] {
                        UserName,
                        Password,
                        Expire});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LoginCaseAsync(string UserName, string Password, bool Expire) {
            this.LoginCaseAsync(UserName, Password, Expire, null);
        }
        
        /// <remarks/>
        public void LoginCaseAsync(string UserName, string Password, bool Expire, object userState) {
            if ((this.LoginCaseOperationCompleted == null)) {
                this.LoginCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginCaseOperationCompleted);
            }
            this.InvokeAsync("LoginCase", new object[] {
                        UserName,
                        Password,
                        Expire}, this.LoginCaseOperationCompleted, userState);
        }
        
        private void OnLoginCaseOperationCompleted(object arg) {
            if ((this.LoginCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCaseCompleted(this, new LoginCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/RegisterUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RegisterUser(string Username, string Password, string FirstName, string Surname, string EMail, string TelNo, string CellNo) {
            object[] results = this.Invoke("RegisterUser", new object[] {
                        Username,
                        Password,
                        FirstName,
                        Surname,
                        EMail,
                        TelNo,
                        CellNo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string Username, string Password, string FirstName, string Surname, string EMail, string TelNo, string CellNo) {
            this.RegisterUserAsync(Username, Password, FirstName, Surname, EMail, TelNo, CellNo, null);
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string Username, string Password, string FirstName, string Surname, string EMail, string TelNo, string CellNo, object userState) {
            if ((this.RegisterUserOperationCompleted == null)) {
                this.RegisterUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterUserOperationCompleted);
            }
            this.InvokeAsync("RegisterUser", new object[] {
                        Username,
                        Password,
                        FirstName,
                        Surname,
                        EMail,
                        TelNo,
                        CellNo}, this.RegisterUserOperationCompleted, userState);
        }
        
        private void OnRegisterUserOperationCompleted(object arg) {
            if ((this.RegisterUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterUserCompleted(this, new RegisterUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/VerifyUsername", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VerifyUsername(string Username) {
            object[] results = this.Invoke("VerifyUsername", new object[] {
                        Username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyUsernameAsync(string Username) {
            this.VerifyUsernameAsync(Username, null);
        }
        
        /// <remarks/>
        public void VerifyUsernameAsync(string Username, object userState) {
            if ((this.VerifyUsernameOperationCompleted == null)) {
                this.VerifyUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyUsernameOperationCompleted);
            }
            this.InvokeAsync("VerifyUsername", new object[] {
                        Username}, this.VerifyUsernameOperationCompleted, userState);
        }
        
        private void OnVerifyUsernameOperationCompleted(object arg) {
            if ((this.VerifyUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyUsernameCompleted(this, new VerifyUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUser(string Username) {
            object[] results = this.Invoke("GetUser", new object[] {
                        Username});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(string Username) {
            this.GetUserAsync(Username, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(string Username, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        Username}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetUserID", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUserID(int UserID) {
            object[] results = this.Invoke("GetUserID", new object[] {
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIDAsync(int UserID) {
            this.GetUserIDAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetUserIDAsync(int UserID, object userState) {
            if ((this.GetUserIDOperationCompleted == null)) {
                this.GetUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIDOperationCompleted);
            }
            this.InvokeAsync("GetUserID", new object[] {
                        UserID}, this.GetUserIDOperationCompleted, userState);
        }
        
        private void OnGetUserIDOperationCompleted(object arg) {
            if ((this.GetUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIDCompleted(this, new GetUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/UnlockUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnlockUser(string Token) {
            object[] results = this.Invoke("UnlockUser", new object[] {
                        Token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockUserAsync(string Token) {
            this.UnlockUserAsync(Token, null);
        }
        
        /// <remarks/>
        public void UnlockUserAsync(string Token, object userState) {
            if ((this.UnlockUserOperationCompleted == null)) {
                this.UnlockUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockUserOperationCompleted);
            }
            this.InvokeAsync("UnlockUser", new object[] {
                        Token}, this.UnlockUserOperationCompleted, userState);
        }
        
        private void OnUnlockUserOperationCompleted(object arg) {
            if ((this.UnlockUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockUserCompleted(this, new UnlockUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetPassword", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPassword(string Username) {
            object[] results = this.Invoke("GetPassword", new object[] {
                        Username});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordAsync(string Username) {
            this.GetPasswordAsync(Username, null);
        }
        
        /// <remarks/>
        public void GetPasswordAsync(string Username, object userState) {
            if ((this.GetPasswordOperationCompleted == null)) {
                this.GetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordOperationCompleted);
            }
            this.InvokeAsync("GetPassword", new object[] {
                        Username}, this.GetPasswordOperationCompleted, userState);
        }
        
        private void OnGetPasswordOperationCompleted(object arg) {
            if ((this.GetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordCompleted(this, new GetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetHint", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetHint(string Username) {
            object[] results = this.Invoke("GetHint", new object[] {
                        Username});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetHintAsync(string Username) {
            this.GetHintAsync(Username, null);
        }
        
        /// <remarks/>
        public void GetHintAsync(string Username, object userState) {
            if ((this.GetHintOperationCompleted == null)) {
                this.GetHintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHintOperationCompleted);
            }
            this.InvokeAsync("GetHint", new object[] {
                        Username}, this.GetHintOperationCompleted, userState);
        }
        
        private void OnGetHintOperationCompleted(object arg) {
            if ((this.GetHintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHintCompleted(this, new GetHintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/Logout", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Logout(string Token) {
            object[] results = this.Invoke("Logout", new object[] {
                        Token});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutAsync(string Token) {
            this.LogoutAsync(Token, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(string Token, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        Token}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/ValidateUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValidateUser(string Token, bool Remember) {
            object[] results = this.Invoke("ValidateUser", new object[] {
                        Token,
                        Remember});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string Token, bool Remember) {
            this.ValidateUserAsync(Token, Remember, null);
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string Token, bool Remember, object userState) {
            if ((this.ValidateUserOperationCompleted == null)) {
                this.ValidateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserOperationCompleted);
            }
            this.InvokeAsync("ValidateUser", new object[] {
                        Token,
                        Remember}, this.ValidateUserOperationCompleted, userState);
        }
        
        private void OnValidateUserOperationCompleted(object arg) {
            if ((this.ValidateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/ValidateUserService", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValidateUserService(string Token, string ServiceName, bool Remember) {
            object[] results = this.Invoke("ValidateUserService", new object[] {
                        Token,
                        ServiceName,
                        Remember});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUserServiceAsync(string Token, string ServiceName, bool Remember) {
            this.ValidateUserServiceAsync(Token, ServiceName, Remember, null);
        }
        
        /// <remarks/>
        public void ValidateUserServiceAsync(string Token, string ServiceName, bool Remember, object userState) {
            if ((this.ValidateUserServiceOperationCompleted == null)) {
                this.ValidateUserServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserServiceOperationCompleted);
            }
            this.InvokeAsync("ValidateUserService", new object[] {
                        Token,
                        ServiceName,
                        Remember}, this.ValidateUserServiceOperationCompleted, userState);
        }
        
        private void OnValidateUserServiceOperationCompleted(object arg) {
            if ((this.ValidateUserServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserServiceCompleted(this, new ValidateUserServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/Validate", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Validate(string Token) {
            object[] results = this.Invoke("Validate", new object[] {
                        Token});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAsync(string Token) {
            this.ValidateAsync(Token, null);
        }
        
        /// <remarks/>
        public void ValidateAsync(string Token, object userState) {
            if ((this.ValidateOperationCompleted == null)) {
                this.ValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateOperationCompleted);
            }
            this.InvokeAsync("Validate", new object[] {
                        Token}, this.ValidateOperationCompleted, userState);
        }
        
        private void OnValidateOperationCompleted(object arg) {
            if ((this.ValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCompleted(this, new ValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/ValidateService", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValidateService(string Token, string ServiceName) {
            object[] results = this.Invoke("ValidateService", new object[] {
                        Token,
                        ServiceName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateServiceAsync(string Token, string ServiceName) {
            this.ValidateServiceAsync(Token, ServiceName, null);
        }
        
        /// <remarks/>
        public void ValidateServiceAsync(string Token, string ServiceName, object userState) {
            if ((this.ValidateServiceOperationCompleted == null)) {
                this.ValidateServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateServiceOperationCompleted);
            }
            this.InvokeAsync("ValidateService", new object[] {
                        Token,
                        ServiceName}, this.ValidateServiceOperationCompleted, userState);
        }
        
        private void OnValidateServiceOperationCompleted(object arg) {
            if ((this.ValidateServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateServiceCompleted(this, new ValidateServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetRecruit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRecruit(int RecruitID) {
            object[] results = this.Invoke("GetRecruit", new object[] {
                        RecruitID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecruitAsync(int RecruitID) {
            this.GetRecruitAsync(RecruitID, null);
        }
        
        /// <remarks/>
        public void GetRecruitAsync(int RecruitID, object userState) {
            if ((this.GetRecruitOperationCompleted == null)) {
                this.GetRecruitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecruitOperationCompleted);
            }
            this.InvokeAsync("GetRecruit", new object[] {
                        RecruitID}, this.GetRecruitOperationCompleted, userState);
        }
        
        private void OnGetRecruitOperationCompleted(object arg) {
            if ((this.GetRecruitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecruitCompleted(this, new GetRecruitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/GetRecruitToken", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRecruitToken(string RecruitToken) {
            object[] results = this.Invoke("GetRecruitToken", new object[] {
                        RecruitToken});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecruitTokenAsync(string RecruitToken) {
            this.GetRecruitTokenAsync(RecruitToken, null);
        }
        
        /// <remarks/>
        public void GetRecruitTokenAsync(string RecruitToken, object userState) {
            if ((this.GetRecruitTokenOperationCompleted == null)) {
                this.GetRecruitTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecruitTokenOperationCompleted);
            }
            this.InvokeAsync("GetRecruitToken", new object[] {
                        RecruitToken}, this.GetRecruitTokenOperationCompleted, userState);
        }
        
        private void OnGetRecruitTokenOperationCompleted(object arg) {
            if ((this.GetRecruitTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecruitTokenCompleted(this, new GetRecruitTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/AddRecruit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddRecruit(string UserName, string Password, string FirstName, string Surname, string Email, string TelNo, string CellNo, int TypeID, int UserID) {
            object[] results = this.Invoke("AddRecruit", new object[] {
                        UserName,
                        Password,
                        FirstName,
                        Surname,
                        Email,
                        TelNo,
                        CellNo,
                        TypeID,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddRecruitAsync(string UserName, string Password, string FirstName, string Surname, string Email, string TelNo, string CellNo, int TypeID, int UserID) {
            this.AddRecruitAsync(UserName, Password, FirstName, Surname, Email, TelNo, CellNo, TypeID, UserID, null);
        }
        
        /// <remarks/>
        public void AddRecruitAsync(string UserName, string Password, string FirstName, string Surname, string Email, string TelNo, string CellNo, int TypeID, int UserID, object userState) {
            if ((this.AddRecruitOperationCompleted == null)) {
                this.AddRecruitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRecruitOperationCompleted);
            }
            this.InvokeAsync("AddRecruit", new object[] {
                        UserName,
                        Password,
                        FirstName,
                        Surname,
                        Email,
                        TelNo,
                        CellNo,
                        TypeID,
                        UserID}, this.AddRecruitOperationCompleted, userState);
        }
        
        private void OnAddRecruitOperationCompleted(object arg) {
            if ((this.AddRecruitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRecruitCompleted(this, new AddRecruitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/UpdateRecruit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateRecruit(int RecruitID, string UserName, string FirstName, string Surname, string Email, string TelNo, string CellNo, int UserID) {
            object[] results = this.Invoke("UpdateRecruit", new object[] {
                        RecruitID,
                        UserName,
                        FirstName,
                        Surname,
                        Email,
                        TelNo,
                        CellNo,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRecruitAsync(int RecruitID, string UserName, string FirstName, string Surname, string Email, string TelNo, string CellNo, int UserID) {
            this.UpdateRecruitAsync(RecruitID, UserName, FirstName, Surname, Email, TelNo, CellNo, UserID, null);
        }
        
        /// <remarks/>
        public void UpdateRecruitAsync(int RecruitID, string UserName, string FirstName, string Surname, string Email, string TelNo, string CellNo, int UserID, object userState) {
            if ((this.UpdateRecruitOperationCompleted == null)) {
                this.UpdateRecruitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRecruitOperationCompleted);
            }
            this.InvokeAsync("UpdateRecruit", new object[] {
                        RecruitID,
                        UserName,
                        FirstName,
                        Surname,
                        Email,
                        TelNo,
                        CellNo,
                        UserID}, this.UpdateRecruitOperationCompleted, userState);
        }
        
        private void OnUpdateRecruitOperationCompleted(object arg) {
            if ((this.UpdateRecruitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRecruitCompleted(this, new UpdateRecruitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/DeleteRecruit", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteRecruit(int RecruitID) {
            object[] results = this.Invoke("DeleteRecruit", new object[] {
                        RecruitID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRecruitAsync(int RecruitID) {
            this.DeleteRecruitAsync(RecruitID, null);
        }
        
        /// <remarks/>
        public void DeleteRecruitAsync(int RecruitID, object userState) {
            if ((this.DeleteRecruitOperationCompleted == null)) {
                this.DeleteRecruitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRecruitOperationCompleted);
            }
            this.InvokeAsync("DeleteRecruit", new object[] {
                        RecruitID}, this.DeleteRecruitOperationCompleted, userState);
        }
        
        private void OnDeleteRecruitOperationCompleted(object arg) {
            if ((this.DeleteRecruitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRecruitCompleted(this, new DeleteRecruitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/TestConnection", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestConnection() {
            object[] results = this.Invoke("TestConnection", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestConnectionAsync() {
            this.TestConnectionAsync(null);
        }
        
        /// <remarks/>
        public void TestConnectionAsync(object userState) {
            if ((this.TestConnectionOperationCompleted == null)) {
                this.TestConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnectionOperationCompleted);
            }
            this.InvokeAsync("TestConnection", new object[0], this.TestConnectionOperationCompleted, userState);
        }
        
        private void OnTestConnectionOperationCompleted(object arg) {
            if ((this.TestConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnectionCompleted(this, new TestConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/Test", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/TestName", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestName() {
            object[] results = this.Invoke("TestName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestNameAsync() {
            this.TestNameAsync(null);
        }
        
        /// <remarks/>
        public void TestNameAsync(object userState) {
            if ((this.TestNameOperationCompleted == null)) {
                this.TestNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestNameOperationCompleted);
            }
            this.InvokeAsync("TestName", new object[0], this.TestNameOperationCompleted, userState);
        }
        
        private void OnTestNameOperationCompleted(object arg) {
            if ((this.TestNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestNameCompleted(this, new TestNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/TestCustom", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestCustom(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            object[] results = this.Invoke("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            this.TestCustomAsync(Format, RootName, ResultName, CodeName, DescriptionName, null);
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName, object userState) {
            if ((this.TestCustomOperationCompleted == null)) {
                this.TestCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCustomOperationCompleted);
            }
            this.InvokeAsync("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName}, this.TestCustomOperationCompleted, userState);
        }
        
        private void OnTestCustomOperationCompleted(object arg) {
            if ((this.TestCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCustomCompleted(this, new TestCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/TestError", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestError() {
            object[] results = this.Invoke("TestError", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestErrorAsync() {
            this.TestErrorAsync(null);
        }
        
        /// <remarks/>
        public void TestErrorAsync(object userState) {
            if ((this.TestErrorOperationCompleted == null)) {
                this.TestErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestErrorOperationCompleted);
            }
            this.InvokeAsync("TestError", new object[0], this.TestErrorOperationCompleted, userState);
        }
        
        private void OnTestErrorOperationCompleted(object arg) {
            if ((this.TestErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestErrorCompleted(this, new TestErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/PassportX/TestException", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/PassportX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestException() {
            object[] results = this.Invoke("TestException", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestExceptionAsync() {
            this.TestExceptionAsync(null);
        }
        
        /// <remarks/>
        public void TestExceptionAsync(object userState) {
            if ((this.TestExceptionOperationCompleted == null)) {
                this.TestExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestExceptionOperationCompleted);
            }
            this.InvokeAsync("TestException", new object[0], this.TestExceptionOperationCompleted, userState);
        }
        
        private void OnTestExceptionOperationCompleted(object arg) {
            if ((this.TestExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestExceptionCompleted(this, new TestExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LoginBaseCompletedEventHandler(object sender, LoginBaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LoginCaseCompletedEventHandler(object sender, LoginCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RegisterUserCompletedEventHandler(object sender, RegisterUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void VerifyUsernameCompletedEventHandler(object sender, VerifyUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserIDCompletedEventHandler(object sender, GetUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UnlockUserCompletedEventHandler(object sender, UnlockUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPasswordCompletedEventHandler(object sender, GetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetHintCompletedEventHandler(object sender, GetHintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ValidateUserCompletedEventHandler(object sender, ValidateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ValidateUserServiceCompletedEventHandler(object sender, ValidateUserServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUserServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUserServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ValidateCompletedEventHandler(object sender, ValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ValidateServiceCompletedEventHandler(object sender, ValidateServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetRecruitCompletedEventHandler(object sender, GetRecruitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecruitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecruitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetRecruitTokenCompletedEventHandler(object sender, GetRecruitTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecruitTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecruitTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddRecruitCompletedEventHandler(object sender, AddRecruitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRecruitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRecruitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateRecruitCompletedEventHandler(object sender, UpdateRecruitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRecruitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRecruitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteRecruitCompletedEventHandler(object sender, DeleteRecruitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRecruitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRecruitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void TestConnectionCompletedEventHandler(object sender, TestConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void TestNameCompletedEventHandler(object sender, TestNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void TestCustomCompletedEventHandler(object sender, TestCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void TestErrorCompletedEventHandler(object sender, TestErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void TestExceptionCompletedEventHandler(object sender, TestExceptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591