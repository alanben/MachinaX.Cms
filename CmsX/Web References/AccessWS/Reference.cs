//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace XXBoom.MachinaX.BlogX.CmsX.AccessWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AccessServiceXSoap", Namespace="http://www.clickclickBOOM.com/MachinaX/ServiceX")]
    public partial class AccessServiceX : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListProfilesDropOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListProfileUsersAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListProfileUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfileUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProfileUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveProfileUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveGroupUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveGroupCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAdminUsersAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAdminUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAdminUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAdminUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdminUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdminUserAdminUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAdminUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListCollectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListCollectionsDropOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveCollectionUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCollectionUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestExceptionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AccessServiceX() {
            this.Url = global::XXBoom.MachinaX.BlogX.CmsX.Properties.Settings.Default.CmsX_2_6_0_AccessWS_AccessServiceX;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListGroupsCompletedEventHandler ListGroupsCompleted;
        
        /// <remarks/>
        public event ListProfilesDropCompletedEventHandler ListProfilesDropCompleted;
        
        /// <remarks/>
        public event AddGroupCompletedEventHandler AddGroupCompleted;
        
        /// <remarks/>
        public event GetGroupCompletedEventHandler GetGroupCompleted;
        
        /// <remarks/>
        public event UpdateGroupCompletedEventHandler UpdateGroupCompleted;
        
        /// <remarks/>
        public event RemoveGroupCompletedEventHandler RemoveGroupCompleted;
        
        /// <remarks/>
        public event ListProfileUsersAllCompletedEventHandler ListProfileUsersAllCompleted;
        
        /// <remarks/>
        public event ListProfileUsersCompletedEventHandler ListProfileUsersCompleted;
        
        /// <remarks/>
        public event GetProfileUserCompletedEventHandler GetProfileUserCompleted;
        
        /// <remarks/>
        public event AddGroupUserCompletedEventHandler AddGroupUserCompleted;
        
        /// <remarks/>
        public event AddGroupCategoryCompletedEventHandler AddGroupCategoryCompleted;
        
        /// <remarks/>
        public event UpdateProfileUserCompletedEventHandler UpdateProfileUserCompleted;
        
        /// <remarks/>
        public event RemoveProfileUserCompletedEventHandler RemoveProfileUserCompleted;
        
        /// <remarks/>
        public event RemoveGroupUsersCompletedEventHandler RemoveGroupUsersCompleted;
        
        /// <remarks/>
        public event RemoveGroupCategoriesCompletedEventHandler RemoveGroupCategoriesCompleted;
        
        /// <remarks/>
        public event ListAdminUsersAllCompletedEventHandler ListAdminUsersAllCompleted;
        
        /// <remarks/>
        public event ListAdminUsersCompletedEventHandler ListAdminUsersCompleted;
        
        /// <remarks/>
        public event AddAdminUserCompletedEventHandler AddAdminUserCompleted;
        
        /// <remarks/>
        public event UpdateAdminUserCompletedEventHandler UpdateAdminUserCompleted;
        
        /// <remarks/>
        public event GetAdminUserCompletedEventHandler GetAdminUserCompleted;
        
        /// <remarks/>
        public event GetAdminUserAdminUserCompletedEventHandler GetAdminUserAdminUserCompleted;
        
        /// <remarks/>
        public event RemoveAdminUserCompletedEventHandler RemoveAdminUserCompleted;
        
        /// <remarks/>
        public event ListCollectionsCompletedEventHandler ListCollectionsCompleted;
        
        /// <remarks/>
        public event ListCollectionsDropCompletedEventHandler ListCollectionsDropCompleted;
        
        /// <remarks/>
        public event GetCollectionCompletedEventHandler GetCollectionCompleted;
        
        /// <remarks/>
        public event RemoveCollectionUsersCompletedEventHandler RemoveCollectionUsersCompleted;
        
        /// <remarks/>
        public event AddCollectionUserCompletedEventHandler AddCollectionUserCompleted;
        
        /// <remarks/>
        public event GetRightsCompletedEventHandler GetRightsCompleted;
        
        /// <remarks/>
        public event GetUserRightsCompletedEventHandler GetUserRightsCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event TestNameCompletedEventHandler TestNameCompleted;
        
        /// <remarks/>
        public event TestCustomCompletedEventHandler TestCustomCompleted;
        
        /// <remarks/>
        public event TestErrorCompletedEventHandler TestErrorCompleted;
        
        /// <remarks/>
        public event TestExceptionCompletedEventHandler TestExceptionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/ListGroups", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListGroups(bool Is_CSV, int StartPage, string SortCol, bool SortDesc, int Rows) {
            object[] results = this.Invoke("ListGroups", new object[] {
                        Is_CSV,
                        StartPage,
                        SortCol,
                        SortDesc,
                        Rows});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListGroupsAsync(bool Is_CSV, int StartPage, string SortCol, bool SortDesc, int Rows) {
            this.ListGroupsAsync(Is_CSV, StartPage, SortCol, SortDesc, Rows, null);
        }
        
        /// <remarks/>
        public void ListGroupsAsync(bool Is_CSV, int StartPage, string SortCol, bool SortDesc, int Rows, object userState) {
            if ((this.ListGroupsOperationCompleted == null)) {
                this.ListGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGroupsOperationCompleted);
            }
            this.InvokeAsync("ListGroups", new object[] {
                        Is_CSV,
                        StartPage,
                        SortCol,
                        SortDesc,
                        Rows}, this.ListGroupsOperationCompleted, userState);
        }
        
        private void OnListGroupsOperationCompleted(object arg) {
            if ((this.ListGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListGroupsCompleted(this, new ListGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/ListProfilesDrop", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListProfilesDrop(bool Is_CSV, int AwardID, int CategoryCollectionID, int StartPage, string SortCol, bool SortDesc, int Rows) {
            object[] results = this.Invoke("ListProfilesDrop", new object[] {
                        Is_CSV,
                        AwardID,
                        CategoryCollectionID,
                        StartPage,
                        SortCol,
                        SortDesc,
                        Rows});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListProfilesDropAsync(bool Is_CSV, int AwardID, int CategoryCollectionID, int StartPage, string SortCol, bool SortDesc, int Rows) {
            this.ListProfilesDropAsync(Is_CSV, AwardID, CategoryCollectionID, StartPage, SortCol, SortDesc, Rows, null);
        }
        
        /// <remarks/>
        public void ListProfilesDropAsync(bool Is_CSV, int AwardID, int CategoryCollectionID, int StartPage, string SortCol, bool SortDesc, int Rows, object userState) {
            if ((this.ListProfilesDropOperationCompleted == null)) {
                this.ListProfilesDropOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListProfilesDropOperationCompleted);
            }
            this.InvokeAsync("ListProfilesDrop", new object[] {
                        Is_CSV,
                        AwardID,
                        CategoryCollectionID,
                        StartPage,
                        SortCol,
                        SortDesc,
                        Rows}, this.ListProfilesDropOperationCompleted, userState);
        }
        
        private void OnListProfilesDropOperationCompleted(object arg) {
            if ((this.ListProfilesDropCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListProfilesDropCompleted(this, new ListProfilesDropCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/AddGroup", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddGroup(string Name) {
            object[] results = this.Invoke("AddGroup", new object[] {
                        Name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupAsync(string Name) {
            this.AddGroupAsync(Name, null);
        }
        
        /// <remarks/>
        public void AddGroupAsync(string Name, object userState) {
            if ((this.AddGroupOperationCompleted == null)) {
                this.AddGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupOperationCompleted);
            }
            this.InvokeAsync("AddGroup", new object[] {
                        Name}, this.AddGroupOperationCompleted, userState);
        }
        
        private void OnAddGroupOperationCompleted(object arg) {
            if ((this.AddGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupCompleted(this, new AddGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/GetGroup", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGroup(int GroupID) {
            object[] results = this.Invoke("GetGroup", new object[] {
                        GroupID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupAsync(int GroupID) {
            this.GetGroupAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void GetGroupAsync(int GroupID, object userState) {
            if ((this.GetGroupOperationCompleted == null)) {
                this.GetGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupOperationCompleted);
            }
            this.InvokeAsync("GetGroup", new object[] {
                        GroupID}, this.GetGroupOperationCompleted, userState);
        }
        
        private void OnGetGroupOperationCompleted(object arg) {
            if ((this.GetGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupCompleted(this, new GetGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/UpdateGroup", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateGroup(int ProfileID, string Name) {
            object[] results = this.Invoke("UpdateGroup", new object[] {
                        ProfileID,
                        Name});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(int ProfileID, string Name) {
            this.UpdateGroupAsync(ProfileID, Name, null);
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(int ProfileID, string Name, object userState) {
            if ((this.UpdateGroupOperationCompleted == null)) {
                this.UpdateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateGroup", new object[] {
                        ProfileID,
                        Name}, this.UpdateGroupOperationCompleted, userState);
        }
        
        private void OnUpdateGroupOperationCompleted(object arg) {
            if ((this.UpdateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupCompleted(this, new UpdateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/RemoveGroup", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RemoveGroup(int GroupID) {
            object[] results = this.Invoke("RemoveGroup", new object[] {
                        GroupID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveGroupAsync(int GroupID) {
            this.RemoveGroupAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void RemoveGroupAsync(int GroupID, object userState) {
            if ((this.RemoveGroupOperationCompleted == null)) {
                this.RemoveGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveGroup", new object[] {
                        GroupID}, this.RemoveGroupOperationCompleted, userState);
        }
        
        private void OnRemoveGroupOperationCompleted(object arg) {
            if ((this.RemoveGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveGroupCompleted(this, new RemoveGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/ListProfileUsersAll", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListProfileUsersAll(int ProfileID) {
            object[] results = this.Invoke("ListProfileUsersAll", new object[] {
                        ProfileID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListProfileUsersAllAsync(int ProfileID) {
            this.ListProfileUsersAllAsync(ProfileID, null);
        }
        
        /// <remarks/>
        public void ListProfileUsersAllAsync(int ProfileID, object userState) {
            if ((this.ListProfileUsersAllOperationCompleted == null)) {
                this.ListProfileUsersAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListProfileUsersAllOperationCompleted);
            }
            this.InvokeAsync("ListProfileUsersAll", new object[] {
                        ProfileID}, this.ListProfileUsersAllOperationCompleted, userState);
        }
        
        private void OnListProfileUsersAllOperationCompleted(object arg) {
            if ((this.ListProfileUsersAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListProfileUsersAllCompleted(this, new ListProfileUsersAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/ListProfileUsers", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListProfileUsers(int ProfileID, int UserID, string SortCol, bool SortDesc) {
            object[] results = this.Invoke("ListProfileUsers", new object[] {
                        ProfileID,
                        UserID,
                        SortCol,
                        SortDesc});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListProfileUsersAsync(int ProfileID, int UserID, string SortCol, bool SortDesc) {
            this.ListProfileUsersAsync(ProfileID, UserID, SortCol, SortDesc, null);
        }
        
        /// <remarks/>
        public void ListProfileUsersAsync(int ProfileID, int UserID, string SortCol, bool SortDesc, object userState) {
            if ((this.ListProfileUsersOperationCompleted == null)) {
                this.ListProfileUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListProfileUsersOperationCompleted);
            }
            this.InvokeAsync("ListProfileUsers", new object[] {
                        ProfileID,
                        UserID,
                        SortCol,
                        SortDesc}, this.ListProfileUsersOperationCompleted, userState);
        }
        
        private void OnListProfileUsersOperationCompleted(object arg) {
            if ((this.ListProfileUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListProfileUsersCompleted(this, new ListProfileUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/GetProfileUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetProfileUser(int ProfileID, int UserID) {
            object[] results = this.Invoke("GetProfileUser", new object[] {
                        ProfileID,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfileUserAsync(int ProfileID, int UserID) {
            this.GetProfileUserAsync(ProfileID, UserID, null);
        }
        
        /// <remarks/>
        public void GetProfileUserAsync(int ProfileID, int UserID, object userState) {
            if ((this.GetProfileUserOperationCompleted == null)) {
                this.GetProfileUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfileUserOperationCompleted);
            }
            this.InvokeAsync("GetProfileUser", new object[] {
                        ProfileID,
                        UserID}, this.GetProfileUserOperationCompleted, userState);
        }
        
        private void OnGetProfileUserOperationCompleted(object arg) {
            if ((this.GetProfileUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfileUserCompleted(this, new GetProfileUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/AddGroupUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddGroupUser(int GroupID, int UserID) {
            object[] results = this.Invoke("AddGroupUser", new object[] {
                        GroupID,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupUserAsync(int GroupID, int UserID) {
            this.AddGroupUserAsync(GroupID, UserID, null);
        }
        
        /// <remarks/>
        public void AddGroupUserAsync(int GroupID, int UserID, object userState) {
            if ((this.AddGroupUserOperationCompleted == null)) {
                this.AddGroupUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupUserOperationCompleted);
            }
            this.InvokeAsync("AddGroupUser", new object[] {
                        GroupID,
                        UserID}, this.AddGroupUserOperationCompleted, userState);
        }
        
        private void OnAddGroupUserOperationCompleted(object arg) {
            if ((this.AddGroupUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupUserCompleted(this, new AddGroupUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/AddGroupCategory", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddGroupCategory(int GroupID, int CategoryID, int RightID) {
            object[] results = this.Invoke("AddGroupCategory", new object[] {
                        GroupID,
                        CategoryID,
                        RightID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupCategoryAsync(int GroupID, int CategoryID, int RightID) {
            this.AddGroupCategoryAsync(GroupID, CategoryID, RightID, null);
        }
        
        /// <remarks/>
        public void AddGroupCategoryAsync(int GroupID, int CategoryID, int RightID, object userState) {
            if ((this.AddGroupCategoryOperationCompleted == null)) {
                this.AddGroupCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupCategoryOperationCompleted);
            }
            this.InvokeAsync("AddGroupCategory", new object[] {
                        GroupID,
                        CategoryID,
                        RightID}, this.AddGroupCategoryOperationCompleted, userState);
        }
        
        private void OnAddGroupCategoryOperationCompleted(object arg) {
            if ((this.AddGroupCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupCategoryCompleted(this, new AddGroupCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/UpdateProfileUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateProfileUser(int ProfileID, int UserID) {
            object[] results = this.Invoke("UpdateProfileUser", new object[] {
                        ProfileID,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProfileUserAsync(int ProfileID, int UserID) {
            this.UpdateProfileUserAsync(ProfileID, UserID, null);
        }
        
        /// <remarks/>
        public void UpdateProfileUserAsync(int ProfileID, int UserID, object userState) {
            if ((this.UpdateProfileUserOperationCompleted == null)) {
                this.UpdateProfileUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProfileUserOperationCompleted);
            }
            this.InvokeAsync("UpdateProfileUser", new object[] {
                        ProfileID,
                        UserID}, this.UpdateProfileUserOperationCompleted, userState);
        }
        
        private void OnUpdateProfileUserOperationCompleted(object arg) {
            if ((this.UpdateProfileUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProfileUserCompleted(this, new UpdateProfileUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/RemoveProfileUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RemoveProfileUser(int ProfileID, int UserID) {
            object[] results = this.Invoke("RemoveProfileUser", new object[] {
                        ProfileID,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveProfileUserAsync(int ProfileID, int UserID) {
            this.RemoveProfileUserAsync(ProfileID, UserID, null);
        }
        
        /// <remarks/>
        public void RemoveProfileUserAsync(int ProfileID, int UserID, object userState) {
            if ((this.RemoveProfileUserOperationCompleted == null)) {
                this.RemoveProfileUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveProfileUserOperationCompleted);
            }
            this.InvokeAsync("RemoveProfileUser", new object[] {
                        ProfileID,
                        UserID}, this.RemoveProfileUserOperationCompleted, userState);
        }
        
        private void OnRemoveProfileUserOperationCompleted(object arg) {
            if ((this.RemoveProfileUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveProfileUserCompleted(this, new RemoveProfileUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/RemoveGroupUsers", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RemoveGroupUsers(int GroupID) {
            object[] results = this.Invoke("RemoveGroupUsers", new object[] {
                        GroupID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveGroupUsersAsync(int GroupID) {
            this.RemoveGroupUsersAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void RemoveGroupUsersAsync(int GroupID, object userState) {
            if ((this.RemoveGroupUsersOperationCompleted == null)) {
                this.RemoveGroupUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGroupUsersOperationCompleted);
            }
            this.InvokeAsync("RemoveGroupUsers", new object[] {
                        GroupID}, this.RemoveGroupUsersOperationCompleted, userState);
        }
        
        private void OnRemoveGroupUsersOperationCompleted(object arg) {
            if ((this.RemoveGroupUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveGroupUsersCompleted(this, new RemoveGroupUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/RemoveGroupCategories", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RemoveGroupCategories(int GroupID) {
            object[] results = this.Invoke("RemoveGroupCategories", new object[] {
                        GroupID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveGroupCategoriesAsync(int GroupID) {
            this.RemoveGroupCategoriesAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void RemoveGroupCategoriesAsync(int GroupID, object userState) {
            if ((this.RemoveGroupCategoriesOperationCompleted == null)) {
                this.RemoveGroupCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGroupCategoriesOperationCompleted);
            }
            this.InvokeAsync("RemoveGroupCategories", new object[] {
                        GroupID}, this.RemoveGroupCategoriesOperationCompleted, userState);
        }
        
        private void OnRemoveGroupCategoriesOperationCompleted(object arg) {
            if ((this.RemoveGroupCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveGroupCategoriesCompleted(this, new RemoveGroupCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/ListAdminUsersAll", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListAdminUsersAll(bool Is_CSV, int GroupID, int StatusID, string SortCol, bool SortDesc) {
            object[] results = this.Invoke("ListAdminUsersAll", new object[] {
                        Is_CSV,
                        GroupID,
                        StatusID,
                        SortCol,
                        SortDesc});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListAdminUsersAllAsync(bool Is_CSV, int GroupID, int StatusID, string SortCol, bool SortDesc) {
            this.ListAdminUsersAllAsync(Is_CSV, GroupID, StatusID, SortCol, SortDesc, null);
        }
        
        /// <remarks/>
        public void ListAdminUsersAllAsync(bool Is_CSV, int GroupID, int StatusID, string SortCol, bool SortDesc, object userState) {
            if ((this.ListAdminUsersAllOperationCompleted == null)) {
                this.ListAdminUsersAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAdminUsersAllOperationCompleted);
            }
            this.InvokeAsync("ListAdminUsersAll", new object[] {
                        Is_CSV,
                        GroupID,
                        StatusID,
                        SortCol,
                        SortDesc}, this.ListAdminUsersAllOperationCompleted, userState);
        }
        
        private void OnListAdminUsersAllOperationCompleted(object arg) {
            if ((this.ListAdminUsersAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAdminUsersAllCompleted(this, new ListAdminUsersAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/ListAdminUsers", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListAdminUsers(bool Is_CSV, int GroupID, int StatusID, int StartPage, string SortCol, bool SortDesc, int Rows) {
            object[] results = this.Invoke("ListAdminUsers", new object[] {
                        Is_CSV,
                        GroupID,
                        StatusID,
                        StartPage,
                        SortCol,
                        SortDesc,
                        Rows});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListAdminUsersAsync(bool Is_CSV, int GroupID, int StatusID, int StartPage, string SortCol, bool SortDesc, int Rows) {
            this.ListAdminUsersAsync(Is_CSV, GroupID, StatusID, StartPage, SortCol, SortDesc, Rows, null);
        }
        
        /// <remarks/>
        public void ListAdminUsersAsync(bool Is_CSV, int GroupID, int StatusID, int StartPage, string SortCol, bool SortDesc, int Rows, object userState) {
            if ((this.ListAdminUsersOperationCompleted == null)) {
                this.ListAdminUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAdminUsersOperationCompleted);
            }
            this.InvokeAsync("ListAdminUsers", new object[] {
                        Is_CSV,
                        GroupID,
                        StatusID,
                        StartPage,
                        SortCol,
                        SortDesc,
                        Rows}, this.ListAdminUsersOperationCompleted, userState);
        }
        
        private void OnListAdminUsersOperationCompleted(object arg) {
            if ((this.ListAdminUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAdminUsersCompleted(this, new ListAdminUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/AddAdminUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddAdminUser(string Username, string Password, string Firstname, string Surname, string Email, string Telephone, string Cellphone) {
            object[] results = this.Invoke("AddAdminUser", new object[] {
                        Username,
                        Password,
                        Firstname,
                        Surname,
                        Email,
                        Telephone,
                        Cellphone});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddAdminUserAsync(string Username, string Password, string Firstname, string Surname, string Email, string Telephone, string Cellphone) {
            this.AddAdminUserAsync(Username, Password, Firstname, Surname, Email, Telephone, Cellphone, null);
        }
        
        /// <remarks/>
        public void AddAdminUserAsync(string Username, string Password, string Firstname, string Surname, string Email, string Telephone, string Cellphone, object userState) {
            if ((this.AddAdminUserOperationCompleted == null)) {
                this.AddAdminUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAdminUserOperationCompleted);
            }
            this.InvokeAsync("AddAdminUser", new object[] {
                        Username,
                        Password,
                        Firstname,
                        Surname,
                        Email,
                        Telephone,
                        Cellphone}, this.AddAdminUserOperationCompleted, userState);
        }
        
        private void OnAddAdminUserOperationCompleted(object arg) {
            if ((this.AddAdminUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAdminUserCompleted(this, new AddAdminUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/UpdateAdminUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateAdminUser(int UserID, string Username, string Password, string Firstname, string Surname, string Email, string Telephone, string Cellphone, int StatusID) {
            object[] results = this.Invoke("UpdateAdminUser", new object[] {
                        UserID,
                        Username,
                        Password,
                        Firstname,
                        Surname,
                        Email,
                        Telephone,
                        Cellphone,
                        StatusID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAdminUserAsync(int UserID, string Username, string Password, string Firstname, string Surname, string Email, string Telephone, string Cellphone, int StatusID) {
            this.UpdateAdminUserAsync(UserID, Username, Password, Firstname, Surname, Email, Telephone, Cellphone, StatusID, null);
        }
        
        /// <remarks/>
        public void UpdateAdminUserAsync(int UserID, string Username, string Password, string Firstname, string Surname, string Email, string Telephone, string Cellphone, int StatusID, object userState) {
            if ((this.UpdateAdminUserOperationCompleted == null)) {
                this.UpdateAdminUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAdminUserOperationCompleted);
            }
            this.InvokeAsync("UpdateAdminUser", new object[] {
                        UserID,
                        Username,
                        Password,
                        Firstname,
                        Surname,
                        Email,
                        Telephone,
                        Cellphone,
                        StatusID}, this.UpdateAdminUserOperationCompleted, userState);
        }
        
        private void OnUpdateAdminUserOperationCompleted(object arg) {
            if ((this.UpdateAdminUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAdminUserCompleted(this, new UpdateAdminUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/GetAdminUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAdminUser(int AdminUserID) {
            object[] results = this.Invoke("GetAdminUser", new object[] {
                        AdminUserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdminUserAsync(int AdminUserID) {
            this.GetAdminUserAsync(AdminUserID, null);
        }
        
        /// <remarks/>
        public void GetAdminUserAsync(int AdminUserID, object userState) {
            if ((this.GetAdminUserOperationCompleted == null)) {
                this.GetAdminUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdminUserOperationCompleted);
            }
            this.InvokeAsync("GetAdminUser", new object[] {
                        AdminUserID}, this.GetAdminUserOperationCompleted, userState);
        }
        
        private void OnGetAdminUserOperationCompleted(object arg) {
            if ((this.GetAdminUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdminUserCompleted(this, new GetAdminUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/GetAdminUserAdminUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAdminUserAdminUser(int AwardID, int AdminUserID) {
            object[] results = this.Invoke("GetAdminUserAdminUser", new object[] {
                        AwardID,
                        AdminUserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdminUserAdminUserAsync(int AwardID, int AdminUserID) {
            this.GetAdminUserAdminUserAsync(AwardID, AdminUserID, null);
        }
        
        /// <remarks/>
        public void GetAdminUserAdminUserAsync(int AwardID, int AdminUserID, object userState) {
            if ((this.GetAdminUserAdminUserOperationCompleted == null)) {
                this.GetAdminUserAdminUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdminUserAdminUserOperationCompleted);
            }
            this.InvokeAsync("GetAdminUserAdminUser", new object[] {
                        AwardID,
                        AdminUserID}, this.GetAdminUserAdminUserOperationCompleted, userState);
        }
        
        private void OnGetAdminUserAdminUserOperationCompleted(object arg) {
            if ((this.GetAdminUserAdminUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdminUserAdminUserCompleted(this, new GetAdminUserAdminUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/RemoveAdminUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RemoveAdminUser(int AdminUserID) {
            object[] results = this.Invoke("RemoveAdminUser", new object[] {
                        AdminUserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAdminUserAsync(int AdminUserID) {
            this.RemoveAdminUserAsync(AdminUserID, null);
        }
        
        /// <remarks/>
        public void RemoveAdminUserAsync(int AdminUserID, object userState) {
            if ((this.RemoveAdminUserOperationCompleted == null)) {
                this.RemoveAdminUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAdminUserOperationCompleted);
            }
            this.InvokeAsync("RemoveAdminUser", new object[] {
                        AdminUserID}, this.RemoveAdminUserOperationCompleted, userState);
        }
        
        private void OnRemoveAdminUserOperationCompleted(object arg) {
            if ((this.RemoveAdminUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAdminUserCompleted(this, new RemoveAdminUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/ListCollections", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListCollections(bool Is_CSV, int StartPage, string SortCol, bool SortDesc, int Rows) {
            object[] results = this.Invoke("ListCollections", new object[] {
                        Is_CSV,
                        StartPage,
                        SortCol,
                        SortDesc,
                        Rows});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListCollectionsAsync(bool Is_CSV, int StartPage, string SortCol, bool SortDesc, int Rows) {
            this.ListCollectionsAsync(Is_CSV, StartPage, SortCol, SortDesc, Rows, null);
        }
        
        /// <remarks/>
        public void ListCollectionsAsync(bool Is_CSV, int StartPage, string SortCol, bool SortDesc, int Rows, object userState) {
            if ((this.ListCollectionsOperationCompleted == null)) {
                this.ListCollectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListCollectionsOperationCompleted);
            }
            this.InvokeAsync("ListCollections", new object[] {
                        Is_CSV,
                        StartPage,
                        SortCol,
                        SortDesc,
                        Rows}, this.ListCollectionsOperationCompleted, userState);
        }
        
        private void OnListCollectionsOperationCompleted(object arg) {
            if ((this.ListCollectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCollectionsCompleted(this, new ListCollectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/ListCollectionsDrop", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListCollectionsDrop(bool Is_CSV, int StartPage, string SortCol, bool SortDesc, int Rows) {
            object[] results = this.Invoke("ListCollectionsDrop", new object[] {
                        Is_CSV,
                        StartPage,
                        SortCol,
                        SortDesc,
                        Rows});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListCollectionsDropAsync(bool Is_CSV, int StartPage, string SortCol, bool SortDesc, int Rows) {
            this.ListCollectionsDropAsync(Is_CSV, StartPage, SortCol, SortDesc, Rows, null);
        }
        
        /// <remarks/>
        public void ListCollectionsDropAsync(bool Is_CSV, int StartPage, string SortCol, bool SortDesc, int Rows, object userState) {
            if ((this.ListCollectionsDropOperationCompleted == null)) {
                this.ListCollectionsDropOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListCollectionsDropOperationCompleted);
            }
            this.InvokeAsync("ListCollectionsDrop", new object[] {
                        Is_CSV,
                        StartPage,
                        SortCol,
                        SortDesc,
                        Rows}, this.ListCollectionsDropOperationCompleted, userState);
        }
        
        private void OnListCollectionsDropOperationCompleted(object arg) {
            if ((this.ListCollectionsDropCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCollectionsDropCompleted(this, new ListCollectionsDropCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/GetCollection", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCollection(int CollectionID) {
            object[] results = this.Invoke("GetCollection", new object[] {
                        CollectionID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCollectionAsync(int CollectionID) {
            this.GetCollectionAsync(CollectionID, null);
        }
        
        /// <remarks/>
        public void GetCollectionAsync(int CollectionID, object userState) {
            if ((this.GetCollectionOperationCompleted == null)) {
                this.GetCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCollectionOperationCompleted);
            }
            this.InvokeAsync("GetCollection", new object[] {
                        CollectionID}, this.GetCollectionOperationCompleted, userState);
        }
        
        private void OnGetCollectionOperationCompleted(object arg) {
            if ((this.GetCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCollectionCompleted(this, new GetCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/RemoveCollectionUsers", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RemoveCollectionUsers(int CollectionID) {
            object[] results = this.Invoke("RemoveCollectionUsers", new object[] {
                        CollectionID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveCollectionUsersAsync(int CollectionID) {
            this.RemoveCollectionUsersAsync(CollectionID, null);
        }
        
        /// <remarks/>
        public void RemoveCollectionUsersAsync(int CollectionID, object userState) {
            if ((this.RemoveCollectionUsersOperationCompleted == null)) {
                this.RemoveCollectionUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCollectionUsersOperationCompleted);
            }
            this.InvokeAsync("RemoveCollectionUsers", new object[] {
                        CollectionID}, this.RemoveCollectionUsersOperationCompleted, userState);
        }
        
        private void OnRemoveCollectionUsersOperationCompleted(object arg) {
            if ((this.RemoveCollectionUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCollectionUsersCompleted(this, new RemoveCollectionUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/AddCollectionUser", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddCollectionUser(int CollectionID, int UserID) {
            object[] results = this.Invoke("AddCollectionUser", new object[] {
                        CollectionID,
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddCollectionUserAsync(int CollectionID, int UserID) {
            this.AddCollectionUserAsync(CollectionID, UserID, null);
        }
        
        /// <remarks/>
        public void AddCollectionUserAsync(int CollectionID, int UserID, object userState) {
            if ((this.AddCollectionUserOperationCompleted == null)) {
                this.AddCollectionUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCollectionUserOperationCompleted);
            }
            this.InvokeAsync("AddCollectionUser", new object[] {
                        CollectionID,
                        UserID}, this.AddCollectionUserOperationCompleted, userState);
        }
        
        private void OnAddCollectionUserOperationCompleted(object arg) {
            if ((this.AddCollectionUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCollectionUserCompleted(this, new AddCollectionUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/GetRights", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRights(int GroupID) {
            object[] results = this.Invoke("GetRights", new object[] {
                        GroupID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRightsAsync(int GroupID) {
            this.GetRightsAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void GetRightsAsync(int GroupID, object userState) {
            if ((this.GetRightsOperationCompleted == null)) {
                this.GetRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRightsOperationCompleted);
            }
            this.InvokeAsync("GetRights", new object[] {
                        GroupID}, this.GetRightsOperationCompleted, userState);
        }
        
        private void OnGetRightsOperationCompleted(object arg) {
            if ((this.GetRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRightsCompleted(this, new GetRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/GetUserRights", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUserRights(int UserID) {
            object[] results = this.Invoke("GetUserRights", new object[] {
                        UserID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRightsAsync(int UserID) {
            this.GetUserRightsAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetUserRightsAsync(int UserID, object userState) {
            if ((this.GetUserRightsOperationCompleted == null)) {
                this.GetUserRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRightsOperationCompleted);
            }
            this.InvokeAsync("GetUserRights", new object[] {
                        UserID}, this.GetUserRightsOperationCompleted, userState);
        }
        
        private void OnGetUserRightsOperationCompleted(object arg) {
            if ((this.GetUserRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRightsCompleted(this, new GetUserRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/Test", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/TestName", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestName() {
            object[] results = this.Invoke("TestName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestNameAsync() {
            this.TestNameAsync(null);
        }
        
        /// <remarks/>
        public void TestNameAsync(object userState) {
            if ((this.TestNameOperationCompleted == null)) {
                this.TestNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestNameOperationCompleted);
            }
            this.InvokeAsync("TestName", new object[0], this.TestNameOperationCompleted, userState);
        }
        
        private void OnTestNameOperationCompleted(object arg) {
            if ((this.TestNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestNameCompleted(this, new TestNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/TestCustom", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestCustom(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            object[] results = this.Invoke("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName) {
            this.TestCustomAsync(Format, RootName, ResultName, CodeName, DescriptionName, null);
        }
        
        /// <remarks/>
        public void TestCustomAsync(string Format, string RootName, string ResultName, string CodeName, string DescriptionName, object userState) {
            if ((this.TestCustomOperationCompleted == null)) {
                this.TestCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCustomOperationCompleted);
            }
            this.InvokeAsync("TestCustom", new object[] {
                        Format,
                        RootName,
                        ResultName,
                        CodeName,
                        DescriptionName}, this.TestCustomOperationCompleted, userState);
        }
        
        private void OnTestCustomOperationCompleted(object arg) {
            if ((this.TestCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCustomCompleted(this, new TestCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/TestError", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestError() {
            object[] results = this.Invoke("TestError", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestErrorAsync() {
            this.TestErrorAsync(null);
        }
        
        /// <remarks/>
        public void TestErrorAsync(object userState) {
            if ((this.TestErrorOperationCompleted == null)) {
                this.TestErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestErrorOperationCompleted);
            }
            this.InvokeAsync("TestError", new object[0], this.TestErrorOperationCompleted, userState);
        }
        
        private void OnTestErrorOperationCompleted(object arg) {
            if ((this.TestErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestErrorCompleted(this, new TestErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clickclickBOOM.com/MachinaX/ServiceX/TestException", RequestNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", ResponseNamespace="http://www.clickclickBOOM.com/MachinaX/ServiceX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TestException() {
            object[] results = this.Invoke("TestException", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TestExceptionAsync() {
            this.TestExceptionAsync(null);
        }
        
        /// <remarks/>
        public void TestExceptionAsync(object userState) {
            if ((this.TestExceptionOperationCompleted == null)) {
                this.TestExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestExceptionOperationCompleted);
            }
            this.InvokeAsync("TestException", new object[0], this.TestExceptionOperationCompleted, userState);
        }
        
        private void OnTestExceptionOperationCompleted(object arg) {
            if ((this.TestExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestExceptionCompleted(this, new TestExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListGroupsCompletedEventHandler(object sender, ListGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListProfilesDropCompletedEventHandler(object sender, ListProfilesDropCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListProfilesDropCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListProfilesDropCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddGroupCompletedEventHandler(object sender, AddGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetGroupCompletedEventHandler(object sender, GetGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateGroupCompletedEventHandler(object sender, UpdateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveGroupCompletedEventHandler(object sender, RemoveGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListProfileUsersAllCompletedEventHandler(object sender, ListProfileUsersAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListProfileUsersAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListProfileUsersAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListProfileUsersCompletedEventHandler(object sender, ListProfileUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListProfileUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListProfileUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetProfileUserCompletedEventHandler(object sender, GetProfileUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfileUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfileUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddGroupUserCompletedEventHandler(object sender, AddGroupUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddGroupCategoryCompletedEventHandler(object sender, AddGroupCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateProfileUserCompletedEventHandler(object sender, UpdateProfileUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProfileUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProfileUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveProfileUserCompletedEventHandler(object sender, RemoveProfileUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveProfileUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveProfileUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveGroupUsersCompletedEventHandler(object sender, RemoveGroupUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveGroupUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveGroupUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveGroupCategoriesCompletedEventHandler(object sender, RemoveGroupCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveGroupCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveGroupCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListAdminUsersAllCompletedEventHandler(object sender, ListAdminUsersAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAdminUsersAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAdminUsersAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListAdminUsersCompletedEventHandler(object sender, ListAdminUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAdminUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAdminUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddAdminUserCompletedEventHandler(object sender, AddAdminUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAdminUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAdminUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateAdminUserCompletedEventHandler(object sender, UpdateAdminUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAdminUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAdminUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAdminUserCompletedEventHandler(object sender, GetAdminUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdminUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdminUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAdminUserAdminUserCompletedEventHandler(object sender, GetAdminUserAdminUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdminUserAdminUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdminUserAdminUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveAdminUserCompletedEventHandler(object sender, RemoveAdminUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveAdminUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveAdminUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListCollectionsCompletedEventHandler(object sender, ListCollectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCollectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListCollectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListCollectionsDropCompletedEventHandler(object sender, ListCollectionsDropCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCollectionsDropCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListCollectionsDropCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCollectionCompletedEventHandler(object sender, GetCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveCollectionUsersCompletedEventHandler(object sender, RemoveCollectionUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveCollectionUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveCollectionUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddCollectionUserCompletedEventHandler(object sender, AddCollectionUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCollectionUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCollectionUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRightsCompletedEventHandler(object sender, GetRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetUserRightsCompletedEventHandler(object sender, GetUserRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestNameCompletedEventHandler(object sender, TestNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestCustomCompletedEventHandler(object sender, TestCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestErrorCompletedEventHandler(object sender, TestErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TestExceptionCompletedEventHandler(object sender, TestExceptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591